{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. extensions pip install mkdocs-material pip install mkdocs-mermaid2-plugin graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!];","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"#extensions","text":"pip install mkdocs-material pip install mkdocs-mermaid2-plugin graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!];","title":"extensions"},{"location":"Openstack/DPDK/","text":"\u5728X86\u7ed3\u6784\u4e2d\uff0c\u5904\u7406\u6570\u636e\u5305\u7684\u4f20\u7edf\u65b9\u5f0f\u662fCPU\u4e2d\u65ad\u65b9\u5f0f\uff0c\u65e2\u7f51\u5361\u9a71\u52a8\u63a5\u6536\u5230\u6570\u636e\u5305\u540e\u901a\u8fc7\u4e2d\u65ad\u901a\u77e5CPU\u5904\u7406\uff0c\u7136\u540e\u7531CPU\u62f7\u8d1d\u6570\u636e\u5e76\u4ea4\u7ed9\u534f\u8bae\u6808\u3002\u5728\u6570\u636e\u91cf\u5927\u65f6\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4f1a\u4ea7\u751f\u5927\u91cfCPU\u4e2d\u65ad\uff0c\u5bfc\u81f4CPU\u65e0\u6cd5\u8fd0\u884c\u5176\u4ed6\u7a0b\u5e8f\u3002\u800cDPDK\u5219\u91c7\u7528\u8f6e\u8be2\u65b9\u5f0f\u5b9e\u73b0\u6570\u636e\u5305\u5904\u7406\u8fc7\u7a0b\uff1aDPDK\u91cd\u8f7d\u4e86\u7f51\u5361\u9a71\u52a8\uff0c\u8be5\u9a71\u52a8\u5728\u6536\u5230\u6570\u636e\u5305\u540e\u4e0d\u4e2d\u65ad\u901a\u77e5CPU\uff0c\u800c\u662f\u5c06\u6570\u636e\u5305\u901a\u8fc7\u96f6\u62f7\u8d1d\u6280\u672f\u5b58\u5165\u5185\u5b58\uff0c\u8fd9\u65f6\u5e94\u7528\u5c42\u7a0b\u5e8f\u5c31\u53ef\u4ee5\u901a\u8fc7DPDK\u63d0\u4f9b\u7684\u63a5\u53e3\uff0c\u76f4\u63a5\u4ece\u5185\u5b58\u8bfb\u53d6\u6570\u636e\u5305\u3002\u8fd9\u79cd\u5904\u7406\u65b9\u5f0f\u8282\u7701\u4e86CPU\u4e2d\u65ad\u65f6\u95f4\u3001\u5185\u5b58\u62f7\u8d1d\u65f6\u95f4\uff0c\u5e76\u5411\u5e94\u7528\u5c42\u63d0\u4f9b\u4e86\u7b80\u5355\u6613\u884c\u4e14\u9ad8\u6548\u7684\u6570\u636e\u5305\u5904\u7406\u65b9\u5f0f\uff0c\u4f7f\u5f97\u7f51\u7edc\u5e94\u7528\u7684\u5f00\u53d1\u66f4\u52a0\u65b9\u4fbf\u3002\u4f46\u662fDPDK\u9700\u8981\u7f51\u5361\u652f\u6301\uff0c\u76ee\u524d\u4ee5intel\u7684\u7f51\u5361\u4e3a\u4e3b\uff0c\u60f3\u8981\u77e5\u9053\u60a8\u7684\u7f51\u5361\u662f\u5426\u652f\u6301\uff0c\u53ef\u4ee5\u5230DPDK\u7684\u5b98\u7f51\u67e5\u8be2\uff1a http://dpdk.org \u3002","title":"DPDK"},{"location":"Openstack/Neutron/","text":"\u67b6\u6784 Neutron \u91c7\u7528\u7684\u662f\u5206\u5e03\u5f0f\u67b6\u6784\uff0c\u5305\u62ec Neutorn Server\u3001\u5404\u79cd plugin/agent\u3001database \u548c message queue\u3002 Neutron server \u63a5\u6536 api \u8bf7\u6c42\u3002 plugin/agent \u5b9e\u73b0\u8bf7\u6c42\u3002 database \u4fdd\u5b58 neutron \u7f51\u7edc\u72b6\u6001\u3002 message queue \u5b9e\u73b0\u7ec4\u4ef6\u4e4b\u95f4\u901a\u4fe1\u3002 5 \u7c7b\u7ec4\u4ef6 Neutron-server\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u4e13\u95e8\u7528\u6765\u63a5\u6536Neutron REST API\u8c03\u7528\u7684\u670d\u52a1\u5668\uff0c\u7136\u540e\u8d1f\u8d23\u5c06\u4e0d\u540c\u7684rest api\u5206\u53d1\u5230\u4e0d\u540c\u7684neutron-plugin\u4e0a\u3002 Neutron-plugin\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e0d\u540c\u7f51\u7edc\u529f\u80fd\u5b9e\u73b0\u7684\u5165\u53e3\uff0c\u5404\u4e2a\u5382\u5546\u53ef\u4ee5\u5f00\u53d1\u81ea\u5df1\u7684plugin\u3002Neutron-plugin\u63a5\u6536neutron-server\u5206\u53d1\u8fc7\u6765\u7684REST API\uff0c\u5411neutron database\u5b8c\u6210\u4e00\u4e9b\u4fe1\u606f\u7684\u6ce8\u518c\uff0c\u7136\u540e\u5c06\u5177\u4f53\u8981\u6267\u884c\u7684\u4e1a\u52a1\u64cd\u4f5c\u548c\u53c2\u6570\u901a\u77e5\u7ed9\u81ea\u8eab\u5bf9\u5e94\u7684neutron agent\u3002 Neutron-agent\u53ef\u4ee5\u76f4\u89c2\u5730\u7406\u89e3\u4e3aneutron-plugin\u5728\u8bbe\u5907\u4e0a\u7684\u4ee3\u7406\uff0c\u63a5\u6536\u76f8\u5e94\u7684neutron-plugin\u901a\u77e5\u7684\u4e1a\u52a1\u64cd\u4f5c\u548c\u53c2\u6570\uff0c\u5e76\u8f6c\u6362\u4e3a\u5177\u4f53\u7684\u8bbe\u5907\u7ea7\u64cd\u4f5c\uff0c\u4ee5\u6307\u5bfc\u8bbe\u5907\u7684\u52a8\u4f5c\u3002\u5f53\u8bbe\u5907\u672c\u5730\u53d1\u751f\u95ee\u9898\u65f6\uff0cneutron-agent\u4f1a\u5c06\u60c5\u51b5\u901a\u77e5\u7ed9neutron-plugin\u3002 Neutron database\uff0c\u987e\u540d\u601d\u4e49\u5c31\u662fNeutron\u7684\u6570\u636e\u5e93\uff0c\u4e00\u4e9b\u4e1a\u52a1\u76f8\u5173\u7684\u53c2\u6570\u90fd\u5b58\u5728\u8fd9\u91cc\u3002 Network provider\uff0c\u5373\u4e3a\u5b9e\u9645\u6267\u884c\u529f\u80fd\u7684\u7f51\u7edc\u8bbe\u5907\uff0c \u4e00\u822c\u4e3a\u865a\u62df\u4ea4\u6362\u673a \uff08OVS\u6216\u8005Linux Bridge\uff09\u3002 \u4e24\u7c7bPlugin Core-plugin\uff0cNeutron\u4e2d\u5373\u4e3aML2\uff08Modular Layer 2\uff09\uff0c\u8d1f\u8d23\u7ba1\u7406L2\u7684\u7f51\u7edc\u8fde\u63a5\u3002ML2\u4e2d\u4e3b\u8981\u5305\u62ecnetwork\u3001subnet\u3001port\u4e09\u7c7b\u6838\u5fc3\u8d44\u6e90\uff0c\u5bf9\u4e09\u7c7b\u8d44\u6e90\u8fdb\u884c\u64cd\u4f5c\u7684REST API\u88abneutron-server\u770b\u4f5cCore API\uff0c\u7531Neutron\u539f\u751f\u652f\u6301\u3002\u5176\u4e2d\uff1a \u8d44\u6e90 \u8bf4\u660e Network \u4ee3\u8868\u4e00\u4e2a\u9694\u79bb\u7684\u4e8c\u5c42\u7f51\u6bb5\uff0c\u662f\u4e3a\u521b\u5efa\u5b83\u7684\u79df\u6237\u800c\u4fdd\u7559\u7684\u4e00\u4e2a\u5e7f\u64ad\u57df\u3002subnet\u548cport\u59cb\u7ec8\u88ab\u5206\u914d\u7ed9\u67d0\u4e2a\u7279\u5b9a\u7684network\u3002Network\u7684\u7c7b\u578b\u5305\u62ecFlat\uff0cVLAN\uff0cVxLAN\uff0cGRE\u7b49\u7b49\u3002 Subnet \u4ee3\u8868\u4e00\u4e2aIPv4/v6\u7684CIDR\u5730\u5740\u6c60\uff0c\u4ee5\u53ca\u4e0e\u5176\u76f8\u5173\u7684\u914d\u7f6e\uff0c\u5982\u7f51\u5173\u3001DNS\u7b49\u7b49\uff0c\u8be5subnet\u4e2d\u7684 VM \u5b9e\u4f8b\u968f\u540e\u4f1a\u81ea\u52a8\u7ee7\u627f\u8be5\u914d\u7f6e\u3002Sunbet\u5fc5\u987b\u5173\u8054\u4e00\u4e2anetwork\u3002 Port \u4ee3\u8868\u865a\u62df\u4ea4\u6362\u673a\u4e0a\u7684\u4e00\u4e2a\u865a\u673a\u4ea4\u6362\u7aef\u53e3\u3002VM\u7684\u7f51\u5361VIF\u8fde\u63a5 port \u540e\uff0c\u5c31\u4f1a\u62e5\u6709 MAC \u5730\u5740\u548c IP \u5730\u5740\u3002Port \u7684 IP \u5730\u5740\u662f\u4ece subnet \u5730\u5740\u6c60\u4e2d\u5206\u914d\u7684\u3002 Service-plugin\uff0c\u5373\u4e3a\u9664core-plugin\u4ee5\u5916\u5176\u5b83\u7684plugin\uff0c\u5305\u62ecl3 router\u3001firewall\u3001loadbalancer\u3001VPN\u3001metering\u7b49\u7b49\uff0c\u4e3b\u8981\u5b9e\u73b0L3-L7\u7684\u7f51\u7edc\u670d\u52a1\u3002\u8fd9\u4e9bplugin\u8981\u64cd\u4f5c\u7684\u8d44\u6e90\u6bd4\u8f83\u4e30\u5bcc\uff0c\u5bf9\u8fd9\u4e9b\u8d44\u6e90\u8fdb\u884c\u64cd\u4f5c\u7684REST API\u88abneutron-server\u770b\u4f5cExtension API\uff0c\u9700\u8981\u5382\u5bb6\u81ea\u884c\u8fdb\u884c\u6269\u5c55\u3002 \u63a7\u5236\u7aef\u7684\u5b9e\u73b0 \u4eceneutron-server\u7684\u542f\u52a8\u5f00\u59cb\u8bf4\u8d77\u3002neutron-server\u7684\u542f\u52a8\u5165\u53e3\u5728neutron.server.__init__\u4e2d\uff0c\u4e3b\u51fd\u6570\u4e2d\u4e3b\u8981\u5c31\u5e72\u4e86\u4e24\u4ef6\u4e8b\uff0c \u542f\u52a8wsgi\u670d\u52a1\u5668\u76d1\u542cNeutron REST API\uff0c \u542f\u52a8rpc\u670d\u52a1\uff0c\u7528\u4e8ecore plugin\u4e0eagent\u95f4\u7684\u901a\u4fe1\uff0c\u4e24\u7c7b\u670d\u52a1\u4f5c\u4e3a\u7eff\u8272\u7ebf\u7a0b\u5e76\u53d1\u8fd0\u884c\u3002\u4eceSDN\u7684\u89d2\u5ea6\u6765\u770b\uff0cwsgi\u8d1f\u8d23Neutron\u7684\u5317\u5411\u63a5\u53e3\uff0c\u800cNeutron\u7684\u5357\u5411\u901a\u4fe1\u673a\u5236\u4e3b\u8981\u4f9d\u8d56\u4e8erpc\u6765\u5b9e\u73b0\uff08\u5f53\u7136\uff0c\u4e0d\u540c\u5382\u5bb6\u7684plugin\u53ef\u80fd\u6709\u5176\u5b83\u7684\u5357\u5411\u901a\u4fe1\u673a\u5236\uff09\u3002 Neutron\u5185\u90e8\uff0cplugin\u4e0e\u6570\u636e\u5e93\u4ea4\u4e92\uff0c\u83b7\u53d6\u4e1a\u52a1\u7684\u5168\u5c40\u53c2\u6570\uff0c\u7136\u540e\u901a\u8fc7rpc\u673a\u5236\u5c06\u64cd\u4f5c\u4e0e\u53c2\u6570\u4f20\u7ed9\u8bbe\u5907\u4e0a\u7684Agent\uff08\u67d0\u4e9bplugin\u548cML2 Mechanism Driver\u901a\u8fc7\u522b\u7684\u65b9\u5f0f\u4e0eAgent\u901a\u4fe1\uff0c\u6bd4\u5982REST API\u3001NETCONF\u7b49\uff09\u3002 \u200b RPC\u673a\u5236\u5c31\u53ef\u4ee5\u7406\u89e3\u4e3aNeutron\u7684\u5357\u5411\u901a\u4fe1\u673a\u5236\uff0cNeutron\u7684RPC\u5b9e\u73b0\u57fa\u4e8eAMPQ\u6a21\u578b\uff0cplugins\u548cagents\u4e4b\u95f4\u901a\u5e38\u91c7\u7528\u201c\u53d1\u5e03\u2014\u2014\u8ba2\u9605\u201d\u6a21\u5f0f\u4f20\u9012\u6d88\u606f\uff0c agents\u6536\u5230\u76f8\u5e94plugins\u7684 NotifyApi\u540e\uff0c\u4f1a\u56de\u8c03\u8bbe\u5907\u672c\u5730\u7684 CallBack\u6765\u64cd\u4f5c\u8bbe\u5907\uff0c\u5b8c\u6210\u4e1a\u52a1\u7684\u5e95\u5c42\u90e8\u7f72\u3002 Northbound Interface/Southbound Interface \u5317\u5411\u63a5\u53e3\uff1a\u63d0\u4f9b\u7ed9\u5176\u4ed6\u5382\u5bb6\u6216\u8fd0\u8425\u5546\u8fdb\u884c\u63a5\u5165\u548c\u7ba1\u7406\u7684\u63a5\u53e3\uff0c\u5373\u5411\u4e0a\u63d0\u4f9b\u7684\u63a5\u53e3\u3002 \u5357\u5411\u63a5\u53e3\uff1a\u7ba1\u7406\u5176\u4ed6\u5382\u5bb6\u7f51\u7ba1\u6216\u8bbe\u5907\u7684\u63a5\u53e3\uff0c\u5373\u5411\u4e0b\u63d0\u4f9b\u7684\u63a5\u53e3\u3002 2. \u8bbe\u5907\u7aef\u7684\u5b9e\u73b0 \u200b \u63a7\u5236\u7aefneutron-server\u901a\u8fc7wsgi\u63a5\u6536\u5317\u5411REST API\u8bf7\u6c42\uff0cneutron-plugin\u901a\u8fc7rpc\u4e0e\u8bbe\u5907\u7aef\u8fdb\u884c\u5357\u5411\u901a\u4fe1\u3002\u8bbe\u5907\u7aefagent\u5219\u5411\u4e0a\u901a\u8fc7rpc\u4e0e\u63a7\u5236\u7aef\u8fdb\u884c\u901a\u4fe1\uff0c\u5411\u4e0b\u5219\u76f4\u63a5\u5728\u672c\u5730\u5bf9\u7f51\u7edc\u8bbe\u5907\u8fdb\u884c\u914d\u7f6e\u3002 \u200b Neutron-agent\u7684\u5b9e\u73b0\u5f88\u591a\uff0c\u5f7c\u6b64\u4e4b\u95f4\u4e5f\u6ca1\u4ec0\u4e48\u5171\u6027\u7684\u5730\u65b9\uff0c\u4e0b\u9762\u9009\u53d6\u6bd4\u8f83\u5177\u6709\u4ee3\u8868\u6027\u7684ovs-neutron-agent\u7684\u5b9e\u73b0\u8fdb\u884c\u7b80\u5355\u7684\u4ecb\u7ecd\u3002 \u200b Ovs-neutron-agent\u7684\u542f\u52a8\u5165\u53e3\u4e3a/neutron/plugins/openvswitch/agent/ovs-neutron-agent.py\u4e2d\u7684main\u65b9\u6cd5\uff0c\u5176\u4e2d\u8d1f\u8d23\u5e72\u6d3b\u7684\u4e24\u884c\u4ee3\u7801\u5728l 1471\u548cl 1476\u3002L 1471\u5b9e\u4f8b\u5316\u4e86OVSNeutronAgent\u7c7b\uff0c\u8d1f\u8d23\u5728\u672c\u5730\u914d\u7f6eOVS\uff0c\u800cl 1476\u5219\u542f\u52a8\u4e86\u4e0e\u63a7\u5236\u7aef\u7684rpc\u901a\u4fe1\u3002 OVSNeutronAgent\u7684\u5b9e\u4f8b\u5316\u8fc7\u7a0b\u4e2d\u4f9d\u6b21\u5e72\u4e866\u4e2a\u5de5\u4f5c\uff1a 1. \u542f\u52a8ovs br-int\u7f51\u6865\uff1b 2. \u542f\u52a8rpc\uff1b 3. \u542f\u52a8ovs br-eth1\uff1b 4. \u542f\u52a8ovs br-tun\uff1b 5. \u5b9e\u4f8b\u5316OVSSecurityGroupAgent\uff1b 6. \u5f00\u59cbrpc\u8f6e\u8be2\u4e0e\u76d1\u542c\u3002 rpc_loop\u505a\u7684\u5de5\u4f5c\u4e3b\u8981\u5c31\u662f\u8f6e\u8be2\u4e00\u4e9b\u72b6\u6001\uff0c\u6839\u636e\u8fd9\u4e9b\u72b6\u6001\uff0c\u8fdb\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002 \u6bd4\u5982\u4e00\u65e6\u63a2\u6d4b\u5230\u672c\u5730\u7684OVS\u91cd\u542f\u4e86\uff08l 1295\uff0cl 1309\uff09\uff0c\u5c31\u91cd\u65b0\u521b\u5efa\u672c\u5730\u7684\u7f51\u6865\uff08l 1294-1300\uff09\uff0c\u5e76\u91cd\u65b0\u6dfb\u52a0port\uff08l 1336\uff09\uff1b \u518d\u6bd4\u5982\u4e00\u65e6rpc\u76d1\u542c\u5230update_port\u4e8b\u4ef6\uff08l 1309\uff09\uff0c\u5219\u5728\u672c\u5730\u4f7f\u80fd\u76f8\u5e94\u7684port\uff08l 1336\uff09\u3002 ovs-neutron-agent\u7684\u542f\u52a8\u4e5f\u5c31\u662f\u8fd9\u4e9b\u5de5\u4f5c\u4e86\uff0c\u542f\u52a8\u5b8c\u6bd5\u540e\uff0c\u4fbf\u5f00\u59cb\u4e86\u4e0e\u76f8\u5e94plugin\uff08OVS Plugin\u6216\u8005OVS Mechanism Driver\uff09\u7684rpc\u901a\u4fe1\u3002 NuetronServer neutron-server\u7684\u672c\u8d28\u662f\u4e00\u4e2aPython Web Server Gateway Interface\uff08WSGI\uff09\uff0c\u662f\u901a\u8fc7eventlet lib\u6765\u5b9e\u73b0\u670d\u52a1\u7684\u5f02\u6b65\u5e76\u53d1\u6a21\u578b\u7684\u3002\u5b9e\u9645\u5de5\u4f5c\u65f6\uff0c\u901a\u8fc7'serve_wsgi'\u542f\u52a8\u70b9(Entry point)\u6765\u6784\u9020\u4e86\u4e00\u4e2aNeutronApiService\u5b9e\u4f8b\uff0c\u901a\u8fc7\u8be5\u5b9e\u4f8b\u751f\u6210Eventlet\uff0cGreenpool\u6765\u8fd0\u884cWSGI app\u5e76\u56de\u5e94\u5ba2\u6237\u7aef\u8bf7\u6c42\u3002 \u7814\u7a76\u4e4b\u524d\uff0c\u9996\u5148\u9700\u8981\u5148\u4e86\u89e3\u4e0bEntry point\u7684\u6982\u5ff5\u3002 [entry_points] console_scripts = neutron-db-manage = neutron.db.migration.cli:main neutron-debug = neutron.debug.shell:main neutron-dhcp-agent = neutron.cmd.eventlet.agents.dhcp:main GRE\u6a21\u5f0f \u96a7\u9053\u6865\uff08br-tun\uff09\u6839\u636e OpenFlow \u89c4\u5219\u5c06 VLAN \u6807\u8bb0\u7684\u6d41\u91cf\u4ece\u96c6\u6210\u7f51\u6865\u8f6c\u6362\u4e3a\u96a7\u9053 ID\u3002 \u96a7\u9053\u6865\u5141\u8bb8\u4e0d\u540c\u7f51\u7edc\u7684\u5b9e\u4f8b\u5f7c\u6b64\u8fdb\u884c\u901a\u4fe1\u3002\u96a7\u9053\u6709\u5229\u4e8e\u5c01\u88c5\u5728\u975e\u5b89\u5168\u7f51\u7edc\u4e0a\u4f20\u8f93\u7684\u6d41\u91cf\uff0c\u5b83\u652f\u6301\u4e24\u5c42\u7f51\u7edc\uff0c\u5373 GRE \u548c VXLAN\u3002 **# virsh dumpxml instance-000008ed |grep bridge** <interface type='bridge'> <source bridge='**qbrc68f8b26-23**'/> <interface type='bridge'> <source bridge='**qbr7cff5be4-5c**'/> # brctl show bridge name bridge id STP enabled interfaces qbrc68f8b26-23 8000.663c2f1e30b4 no qvbc68f8b26-23 tapc68f8b26-23 \u25c6instance port id qbr7cff5be4-5c 8000.8a66ef285ffe no qvb7cff5be4-5c tap7cff5be4-5c \u25c6 instance port id #ovs-vsctl show Bridge br-int Port \"qvoc68f8b26-23\" tag: 7 Interface \"qvoc68f8b26-23\" Port \"qvo7cff5be4-5c\" tag: 6 Interface \"qvo7cff5be4-5c\" Port patch-tun Interface patch-tun type: patch options: {peer=patch-int} Bridge br-tun Port br-tun Interface br-tun type: internal Port patch-int Interface patch-int type: patch options: {peer=patch-tun} vlan\u6a21\u5f0f \u51e0\u4e2a\u5178\u578b\u6d41\u7a0b\u6848\u4f8b \u540c\u4e00\u4e2ahost\u4e0a\u540c\u4e00\u4e2a\u5b50\u7f51\u5185\u865a\u673a\u4e4b\u95f4\u7684\u901a\u4fe1\u8fc7\u7a0b \u56e0\u4e3abr-int\u662f\u4e2a\u865a\u62df\u7684\u4e8c\u5c42\u4ea4\u6362\u673a\uff0c\u6240\u4ee5\u540c\u4e00\u4e2ahost\u4e0a\u7684\u540c\u4e00\u4e2a\u5b50\u7f51\u5185\u7684\u865a\u673a\u4e4b\u95f4\u7684\u901a\u4fe1\u53ea\u662f\u7ecf\u8fc7 br-int \u6865\uff0c\u4e0d\u9700\u8981\u7ecf\u8fc7 br-tun \u6865\u3002 \u4e0d\u540c\u4e3b\u673a\u4e0a\u540c\u4e00\u4e2a\u5b50\u7f51\u5185\u7684\u865a\u673a\u4e4b\u95f4\u7684\u901a\u4fe1\u8fc7\u7a0b \u4ece\u5de6\u8fb9\u7684\u865a\u673a1\u51fa\u53d1\u7684packet\uff0c\u7ecf\u8fc7Linux bridge\u5230\u8fbebr-int\uff0c\u88ab\u6253\u4e0a VLAN ID Tag \u5230\u8fbebr-tun\uff0c\u5c06VLAN ID\u8f6c\u5316\u4e3aTunnel ID\uff0c\u4eceGRE Tunnel \u53d1\u51fa\uff0c\u5230\u8fbe\u53e6\u4e00\u4e2acompute\u8282\u70b9 \u5728\u53e6\u4e00\u4e2acompute\u8282\u70b9\u4e0a\u7ecf\u8fc7\u76f8\u53cd\u7684\u8fc7\u7a0b\uff0c\u5230\u8fbe\u53f3\u8fb9\u7684\u865a\u673a \u865a\u673a\u8bbf\u95ee\u5916\u7f51 Packet\u79bb\u5f00\u865a\u673a\uff0c\u7ecf\u8fc7Linux bridge\uff0c \u5230\u8fbebr-int\uff0c\u6253\u4e0a VLAN ID Tag \u8fbe\u5230 br-tun\uff0c\u5c06 VLAN ID\u8f6c\u5316\u4e3a Tunnel ID \u4ece\u7269\u7406\u7f51\u5361\u8fdb\u5165GRE\u901a\u9053 \u4eceGRE\u901a\u9053\u8fbe\u5230 Neutron \u8282\u70b9\u7684\u7f51\u5361 \u8fbe\u5230\u8ddf\u7269\u7406\u7f51\u5361\u76f8\u8fde\u7684br-tun\uff0c\u5c06 Tunnel ID \u8f6c\u5316\u4e3a VLAN ID \u8fbe\u5230 br-int\uff0c\u518d\u8fbe\u5230 router\uff0crouter\u7684NAT \u8868 \u5c06 fixed IP \u5730\u5740 \u8f6c\u5316\u4e3a floatiing IP \u5730\u5740\uff0c\u518d\u88abroute \u5230br-ex \u4ecebr-ex\u76f8\u8fde\u7684\u7269\u7406\u7f51\u5361\u4e0a\u51fa\u53bb\u5230\u5916\u7f51 \u5916\u7f51IP\u8bbf\u95ee\u865a\u673a\u662f\u4e2a\u76f8\u53cd\u7684\u8fc7\u7a0b\u3002 \u865a\u673a\u53d1\u9001DHCP\u8bf7\u6c42 \u865a\u673a\u7684packet -> br-int -> br-tun -> GRE Tunnel -> eth2 ------>eth2->br-tun->br-int->qDHCP qDHCP\u8fd4\u56de\u5176fixed IP\u5730\u5740\uff0c\u539f\u8def\u8fd4\u56de \u4e0d\u540ctenant\u5185\u865a\u673a\u4e4b\u95f4\u7684\u901a\u4fe1 Neutron Tenant\u7f51\u7edc\u662f\u4e3atenant\u4e2d\u7684\u865a\u673a\u4e4b\u95f4\u7684\u901a\u4fe1\u3002\u5982\u679c\u9700\u8981\u4e0d\u540ctenant\u5185\u7684\u865a\u673a\u4e4b\u95f4\u901a\u4fe1\uff0c\u9700\u8981\u5728\u4e24\u4e2asubnet\u4e4b\u95f4\u589e\u52a0Neutron\u8def\u7531\u3002 Neutron\u7684\u79df\u6237\u9694\u79bb\u5b9e\u73b0\u65b9\u6848 \u6570\u636e\u9762 \u200b br-ethx/tun\u3001br-int\u5206\u522b\u53ea\u6709\u4e00\u4e2a\u7528\u4f8b\uff0c\u8fd9\u4e2a\u662f\u5c5e\u4e8e\uff1a\u7528\u201c\u591a\u79df\u6237\u5171\u4eab\u201d\u7684\u65b9\u6848\uff0c\u6765\u5b9e\u73b0\u591a\u79df\u6237\u9694\u79bb\u3002\u6bd4\u5982br-int\u3001br-ethx\u901a\u8fc7VLAN\u6765\u9694\u79bb\u5404\u4e2a\u79df\u6237\u7f51\u7edc\u6570\u636e\u6d41\u91cf\uff0cbr-tun\u901a\u8fc7\u76f8\u5e94\u7684tunnel\u6765\u9694\u79bb\u5404\u4e2a\u79df\u6237\u7f51\u7edc\u7684\u6d41\u91cf\u3002 \u200b qbr\u8ddfVM\u4e00\u4e00\u5bf9\u5e94\uff0c\u8fd9\u4e2a\u5c5e\u4e8e\uff1a\u7528\u201c\u5355\u79df\u6237\u72ec\u5360\u201d\u7684\u65b9\u6848\uff0c\u6765\u5b9e\u73b0\u201c\u591a\u79df\u6237\u9694\u79bb\u201d\u3002qbr\u7531\u4e8e\u7ed1\u5b9a\u4e86\u5b89\u5168\u7ec4\uff0c\u5b83\u5728\u539f\u751f\u7684\u6570\u636e\u9762\u79df\u6237\u9694\u79bb\u6280\u672f\u7684\u57fa\u7840\u4e0a\u53c8\u53e0\u52a0\u4e86\u4e00\u5c42\u201c\u5b89\u5168\u5c42\u201d\u6765\u4fdd\u8bc1\u79df\u6237\u9694\u79bb\u3002\u539f\u751f\u7684\u6570\u636e\u9762\u8f6c\u53d1\uff08br-ethx/tun\u3001br-int\uff09\u8d1f\u8d23\u201c\u6b63\u5e38\u884c\u4e3a\u201d\u7684\u79df\u6237\u9694\u79bb\uff0c\u800c\u5b89\u5168\u6280\u672f\uff08qbr\uff09\u8d1f\u8d23\u201c\u5f02\u5e38\u884c\u4e3a\u201d\uff08\u975e\u6cd5\u8bbf\u95ee\uff09\u7684\u79df\u6237\u9694\u79bb\u3002 \u200b Router/DVR\u8ddf\u79df\u6237\u76f8\u5bf9\u5e94\uff0c\u800c\u4e14\u6bcf\u4e2aRouter/DVR\u8fd0\u884c\u5728\u4e00\u4e2anamespace\u4e2d\uff0c\u8fd9\u4e2a\u5c5e\u4e8e\uff1a\u7528\u201c\u5355\u79df\u6237\u72ec\u5360\u201d\uff08\u7528namespace\u9694\u79bb\uff09\u7684\u65b9\u6848\uff0c\u6765\u5b9e\u73b0\u591a\u79df\u6237\u9694\u79bb\u7684\u76ee\u7684\u3002Router/DVR\u9664\u4e86\u53ef\u4ee5\u4fdd\u8bc1\u79df\u6237\u95f4\u7f51\u7edc\u4e0d\u4f1a\u4e92\u76f8\u8bbf\u95ee\u4ee5\u5916\uff0c\u8fd8\u89e3\u51b3\u4e86\u903b\u8f91\u8d44\u6e90\uff08IP\u5730\u5740\uff09\u51b2\u7a81\u7684\u95ee\u9898 \u7ba1\u7406\u9762 \u5171\u4eab\u6570\u636e\u5e93\uff0c\u5171\u4eab\u8868\uff0c\u901a\u8fc7\u8868\u4e2d\u5b57\u6bb5\uff08\u6bd4\u5982tenant_id\u6765\u5206\u533a\u4e0d\u540c\u7684\u79df\u6237\uff09\u3002 Neutron\u6240\u91c7\u53d6\u5c31\u662f\u7b2c3\u79cd\uff0c\u6240\u4ee5\u8bf4\uff0c\u5b83\u5728\u6570\u636e\u5e93\u5c42\u9762\u7684\u79df\u6237\u9694\u79bb\u65b9\u6848\u662f\u6bd4\u8f83\u5f31\u7684\u3002","title":"Neutron"},{"location":"Openstack/Neutron/#_1","text":"Neutron \u91c7\u7528\u7684\u662f\u5206\u5e03\u5f0f\u67b6\u6784\uff0c\u5305\u62ec Neutorn Server\u3001\u5404\u79cd plugin/agent\u3001database \u548c message queue\u3002 Neutron server \u63a5\u6536 api \u8bf7\u6c42\u3002 plugin/agent \u5b9e\u73b0\u8bf7\u6c42\u3002 database \u4fdd\u5b58 neutron \u7f51\u7edc\u72b6\u6001\u3002 message queue \u5b9e\u73b0\u7ec4\u4ef6\u4e4b\u95f4\u901a\u4fe1\u3002 5 \u7c7b\u7ec4\u4ef6 Neutron-server\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u4e13\u95e8\u7528\u6765\u63a5\u6536Neutron REST API\u8c03\u7528\u7684\u670d\u52a1\u5668\uff0c\u7136\u540e\u8d1f\u8d23\u5c06\u4e0d\u540c\u7684rest api\u5206\u53d1\u5230\u4e0d\u540c\u7684neutron-plugin\u4e0a\u3002 Neutron-plugin\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e0d\u540c\u7f51\u7edc\u529f\u80fd\u5b9e\u73b0\u7684\u5165\u53e3\uff0c\u5404\u4e2a\u5382\u5546\u53ef\u4ee5\u5f00\u53d1\u81ea\u5df1\u7684plugin\u3002Neutron-plugin\u63a5\u6536neutron-server\u5206\u53d1\u8fc7\u6765\u7684REST API\uff0c\u5411neutron database\u5b8c\u6210\u4e00\u4e9b\u4fe1\u606f\u7684\u6ce8\u518c\uff0c\u7136\u540e\u5c06\u5177\u4f53\u8981\u6267\u884c\u7684\u4e1a\u52a1\u64cd\u4f5c\u548c\u53c2\u6570\u901a\u77e5\u7ed9\u81ea\u8eab\u5bf9\u5e94\u7684neutron agent\u3002 Neutron-agent\u53ef\u4ee5\u76f4\u89c2\u5730\u7406\u89e3\u4e3aneutron-plugin\u5728\u8bbe\u5907\u4e0a\u7684\u4ee3\u7406\uff0c\u63a5\u6536\u76f8\u5e94\u7684neutron-plugin\u901a\u77e5\u7684\u4e1a\u52a1\u64cd\u4f5c\u548c\u53c2\u6570\uff0c\u5e76\u8f6c\u6362\u4e3a\u5177\u4f53\u7684\u8bbe\u5907\u7ea7\u64cd\u4f5c\uff0c\u4ee5\u6307\u5bfc\u8bbe\u5907\u7684\u52a8\u4f5c\u3002\u5f53\u8bbe\u5907\u672c\u5730\u53d1\u751f\u95ee\u9898\u65f6\uff0cneutron-agent\u4f1a\u5c06\u60c5\u51b5\u901a\u77e5\u7ed9neutron-plugin\u3002 Neutron database\uff0c\u987e\u540d\u601d\u4e49\u5c31\u662fNeutron\u7684\u6570\u636e\u5e93\uff0c\u4e00\u4e9b\u4e1a\u52a1\u76f8\u5173\u7684\u53c2\u6570\u90fd\u5b58\u5728\u8fd9\u91cc\u3002 Network provider\uff0c\u5373\u4e3a\u5b9e\u9645\u6267\u884c\u529f\u80fd\u7684\u7f51\u7edc\u8bbe\u5907\uff0c \u4e00\u822c\u4e3a\u865a\u62df\u4ea4\u6362\u673a \uff08OVS\u6216\u8005Linux Bridge\uff09\u3002 \u4e24\u7c7bPlugin Core-plugin\uff0cNeutron\u4e2d\u5373\u4e3aML2\uff08Modular Layer 2\uff09\uff0c\u8d1f\u8d23\u7ba1\u7406L2\u7684\u7f51\u7edc\u8fde\u63a5\u3002ML2\u4e2d\u4e3b\u8981\u5305\u62ecnetwork\u3001subnet\u3001port\u4e09\u7c7b\u6838\u5fc3\u8d44\u6e90\uff0c\u5bf9\u4e09\u7c7b\u8d44\u6e90\u8fdb\u884c\u64cd\u4f5c\u7684REST API\u88abneutron-server\u770b\u4f5cCore API\uff0c\u7531Neutron\u539f\u751f\u652f\u6301\u3002\u5176\u4e2d\uff1a \u8d44\u6e90 \u8bf4\u660e Network \u4ee3\u8868\u4e00\u4e2a\u9694\u79bb\u7684\u4e8c\u5c42\u7f51\u6bb5\uff0c\u662f\u4e3a\u521b\u5efa\u5b83\u7684\u79df\u6237\u800c\u4fdd\u7559\u7684\u4e00\u4e2a\u5e7f\u64ad\u57df\u3002subnet\u548cport\u59cb\u7ec8\u88ab\u5206\u914d\u7ed9\u67d0\u4e2a\u7279\u5b9a\u7684network\u3002Network\u7684\u7c7b\u578b\u5305\u62ecFlat\uff0cVLAN\uff0cVxLAN\uff0cGRE\u7b49\u7b49\u3002 Subnet \u4ee3\u8868\u4e00\u4e2aIPv4/v6\u7684CIDR\u5730\u5740\u6c60\uff0c\u4ee5\u53ca\u4e0e\u5176\u76f8\u5173\u7684\u914d\u7f6e\uff0c\u5982\u7f51\u5173\u3001DNS\u7b49\u7b49\uff0c\u8be5subnet\u4e2d\u7684 VM \u5b9e\u4f8b\u968f\u540e\u4f1a\u81ea\u52a8\u7ee7\u627f\u8be5\u914d\u7f6e\u3002Sunbet\u5fc5\u987b\u5173\u8054\u4e00\u4e2anetwork\u3002 Port \u4ee3\u8868\u865a\u62df\u4ea4\u6362\u673a\u4e0a\u7684\u4e00\u4e2a\u865a\u673a\u4ea4\u6362\u7aef\u53e3\u3002VM\u7684\u7f51\u5361VIF\u8fde\u63a5 port \u540e\uff0c\u5c31\u4f1a\u62e5\u6709 MAC \u5730\u5740\u548c IP \u5730\u5740\u3002Port \u7684 IP \u5730\u5740\u662f\u4ece subnet \u5730\u5740\u6c60\u4e2d\u5206\u914d\u7684\u3002 Service-plugin\uff0c\u5373\u4e3a\u9664core-plugin\u4ee5\u5916\u5176\u5b83\u7684plugin\uff0c\u5305\u62ecl3 router\u3001firewall\u3001loadbalancer\u3001VPN\u3001metering\u7b49\u7b49\uff0c\u4e3b\u8981\u5b9e\u73b0L3-L7\u7684\u7f51\u7edc\u670d\u52a1\u3002\u8fd9\u4e9bplugin\u8981\u64cd\u4f5c\u7684\u8d44\u6e90\u6bd4\u8f83\u4e30\u5bcc\uff0c\u5bf9\u8fd9\u4e9b\u8d44\u6e90\u8fdb\u884c\u64cd\u4f5c\u7684REST API\u88abneutron-server\u770b\u4f5cExtension API\uff0c\u9700\u8981\u5382\u5bb6\u81ea\u884c\u8fdb\u884c\u6269\u5c55\u3002","title":"\u67b6\u6784"},{"location":"Openstack/Neutron/#_2","text":"\u4eceneutron-server\u7684\u542f\u52a8\u5f00\u59cb\u8bf4\u8d77\u3002neutron-server\u7684\u542f\u52a8\u5165\u53e3\u5728neutron.server.__init__\u4e2d\uff0c\u4e3b\u51fd\u6570\u4e2d\u4e3b\u8981\u5c31\u5e72\u4e86\u4e24\u4ef6\u4e8b\uff0c \u542f\u52a8wsgi\u670d\u52a1\u5668\u76d1\u542cNeutron REST API\uff0c \u542f\u52a8rpc\u670d\u52a1\uff0c\u7528\u4e8ecore plugin\u4e0eagent\u95f4\u7684\u901a\u4fe1\uff0c\u4e24\u7c7b\u670d\u52a1\u4f5c\u4e3a\u7eff\u8272\u7ebf\u7a0b\u5e76\u53d1\u8fd0\u884c\u3002\u4eceSDN\u7684\u89d2\u5ea6\u6765\u770b\uff0cwsgi\u8d1f\u8d23Neutron\u7684\u5317\u5411\u63a5\u53e3\uff0c\u800cNeutron\u7684\u5357\u5411\u901a\u4fe1\u673a\u5236\u4e3b\u8981\u4f9d\u8d56\u4e8erpc\u6765\u5b9e\u73b0\uff08\u5f53\u7136\uff0c\u4e0d\u540c\u5382\u5bb6\u7684plugin\u53ef\u80fd\u6709\u5176\u5b83\u7684\u5357\u5411\u901a\u4fe1\u673a\u5236\uff09\u3002 Neutron\u5185\u90e8\uff0cplugin\u4e0e\u6570\u636e\u5e93\u4ea4\u4e92\uff0c\u83b7\u53d6\u4e1a\u52a1\u7684\u5168\u5c40\u53c2\u6570\uff0c\u7136\u540e\u901a\u8fc7rpc\u673a\u5236\u5c06\u64cd\u4f5c\u4e0e\u53c2\u6570\u4f20\u7ed9\u8bbe\u5907\u4e0a\u7684Agent\uff08\u67d0\u4e9bplugin\u548cML2 Mechanism Driver\u901a\u8fc7\u522b\u7684\u65b9\u5f0f\u4e0eAgent\u901a\u4fe1\uff0c\u6bd4\u5982REST API\u3001NETCONF\u7b49\uff09\u3002 \u200b RPC\u673a\u5236\u5c31\u53ef\u4ee5\u7406\u89e3\u4e3aNeutron\u7684\u5357\u5411\u901a\u4fe1\u673a\u5236\uff0cNeutron\u7684RPC\u5b9e\u73b0\u57fa\u4e8eAMPQ\u6a21\u578b\uff0cplugins\u548cagents\u4e4b\u95f4\u901a\u5e38\u91c7\u7528\u201c\u53d1\u5e03\u2014\u2014\u8ba2\u9605\u201d\u6a21\u5f0f\u4f20\u9012\u6d88\u606f\uff0c agents\u6536\u5230\u76f8\u5e94plugins\u7684 NotifyApi\u540e\uff0c\u4f1a\u56de\u8c03\u8bbe\u5907\u672c\u5730\u7684 CallBack\u6765\u64cd\u4f5c\u8bbe\u5907\uff0c\u5b8c\u6210\u4e1a\u52a1\u7684\u5e95\u5c42\u90e8\u7f72\u3002 Northbound Interface/Southbound Interface \u5317\u5411\u63a5\u53e3\uff1a\u63d0\u4f9b\u7ed9\u5176\u4ed6\u5382\u5bb6\u6216\u8fd0\u8425\u5546\u8fdb\u884c\u63a5\u5165\u548c\u7ba1\u7406\u7684\u63a5\u53e3\uff0c\u5373\u5411\u4e0a\u63d0\u4f9b\u7684\u63a5\u53e3\u3002 \u5357\u5411\u63a5\u53e3\uff1a\u7ba1\u7406\u5176\u4ed6\u5382\u5bb6\u7f51\u7ba1\u6216\u8bbe\u5907\u7684\u63a5\u53e3\uff0c\u5373\u5411\u4e0b\u63d0\u4f9b\u7684\u63a5\u53e3\u3002","title":"\u63a7\u5236\u7aef\u7684\u5b9e\u73b0"},{"location":"Openstack/Neutron/#2","text":"\u200b \u63a7\u5236\u7aefneutron-server\u901a\u8fc7wsgi\u63a5\u6536\u5317\u5411REST API\u8bf7\u6c42\uff0cneutron-plugin\u901a\u8fc7rpc\u4e0e\u8bbe\u5907\u7aef\u8fdb\u884c\u5357\u5411\u901a\u4fe1\u3002\u8bbe\u5907\u7aefagent\u5219\u5411\u4e0a\u901a\u8fc7rpc\u4e0e\u63a7\u5236\u7aef\u8fdb\u884c\u901a\u4fe1\uff0c\u5411\u4e0b\u5219\u76f4\u63a5\u5728\u672c\u5730\u5bf9\u7f51\u7edc\u8bbe\u5907\u8fdb\u884c\u914d\u7f6e\u3002 \u200b Neutron-agent\u7684\u5b9e\u73b0\u5f88\u591a\uff0c\u5f7c\u6b64\u4e4b\u95f4\u4e5f\u6ca1\u4ec0\u4e48\u5171\u6027\u7684\u5730\u65b9\uff0c\u4e0b\u9762\u9009\u53d6\u6bd4\u8f83\u5177\u6709\u4ee3\u8868\u6027\u7684ovs-neutron-agent\u7684\u5b9e\u73b0\u8fdb\u884c\u7b80\u5355\u7684\u4ecb\u7ecd\u3002 \u200b Ovs-neutron-agent\u7684\u542f\u52a8\u5165\u53e3\u4e3a/neutron/plugins/openvswitch/agent/ovs-neutron-agent.py\u4e2d\u7684main\u65b9\u6cd5\uff0c\u5176\u4e2d\u8d1f\u8d23\u5e72\u6d3b\u7684\u4e24\u884c\u4ee3\u7801\u5728l 1471\u548cl 1476\u3002L 1471\u5b9e\u4f8b\u5316\u4e86OVSNeutronAgent\u7c7b\uff0c\u8d1f\u8d23\u5728\u672c\u5730\u914d\u7f6eOVS\uff0c\u800cl 1476\u5219\u542f\u52a8\u4e86\u4e0e\u63a7\u5236\u7aef\u7684rpc\u901a\u4fe1\u3002 OVSNeutronAgent\u7684\u5b9e\u4f8b\u5316\u8fc7\u7a0b\u4e2d\u4f9d\u6b21\u5e72\u4e866\u4e2a\u5de5\u4f5c\uff1a 1. \u542f\u52a8ovs br-int\u7f51\u6865\uff1b 2. \u542f\u52a8rpc\uff1b 3. \u542f\u52a8ovs br-eth1\uff1b 4. \u542f\u52a8ovs br-tun\uff1b 5. \u5b9e\u4f8b\u5316OVSSecurityGroupAgent\uff1b 6. \u5f00\u59cbrpc\u8f6e\u8be2\u4e0e\u76d1\u542c\u3002 rpc_loop\u505a\u7684\u5de5\u4f5c\u4e3b\u8981\u5c31\u662f\u8f6e\u8be2\u4e00\u4e9b\u72b6\u6001\uff0c\u6839\u636e\u8fd9\u4e9b\u72b6\u6001\uff0c\u8fdb\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002 \u6bd4\u5982\u4e00\u65e6\u63a2\u6d4b\u5230\u672c\u5730\u7684OVS\u91cd\u542f\u4e86\uff08l 1295\uff0cl 1309\uff09\uff0c\u5c31\u91cd\u65b0\u521b\u5efa\u672c\u5730\u7684\u7f51\u6865\uff08l 1294-1300\uff09\uff0c\u5e76\u91cd\u65b0\u6dfb\u52a0port\uff08l 1336\uff09\uff1b \u518d\u6bd4\u5982\u4e00\u65e6rpc\u76d1\u542c\u5230update_port\u4e8b\u4ef6\uff08l 1309\uff09\uff0c\u5219\u5728\u672c\u5730\u4f7f\u80fd\u76f8\u5e94\u7684port\uff08l 1336\uff09\u3002 ovs-neutron-agent\u7684\u542f\u52a8\u4e5f\u5c31\u662f\u8fd9\u4e9b\u5de5\u4f5c\u4e86\uff0c\u542f\u52a8\u5b8c\u6bd5\u540e\uff0c\u4fbf\u5f00\u59cb\u4e86\u4e0e\u76f8\u5e94plugin\uff08OVS Plugin\u6216\u8005OVS Mechanism Driver\uff09\u7684rpc\u901a\u4fe1\u3002","title":"2. \u8bbe\u5907\u7aef\u7684\u5b9e\u73b0"},{"location":"Openstack/Neutron/#nuetronserver","text":"neutron-server\u7684\u672c\u8d28\u662f\u4e00\u4e2aPython Web Server Gateway Interface\uff08WSGI\uff09\uff0c\u662f\u901a\u8fc7eventlet lib\u6765\u5b9e\u73b0\u670d\u52a1\u7684\u5f02\u6b65\u5e76\u53d1\u6a21\u578b\u7684\u3002\u5b9e\u9645\u5de5\u4f5c\u65f6\uff0c\u901a\u8fc7'serve_wsgi'\u542f\u52a8\u70b9(Entry point)\u6765\u6784\u9020\u4e86\u4e00\u4e2aNeutronApiService\u5b9e\u4f8b\uff0c\u901a\u8fc7\u8be5\u5b9e\u4f8b\u751f\u6210Eventlet\uff0cGreenpool\u6765\u8fd0\u884cWSGI app\u5e76\u56de\u5e94\u5ba2\u6237\u7aef\u8bf7\u6c42\u3002 \u7814\u7a76\u4e4b\u524d\uff0c\u9996\u5148\u9700\u8981\u5148\u4e86\u89e3\u4e0bEntry point\u7684\u6982\u5ff5\u3002 [entry_points] console_scripts = neutron-db-manage = neutron.db.migration.cli:main neutron-debug = neutron.debug.shell:main neutron-dhcp-agent = neutron.cmd.eventlet.agents.dhcp:main","title":"NuetronServer"},{"location":"Openstack/Neutron/#gre","text":"\u96a7\u9053\u6865\uff08br-tun\uff09\u6839\u636e OpenFlow \u89c4\u5219\u5c06 VLAN \u6807\u8bb0\u7684\u6d41\u91cf\u4ece\u96c6\u6210\u7f51\u6865\u8f6c\u6362\u4e3a\u96a7\u9053 ID\u3002 \u96a7\u9053\u6865\u5141\u8bb8\u4e0d\u540c\u7f51\u7edc\u7684\u5b9e\u4f8b\u5f7c\u6b64\u8fdb\u884c\u901a\u4fe1\u3002\u96a7\u9053\u6709\u5229\u4e8e\u5c01\u88c5\u5728\u975e\u5b89\u5168\u7f51\u7edc\u4e0a\u4f20\u8f93\u7684\u6d41\u91cf\uff0c\u5b83\u652f\u6301\u4e24\u5c42\u7f51\u7edc\uff0c\u5373 GRE \u548c VXLAN\u3002 **# virsh dumpxml instance-000008ed |grep bridge** <interface type='bridge'> <source bridge='**qbrc68f8b26-23**'/> <interface type='bridge'> <source bridge='**qbr7cff5be4-5c**'/> # brctl show bridge name bridge id STP enabled interfaces qbrc68f8b26-23 8000.663c2f1e30b4 no qvbc68f8b26-23 tapc68f8b26-23 \u25c6instance port id qbr7cff5be4-5c 8000.8a66ef285ffe no qvb7cff5be4-5c tap7cff5be4-5c \u25c6 instance port id #ovs-vsctl show Bridge br-int Port \"qvoc68f8b26-23\" tag: 7 Interface \"qvoc68f8b26-23\" Port \"qvo7cff5be4-5c\" tag: 6 Interface \"qvo7cff5be4-5c\" Port patch-tun Interface patch-tun type: patch options: {peer=patch-int} Bridge br-tun Port br-tun Interface br-tun type: internal Port patch-int Interface patch-int type: patch options: {peer=patch-tun}","title":"GRE\u6a21\u5f0f"},{"location":"Openstack/Neutron/#vlan","text":"","title":"vlan\u6a21\u5f0f"},{"location":"Openstack/Neutron/#_3","text":"\u540c\u4e00\u4e2ahost\u4e0a\u540c\u4e00\u4e2a\u5b50\u7f51\u5185\u865a\u673a\u4e4b\u95f4\u7684\u901a\u4fe1\u8fc7\u7a0b \u56e0\u4e3abr-int\u662f\u4e2a\u865a\u62df\u7684\u4e8c\u5c42\u4ea4\u6362\u673a\uff0c\u6240\u4ee5\u540c\u4e00\u4e2ahost\u4e0a\u7684\u540c\u4e00\u4e2a\u5b50\u7f51\u5185\u7684\u865a\u673a\u4e4b\u95f4\u7684\u901a\u4fe1\u53ea\u662f\u7ecf\u8fc7 br-int \u6865\uff0c\u4e0d\u9700\u8981\u7ecf\u8fc7 br-tun \u6865\u3002 \u4e0d\u540c\u4e3b\u673a\u4e0a\u540c\u4e00\u4e2a\u5b50\u7f51\u5185\u7684\u865a\u673a\u4e4b\u95f4\u7684\u901a\u4fe1\u8fc7\u7a0b \u4ece\u5de6\u8fb9\u7684\u865a\u673a1\u51fa\u53d1\u7684packet\uff0c\u7ecf\u8fc7Linux bridge\u5230\u8fbebr-int\uff0c\u88ab\u6253\u4e0a VLAN ID Tag \u5230\u8fbebr-tun\uff0c\u5c06VLAN ID\u8f6c\u5316\u4e3aTunnel ID\uff0c\u4eceGRE Tunnel \u53d1\u51fa\uff0c\u5230\u8fbe\u53e6\u4e00\u4e2acompute\u8282\u70b9 \u5728\u53e6\u4e00\u4e2acompute\u8282\u70b9\u4e0a\u7ecf\u8fc7\u76f8\u53cd\u7684\u8fc7\u7a0b\uff0c\u5230\u8fbe\u53f3\u8fb9\u7684\u865a\u673a \u865a\u673a\u8bbf\u95ee\u5916\u7f51 Packet\u79bb\u5f00\u865a\u673a\uff0c\u7ecf\u8fc7Linux bridge\uff0c \u5230\u8fbebr-int\uff0c\u6253\u4e0a VLAN ID Tag \u8fbe\u5230 br-tun\uff0c\u5c06 VLAN ID\u8f6c\u5316\u4e3a Tunnel ID \u4ece\u7269\u7406\u7f51\u5361\u8fdb\u5165GRE\u901a\u9053 \u4eceGRE\u901a\u9053\u8fbe\u5230 Neutron \u8282\u70b9\u7684\u7f51\u5361 \u8fbe\u5230\u8ddf\u7269\u7406\u7f51\u5361\u76f8\u8fde\u7684br-tun\uff0c\u5c06 Tunnel ID \u8f6c\u5316\u4e3a VLAN ID \u8fbe\u5230 br-int\uff0c\u518d\u8fbe\u5230 router\uff0crouter\u7684NAT \u8868 \u5c06 fixed IP \u5730\u5740 \u8f6c\u5316\u4e3a floatiing IP \u5730\u5740\uff0c\u518d\u88abroute \u5230br-ex \u4ecebr-ex\u76f8\u8fde\u7684\u7269\u7406\u7f51\u5361\u4e0a\u51fa\u53bb\u5230\u5916\u7f51 \u5916\u7f51IP\u8bbf\u95ee\u865a\u673a\u662f\u4e2a\u76f8\u53cd\u7684\u8fc7\u7a0b\u3002 \u865a\u673a\u53d1\u9001DHCP\u8bf7\u6c42 \u865a\u673a\u7684packet -> br-int -> br-tun -> GRE Tunnel -> eth2 ------>eth2->br-tun->br-int->qDHCP qDHCP\u8fd4\u56de\u5176fixed IP\u5730\u5740\uff0c\u539f\u8def\u8fd4\u56de \u4e0d\u540ctenant\u5185\u865a\u673a\u4e4b\u95f4\u7684\u901a\u4fe1 Neutron Tenant\u7f51\u7edc\u662f\u4e3atenant\u4e2d\u7684\u865a\u673a\u4e4b\u95f4\u7684\u901a\u4fe1\u3002\u5982\u679c\u9700\u8981\u4e0d\u540ctenant\u5185\u7684\u865a\u673a\u4e4b\u95f4\u901a\u4fe1\uff0c\u9700\u8981\u5728\u4e24\u4e2asubnet\u4e4b\u95f4\u589e\u52a0Neutron\u8def\u7531\u3002","title":"\u51e0\u4e2a\u5178\u578b\u6d41\u7a0b\u6848\u4f8b"},{"location":"Openstack/Neutron/#neutron","text":"\u6570\u636e\u9762 \u200b br-ethx/tun\u3001br-int\u5206\u522b\u53ea\u6709\u4e00\u4e2a\u7528\u4f8b\uff0c\u8fd9\u4e2a\u662f\u5c5e\u4e8e\uff1a\u7528\u201c\u591a\u79df\u6237\u5171\u4eab\u201d\u7684\u65b9\u6848\uff0c\u6765\u5b9e\u73b0\u591a\u79df\u6237\u9694\u79bb\u3002\u6bd4\u5982br-int\u3001br-ethx\u901a\u8fc7VLAN\u6765\u9694\u79bb\u5404\u4e2a\u79df\u6237\u7f51\u7edc\u6570\u636e\u6d41\u91cf\uff0cbr-tun\u901a\u8fc7\u76f8\u5e94\u7684tunnel\u6765\u9694\u79bb\u5404\u4e2a\u79df\u6237\u7f51\u7edc\u7684\u6d41\u91cf\u3002 \u200b qbr\u8ddfVM\u4e00\u4e00\u5bf9\u5e94\uff0c\u8fd9\u4e2a\u5c5e\u4e8e\uff1a\u7528\u201c\u5355\u79df\u6237\u72ec\u5360\u201d\u7684\u65b9\u6848\uff0c\u6765\u5b9e\u73b0\u201c\u591a\u79df\u6237\u9694\u79bb\u201d\u3002qbr\u7531\u4e8e\u7ed1\u5b9a\u4e86\u5b89\u5168\u7ec4\uff0c\u5b83\u5728\u539f\u751f\u7684\u6570\u636e\u9762\u79df\u6237\u9694\u79bb\u6280\u672f\u7684\u57fa\u7840\u4e0a\u53c8\u53e0\u52a0\u4e86\u4e00\u5c42\u201c\u5b89\u5168\u5c42\u201d\u6765\u4fdd\u8bc1\u79df\u6237\u9694\u79bb\u3002\u539f\u751f\u7684\u6570\u636e\u9762\u8f6c\u53d1\uff08br-ethx/tun\u3001br-int\uff09\u8d1f\u8d23\u201c\u6b63\u5e38\u884c\u4e3a\u201d\u7684\u79df\u6237\u9694\u79bb\uff0c\u800c\u5b89\u5168\u6280\u672f\uff08qbr\uff09\u8d1f\u8d23\u201c\u5f02\u5e38\u884c\u4e3a\u201d\uff08\u975e\u6cd5\u8bbf\u95ee\uff09\u7684\u79df\u6237\u9694\u79bb\u3002 \u200b Router/DVR\u8ddf\u79df\u6237\u76f8\u5bf9\u5e94\uff0c\u800c\u4e14\u6bcf\u4e2aRouter/DVR\u8fd0\u884c\u5728\u4e00\u4e2anamespace\u4e2d\uff0c\u8fd9\u4e2a\u5c5e\u4e8e\uff1a\u7528\u201c\u5355\u79df\u6237\u72ec\u5360\u201d\uff08\u7528namespace\u9694\u79bb\uff09\u7684\u65b9\u6848\uff0c\u6765\u5b9e\u73b0\u591a\u79df\u6237\u9694\u79bb\u7684\u76ee\u7684\u3002Router/DVR\u9664\u4e86\u53ef\u4ee5\u4fdd\u8bc1\u79df\u6237\u95f4\u7f51\u7edc\u4e0d\u4f1a\u4e92\u76f8\u8bbf\u95ee\u4ee5\u5916\uff0c\u8fd8\u89e3\u51b3\u4e86\u903b\u8f91\u8d44\u6e90\uff08IP\u5730\u5740\uff09\u51b2\u7a81\u7684\u95ee\u9898 \u7ba1\u7406\u9762 \u5171\u4eab\u6570\u636e\u5e93\uff0c\u5171\u4eab\u8868\uff0c\u901a\u8fc7\u8868\u4e2d\u5b57\u6bb5\uff08\u6bd4\u5982tenant_id\u6765\u5206\u533a\u4e0d\u540c\u7684\u79df\u6237\uff09\u3002 Neutron\u6240\u91c7\u53d6\u5c31\u662f\u7b2c3\u79cd\uff0c\u6240\u4ee5\u8bf4\uff0c\u5b83\u5728\u6570\u636e\u5e93\u5c42\u9762\u7684\u79df\u6237\u9694\u79bb\u65b9\u6848\u662f\u6bd4\u8f83\u5f31\u7684\u3002","title":"Neutron\u7684\u79df\u6237\u9694\u79bb\u5b9e\u73b0\u65b9\u6848"},{"location":"Openstack/Nova/","text":"Nova\u662fOpenStack\u4e91\u4e2d\u7684\u8ba1\u7b97\u7ec4\u7ec7\u63a7\u5236\u5668\u3002 \u652f\u6301OpenStack\u4e91\u4e2d\u5b9e\u4f8b\uff08instances\uff09\u751f\u547d\u5468\u671f\u7684\u6240\u6709\u6d3b\u52a8\u90fd\u7531Nova\u5904\u7406\u3002\u8fd9\u6837\u4f7f\u5f97Nova\u6210\u4e3a\u4e00\u4e2a\u8d1f\u8d23\u7ba1\u7406\u8ba1\u7b97\u8d44\u6e90\u3001\u7f51\u7edc\u3001\u8ba4\u8bc1\u3001\u6240\u9700\u53ef\u6269\u5c55\u6027\u7684\u5e73\u53f0\u3002 Nova API \uff1aHTTP\u670d\u52a1\uff0c\u7528\u4e8e\u63a5\u6536\u548c\u5904\u7406\u5ba2\u6237\u7aef\u53d1\u9001\u7684HTTP\u8bf7\u6c42 Nova Compute \uff1aNova\u7ec4\u4ef6\u4e2d\u6700\u6838\u5fc3\u7684\u670d\u52a1\uff0c\u5b9e\u73b0\u865a\u62df\u673a\u7ba1\u7406\u7684\u529f\u80fd\u3002 \u5b9e\u73b0\u4e86\u5728\u8ba1\u7b97\u8282\u70b9\u4e0a\u521b\u5efa\u3001\u542f\u52a8\u3001\u6682\u505c\u3001\u5173\u95ed\u548c\u5220\u9664\u865a\u62df\u673a\u3001\u865a\u62df\u673a\u5728\u4e0d\u540c\u7684\u8ba1\u7b97\u8282\u70b9\u95f4\u8fc1\u79fb\u3001\u865a\u62df\u673a\u5b89\u5168\u63a7\u5236\u3001\u7ba1\u7406\u865a\u62df\u673a\u78c1\u76d8\u955c\u50cf\u4ee5\u53ca\u5feb\u7167\u7b49\u529f\u80fd\u3002 Nova Cert \uff1a\u7528\u4e8e\u7ba1\u7406\u8bc1\u4e66\uff0c\u4e3a\u4e86\u517c\u5bb9AWS\u3002AWS\u63d0\u4f9b\u4e00\u6574\u5957\u7684\u57fa\u7840\u8bbe\u65bd\u548c\u5e94\u7528\u7a0b\u5e8f\u670d\u52a1\uff0c\u4f7f\u5f97\u51e0\u4e4e\u6240\u6709\u7684\u5e94\u7528\u7a0b\u5e8f\u5728\u4e91\u4e0a\u8fd0\u884c; Nova Conductor \uff1aRPC\u670d\u52a1\uff0c\u4e3b\u8981\u63d0\u4f9b\u6570\u636e\u5e93\u67e5\u8be2\u529f\u80fd\u3002 Nova Scheduler \uff1aNova\u8c03\u5ea6\u5b50\u670d\u52a1\u3002\u5f53\u5ba2\u6237\u7aef\u5411Nova \u670d\u52a1\u5668\u53d1\u8d77\u521b\u5efa\u865a\u62df\u673a\u8bf7\u6c42\u65f6\uff0c\u51b3\u5b9a\u521b\u5efa\u5728\u54ea\u4e2a\u8282\u70b9\u4e0a\u3002 Nova Console\u3001Nova Consoleauth\u3001Nova VNCProxy \uff1aNova\u63a7\u5236\u53f0\u5b50\u670d\u52a1\u3002 \u529f\u80fd\u662f\u5b9e\u73b0\u5ba2\u6237\u7aef\u901a\u8fc7\u4ee3\u7406\u670d\u52a1\u5668\u8fdc\u7a0b\u8bbf\u95ee\u865a\u62df\u673a\u5b9e\u4f8b\u7684\u63a7\u5236\u754c\u9762\u3002 Nova-scheduler Openstack\u4e2d\u4f1a\u7531\u591a\u4e2aInstance\u5171\u4eab\u540c\u4e00\u4e2aHost\uff0c\u9700\u8981\u63d0\u4f9b\u8c03\u5ea6\u670d\u52a1\u6765\u534f\u8c03\u548c\u7ba1\u7406Instance\u4e4b\u95f4\u7684\u8d44\u6e90\u5206\u914d\u3002nova-scheduler\u5728\u521b\u5efa\u5b9e\u4f8b\u7684\u65f6\u5019\uff0c\u4e3a\u5b9e\u4f8b(Instance)\u9009\u62e9\u51fa\u5408\u9002\u7684\u4e3b\u673a\uff08host\uff09 \u8c03\u5ea6\u5668 \u8c03\u5ea6\u5668\u5747\u7ee7\u627f /nova/scheduler/driver.py\u4e2d\u7684Scheduler\u7c7b \u2022 ChanceScheduler(\u968f\u673a\u8c03\u5ea6\u5668)\uff1a\u4ece\u6240\u6709\u6b63\u5e38\u8fd0\u884cnova-compute\u670d\u52a1\u7684HostNode\u4e2d\u968f\u673a\u9009\u53d6\u6765\u521b\u5efaInstance \u2022 FilterScheduler(\u8fc7\u6ee4\u8c03\u5ea6\u5668)\uff1a\u6839\u636e\u6307\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\u4ee5\u53ca\u6743\u91cd\u6765\u6311\u9009\u6700\u4f73Instance\u7684Host Node\u3002 Caching(\u7f13\u5b58\u8c03\u5ea6\u5668)\uff1a\u662f\u8fc7\u6ee4\u8c03\u5ea6\u5668\u7684\u4e00\u79cd\uff0c\u5728\u5176\u57fa\u7840\u4e0a\u5c06Host\u8d44\u6e90\u4fe1\u606f\u7f13\u5b58\u5230\u672c\u5730\u7684\u5185\u5b58\u4e2d\uff0c\u7136\u540e\u901a\u8fc7\u540e\u53f0\u7684\u5b9a\u65f6\u4efb\u52a1\u4ece\u6570\u636e\u5e93\u4e2d\u83b7\u53d6\u6700\u65b0\u7684Host\u8d44\u6e90\u4fe1\u606f\u3002","title":"Nova"},{"location":"Openstack/Nova/#nova-scheduler","text":"Openstack\u4e2d\u4f1a\u7531\u591a\u4e2aInstance\u5171\u4eab\u540c\u4e00\u4e2aHost\uff0c\u9700\u8981\u63d0\u4f9b\u8c03\u5ea6\u670d\u52a1\u6765\u534f\u8c03\u548c\u7ba1\u7406Instance\u4e4b\u95f4\u7684\u8d44\u6e90\u5206\u914d\u3002nova-scheduler\u5728\u521b\u5efa\u5b9e\u4f8b\u7684\u65f6\u5019\uff0c\u4e3a\u5b9e\u4f8b(Instance)\u9009\u62e9\u51fa\u5408\u9002\u7684\u4e3b\u673a\uff08host\uff09 \u8c03\u5ea6\u5668 \u8c03\u5ea6\u5668\u5747\u7ee7\u627f /nova/scheduler/driver.py\u4e2d\u7684Scheduler\u7c7b \u2022 ChanceScheduler(\u968f\u673a\u8c03\u5ea6\u5668)\uff1a\u4ece\u6240\u6709\u6b63\u5e38\u8fd0\u884cnova-compute\u670d\u52a1\u7684HostNode\u4e2d\u968f\u673a\u9009\u53d6\u6765\u521b\u5efaInstance \u2022 FilterScheduler(\u8fc7\u6ee4\u8c03\u5ea6\u5668)\uff1a\u6839\u636e\u6307\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\u4ee5\u53ca\u6743\u91cd\u6765\u6311\u9009\u6700\u4f73Instance\u7684Host Node\u3002 Caching(\u7f13\u5b58\u8c03\u5ea6\u5668)\uff1a\u662f\u8fc7\u6ee4\u8c03\u5ea6\u5668\u7684\u4e00\u79cd\uff0c\u5728\u5176\u57fa\u7840\u4e0a\u5c06Host\u8d44\u6e90\u4fe1\u606f\u7f13\u5b58\u5230\u672c\u5730\u7684\u5185\u5b58\u4e2d\uff0c\u7136\u540e\u901a\u8fc7\u540e\u53f0\u7684\u5b9a\u65f6\u4efb\u52a1\u4ece\u6570\u636e\u5e93\u4e2d\u83b7\u53d6\u6700\u65b0\u7684Host\u8d44\u6e90\u4fe1\u606f\u3002","title":"Nova-scheduler"},{"location":"Openstack/OVS/","text":"OpenFlow\u662f\u7528\u4e8e\u7ba1\u7406\u4ea4\u6362\u673a\u6d41\u8868\u7684\u534f\u8bae\uff0covs-ofctl\u662fOpen vSwitch\u63d0\u4f9b\u7684\u547d\u4ee4\u884c\u5de5\u5177\u3002 \u5728OpenFlow\u767d\u76ae\u4e66\u4e2d\uff0cFlow\u88ab\u5b9a\u4e49\u4e3a\u67d0\u4e2a\u7279\u5b9a\u7684\u7f51\u7edc\u6d41\u91cf\u3002\u4f8b\u5982\uff0c\u4e00\u4e2aTCP\u8fde\u63a5\u5c31\u662f\u4e00\u4e2aFlow\uff0c\u6216\u8005\u4ece\u67d0\u4e2aIP\u5730\u5740\u53d1\u51fa\u6765\u7684\u6570\u636e\u5305\uff0c\u90fd\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2aFlow\u3002 \u652f\u6301OpenFlow\u534f\u8bae\u7684\u4ea4\u6362\u673a\u5e94\u8be5\u5305\u62ec\u4e00\u4e2a\u6216\u591a\u4e2a\u6d41\u8868\uff0c\u6d41\u8868\u4e2d\u7684\u6761\u76ee\u5305\u542b\uff1a \u6570\u636e\u5305\u5934\u7684\u4fe1\u606f\u3001\u5339\u914d\u6210\u529f\u540e\u8981\u6267\u884c\u7684\u6307\u4ee4\u548c\u7edf\u8ba1\u4fe1\u606f\u3002 \u5f53\u6570\u636e\u5305\u8fdb\u5165OVS\u540e\uff0c\u4f1a\u5c06\u6570\u636e\u5305\u548c\u6d41\u8868\u4e2d\u7684\u6d41\u8868\u9879\u8fdb\u884c\u5339\u914d\uff0c\u5982\u679c\u53d1\u73b0\u4e86\u5339\u914d\u7684\u6d41\u8868\u9879\uff0c\u5219\u6267\u884c\u8be5\u6d41\u8868\u9879\u4e2d\u7684\u6307\u4ee4\u96c6\u3002\u76f8\u53cd\uff0c\u5982\u679c\u6570\u636e\u5305\u5728\u6d41\u8868\u4e2d\u6ca1\u6709\u53d1\u73b0\u4efb\u4f55\u5339\u914d\uff0cOVS\u4f1a\u901a\u8fc7\u63a7\u5236\u901a\u9053\u628a\u6570\u636e\u5305\u53d1\u5230OpenFlow\u63a7\u5236\u5668\u4e2d\u3002 \u5728OVS\u4e2d\uff0c\u6d41\u8868\u9879\u4f5c\u4e3aovs-ofctl\u7684\u53c2\u6570\uff0c\u91c7\u7528\u5982\u4e0b\u7684\u683c\u5f0f\uff1a\u5b57\u6bb5=\u503c\uff0c\u5982\u679c\u6709\u591a\u4e2a\u5b57\u6bb5\uff0c\u53ef\u4ee5\u7528\u9017\u53f7\u6216\u7a7a\u683c\u5206\u5f00\uff0c\u4e00\u4e9b\u5e38\u7528\u7684\u5b57\u6bb5\u5217\u4e3e\u5982\u4e0b\u8868\u6240\u793a\uff1a OVS\u57fa\u672c\u547d\u4ee4\u5206\u7c7b Open vSwitch\u4e2d\u6709\u591a\u4e2a\u547d\u4ee4\uff0c\u5206\u522b\u6709\u4e0d\u540c\u7684\u4f5c\u7528\uff0c\u5927\u81f4\u5982\u4e0b\uff1a ovs-vsctl\u7528\u4e8e\u63a7\u5236ovs db ovs-ofctl\u7528\u4e8e\u7ba1\u7406OpenFlow switch \u7684 flow ovs-dpctl\u7528\u4e8e\u7ba1\u7406ovs\u7684datapath ovs-appctl\u7528\u4e8e\u67e5\u8be2\u548c\u7ba1\u7406ovs daemon","title":"OVS"},{"location":"Openstack/OVS/#ovs","text":"Open vSwitch\u4e2d\u6709\u591a\u4e2a\u547d\u4ee4\uff0c\u5206\u522b\u6709\u4e0d\u540c\u7684\u4f5c\u7528\uff0c\u5927\u81f4\u5982\u4e0b\uff1a ovs-vsctl\u7528\u4e8e\u63a7\u5236ovs db ovs-ofctl\u7528\u4e8e\u7ba1\u7406OpenFlow switch \u7684 flow ovs-dpctl\u7528\u4e8e\u7ba1\u7406ovs\u7684datapath ovs-appctl\u7528\u4e8e\u67e5\u8be2\u548c\u7ba1\u7406ovs daemon","title":"OVS\u57fa\u672c\u547d\u4ee4\u5206\u7c7b"},{"location":"Openstack/Openstack%E6%9E%B6%E6%9E%84/","text":"","title":"Openstack\u67b6\u6784"},{"location":"Openstack/RPC/","text":"RPC\u7cfb\u7edf\u7ed3\u6784 st=start:Start i=inputoutput:\u8f93\u5165\u5e74\u4efdn cond1=condition:n\u80fd\u5426\u88ab4\u6574\u9664\uff1f cond2=condition:n\u80fd\u5426\u88ab100\u6574\u9664\uff1f cond3=condition:n\u80fd\u5426\u88ab400\u6574\u9664\uff1f o1=inputoutput:\u8f93\u51fa\u975e\u95f0\u5e74 o2=inputoutput:\u8f93\u51fa\u975e\u95f0\u5e74 o3=inputoutput:\u8f93\u51fa\u95f0\u5e74 o4=inputoutput:\u8f93\u51fa\u95f0\u5e74 e=end st-i-cond1 cond1(no)-o1-e cond1(yes)-cond2 cond2(no)-o3-e cond2(yes)-cond3 cond3(yes)-o2-e cond3(no)-o4-e flowchart LR Consumer --> Provider Provider --> Consumer Consumer\u8c03\u7528\u7684Provider\u63d0\u4f9b\u7684\u670d\u52a1\u3002 Message Queue\u7cfb\u7edf\u7ed3\u6784\uff1a flowchart LR Consumer --> Queue --> Provider Provider --> Queue --> Consumer Sender\u53d1\u9001\u6d88\u606f\u7ed9Queue\uff1bReceiver\u4eceQueue\u62ff\u5230\u6d88\u606f\u6765\u5904\u7406\u3002 \u5728\u67b6\u6784\u4e0a\uff0cRPC\u548cMessage\u7684\u5dee\u5f02\u70b9\u662f\uff0cMessage\u6709\u4e00\u4e2a\u4e2d\u95f4\u7ed3\u70b9Message Queue\uff0c\u53ef\u4ee5\u628a\u6d88\u606f\u5b58\u50a8\u3002 \u6d88\u606f\u7684\u7279\u70b9 Message Queue\u628a\u8bf7\u6c42\u7684\u538b\u529b\u4fdd\u5b58\u4e00\u4e0b\uff0c\u9010\u6e10\u91ca\u653e\u51fa\u6765\uff0c\u8ba9\u5904\u7406\u8005\u6309\u7167\u81ea\u5df1\u7684\u8282\u594f\u6765\u5904\u7406\u3002 Message Queue\u5f15\u5165\u4e00\u4e0b\u65b0\u7684\u7ed3\u70b9\uff0c\u8ba9\u7cfb\u7edf\u7684\u53ef\u9760\u6027\u4f1a\u53d7Message Queue\u7ed3\u70b9\u7684\u5f71\u54cd\u3002 Message Queue\u662f\u5f02\u6b65\u5355\u5411\u7684\u6d88\u606f\u3002\u53d1\u9001\u6d88\u606f\u8bbe\u8ba1\u6210\u662f\u4e0d\u9700\u8981\u7b49\u5f85\u6d88\u606f\u5904\u7406\u7684\u5b8c\u6210\u3002 \u6240\u4ee5\u5bf9\u4e8e\u6709\u540c\u6b65\u8fd4\u56de\u9700\u6c42\uff0c\u7528Message Queue\u5219\u53d8\u5f97\u9ebb\u70e6\u4e86\u3002 RPC\u7684\u7279\u70b9 \u540c\u6b65\u8c03\u7528\uff0c\u5bf9\u4e8e\u8981\u7b49\u5f85\u8fd4\u56de\u7ed3\u679c/\u5904\u7406\u7ed3\u679c\u7684\u573a\u666f\uff0cRPC\u662f\u53ef\u4ee5\u975e\u5e38\u81ea\u7136\u76f4\u89c9\u7684\u4f7f\u7528\u65b9\u5f0f\u3002 RPC\u4e5f\u53ef\u4ee5\u662f\u5f02\u6b65\u8c03\u7528\u3002 \u7531\u4e8e\u7b49\u5f85\u7ed3\u679c\uff0cConsumer\uff08Client\uff09\u4f1a\u6709\u7ebf\u7a0b\u6d88\u8017\u3002 \u5982\u679c\u4ee5\u5f02\u6b65RPC\u7684\u65b9\u5f0f\u4f7f\u7528\uff0cConsumer\uff08Client\uff09\u7ebf\u7a0b\u6d88\u8017\u53ef\u4ee5\u53bb\u6389\u3002\u4f46\u4e0d\u80fd\u505a\u5230\u50cf\u6d88\u606f\u4e00\u6837\u6682\u5b58\u6d88\u606f/\u8bf7\u6c42\uff0c\u538b\u529b\u4f1a\u76f4\u63a5\u4f20\u5bfc\u5230\u670d\u52a1Provider\u3002 Service A\u7684\u5e94\u7528\u5c42\u4ee3\u7801\u4e2d\uff0c\u8c03\u7528\u4e86Calculator\u7684\u4e00\u4e2a\u5b9e\u73b0\u7c7b\u7684add\u65b9\u6cd5\uff0c\u5e0c\u671b\u6267\u884c\u4e00\u4e2a\u52a0\u6cd5\u8fd0\u7b97\uff1b \u8fd9\u4e2aCalculator\u5b9e\u73b0\u7c7b\uff0c\u5185\u90e8\u5e76\u4e0d\u662f\u76f4\u63a5\u5b9e\u73b0\u8ba1\u7b97\u5668\u7684\u52a0\u51cf\u4e58\u9664\u903b\u8f91\uff0c\u800c\u662f\u901a\u8fc7\u8fdc\u7a0b\u8c03\u7528Service B\u7684RPC\u63a5\u53e3\uff0c\u6765\u83b7\u53d6\u8fd0\u7b97\u7ed3\u679c\uff0c\u56e0\u6b64\u79f0\u4e4b\u4e3a Stub \uff1b Stub\u600e\u4e48\u548cService B\u5efa\u7acb\u8fdc\u7a0b\u901a\u8baf\u5462\uff1f\u8fd9\u65f6\u5019\u5c31\u8981\u7528\u5230 \u8fdc\u7a0b\u901a\u8baf\u5de5\u5177 \u4e86\uff0c\u4e5f\u5c31\u662f\u56fe\u4e2d\u7684 Run-time Library \uff0c\u8fd9\u4e2a\u5de5\u5177\u5c06\u5e2e\u4f60\u5b9e\u73b0\u8fdc\u7a0b\u901a\u8baf\u7684\u529f\u80fd\uff0c\u6bd4\u5982Java\u7684 Socket \uff0c\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u5e93\uff0c\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u7528\u57fa\u4e8eHttp\u534f\u8bae\u7684 HttpClient \uff0c\u6216\u8005\u5176\u4ed6\u901a\u8baf\u5de5\u5177\u7c7b\uff0c\u90fd\u53ef\u4ee5\uff0c RPC\u5e76\u6ca1\u6709\u89c4\u5b9a\u8bf4\u4f60\u8981\u7528\u4f55\u79cd\u534f\u8bae\u8fdb\u884c\u901a\u8baf \uff1b Stub\u901a\u8fc7\u8c03\u7528\u901a\u8baf\u5de5\u5177\u63d0\u4f9b\u7684\u65b9\u6cd5\uff0c\u548cService B\u5efa\u7acb\u8d77\u4e86\u901a\u8baf\uff0c\u7136\u540e\u5c06\u8bf7\u6c42\u6570\u636e\u53d1\u7ed9Service B\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7531\u4e8e\u5e95\u5c42\u7684\u7f51\u7edc\u901a\u8baf\u662f\u57fa\u4e8e \u4e8c\u8fdb\u5236\u683c\u5f0f \u7684\uff0c\u56e0\u6b64\u8fd9\u91ccStub\u4f20\u7ed9\u901a\u8baf\u5de5\u5177\u7c7b\u7684\u6570\u636e\u4e5f\u5fc5\u987b\u662f\u4e8c\u8fdb\u5236\uff0c\u6bd4\u5982calculator.add(1,2)\uff0c\u4f60\u5fc5\u987b\u628a\u53c2\u6570\u503c1\u548c2\u653e\u5230\u4e00\u4e2aRequest\u5bf9\u8c61\u91cc\u5934\uff08\u8fd9\u4e2aRequest\u5bf9\u8c61\u5f53\u7136\u4e0d\u53ea\u8fd9\u4e9b\u4fe1\u606f\uff0c\u8fd8\u5305\u62ec\u8981\u8c03\u7528\u54ea\u4e2a\u670d\u52a1\u7684\u54ea\u4e2aRPC\u63a5\u53e3\u7b49\u5176\u4ed6\u4fe1\u606f\uff09\uff0c\u7136\u540e \u5e8f\u5217\u5316 \u4e3a\u4e8c\u8fdb\u5236\uff0c\u518d\u4f20\u7ed9\u901a\u8baf\u5de5\u5177\u7c7b\uff0c\u8fd9\u4e00\u70b9\u4e5f\u5c06\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u4e2d\u4f53\u73b0\uff1b \u4e8c\u8fdb\u5236\u7684\u6570\u636e\u4f20\u5230Service B\u8fd9\u4e00\u8fb9\u4e86\uff0cService B\u5f53\u7136\u4e5f\u6709\u81ea\u5df1\u7684\u901a\u8baf\u5de5\u5177\uff0c\u901a\u8fc7\u8fd9\u4e2a\u901a\u8baf\u5de5\u5177\u63a5\u6536\u4e8c\u8fdb\u5236\u7684\u8bf7\u6c42\uff1b \u65e2\u7136\u6570\u636e\u662f\u4e8c\u8fdb\u5236\u7684\uff0c\u90a3\u4e48\u81ea\u7136\u8981\u8fdb\u884c \u53cd\u5e8f\u5217\u5316 \u4e86\uff0c\u5c06\u4e8c\u8fdb\u5236\u7684\u6570\u636e\u53cd\u5e8f\u5217\u5316\u4e3a\u8bf7\u6c42\u5bf9\u8c61\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u8bf7\u6c42\u5bf9\u8c61\u4ea4\u7ed9Service B\u7684Stub\u5904\u7406\uff1b \u548c\u4e4b\u524d\u7684Service A\u7684Stub\u4e00\u6837\uff0c\u8fd9\u91cc\u7684Stub\u4e5f\u540c\u6837\u662f\u4e2a\u201c\u5047\u73a9\u610f\u201d\uff0c\u5b83\u6240\u8d1f\u8d23\u7684\uff0c\u53ea\u662f\u53bb\u89e3\u6790\u8bf7\u6c42\u5bf9\u8c61\uff0c\u77e5\u9053\u8c03\u7528\u65b9\u8981\u8c03\u7684\u662f\u54ea\u4e2aRPC\u63a5\u53e3\uff0c\u4f20\u8fdb\u6765\u7684\u53c2\u6570\u53c8\u662f\u4ec0\u4e48\uff0c\u7136\u540e\u518d\u628a\u8fd9\u4e9b\u53c2\u6570\u4f20\u7ed9\u5bf9\u5e94\u7684RPC\u63a5\u53e3\uff0c\u4e5f\u5c31\u662fCalculator\u7684\u5b9e\u9645\u5b9e\u73b0\u7c7b\u53bb\u6267\u884c\u3002\u5f88\u660e\u663e\uff0c\u5982\u679c\u662fJava\uff0c\u90a3\u8fd9\u91cc\u80af\u5b9a\u7528\u5230\u4e86 \u53cd\u5c04 \u3002 RPC\u63a5\u53e3\u6267\u884c\u5b8c\u6bd5\uff0c\u8fd4\u56de\u6267\u884c\u7ed3\u679c\uff0c\u73b0\u5728\u8f6e\u5230Service B\u8981\u628a\u6570\u636e\u53d1\u7ed9Service A\u4e86\uff0c\u600e\u4e48\u53d1\uff1f\u4e00\u6837\u7684\u9053\u7406\uff0c\u4e00\u6837\u7684\u6d41\u7a0b\uff0c\u53ea\u662f\u73b0\u5728Service B\u53d8\u6210\u4e86Client\uff0cService A\u53d8\u6210\u4e86Server\u800c\u5df2\uff1aService B\u53cd\u5e8f\u5217\u5316\u6267\u884c\u7ed3\u679c->\u4f20\u8f93\u7ed9Service A->Service A\u53cd\u5e8f\u5217\u5316\u6267\u884c\u7ed3\u679c -> \u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9Application\uff0c\u5b8c\u6bd5\u3002 RabbitMQ \u63d0\u5230RabbitMQ\uff0c\u5c31\u4e0d\u5f97\u4e0d\u63d0AMQP\u534f\u8bae\u3002AMQP\u534f\u8bae\u662f\u5177\u6709\u73b0\u4ee3\u7279\u5f81\u7684\u4e8c\u8fdb\u5236\u534f\u8bae\u3002\u662f\u4e00\u4e2a\u63d0\u4f9b\u7edf\u4e00\u6d88\u606f\u670d\u52a1\u7684\u5e94\u7528\u5c42\u6807\u51c6\u9ad8\u7ea7\u6d88\u606f\u961f\u5217\u534f\u8bae\uff0c\u662f\u5e94\u7528\u5c42\u534f\u8bae\u7684\u4e00\u4e2a\u5f00\u653e\u6807\u51c6\uff0c\u4e3a\u9762\u5411\u6d88\u606f\u7684\u4e2d\u95f4\u4ef6\u8bbe\u8ba1\u3002 AMQP\u534f\u8bae\u4e2d\u95f4\u7684\u51e0\u4e2a\u91cd\u8981\u6982\u5ff5\uff1a Server\uff1a\u63a5\u6536\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\uff0c\u5b9e\u73b0AMQP\u5b9e\u4f53\u670d\u52a1\u3002 Connection\uff1a\u8fde\u63a5\uff0c\u5e94\u7528\u7a0b\u5e8f\u4e0eServer\u7684\u7f51\u7edc\u8fde\u63a5\uff0cTCP\u8fde\u63a5\u3002 Channel\uff1a\u4fe1\u9053\uff0c\u6d88\u606f\u8bfb\u5199\u7b49\u64cd\u4f5c\u5728\u4fe1\u9053\u4e2d\u8fdb\u884c\u3002\u5ba2\u6237\u7aef\u53ef\u4ee5\u5efa\u7acb\u591a\u4e2a\u4fe1\u9053\uff0c\u6bcf\u4e2a\u4fe1\u9053\u4ee3\u8868\u4e00\u4e2a\u4f1a\u8bdd\u4efb\u52a1\u3002 Message\uff1a\u6d88\u606f\uff0c\u5e94\u7528\u7a0b\u5e8f\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u4f20\u9001\u7684\u6570\u636e\uff0c\u6d88\u606f\u53ef\u4ee5\u975e\u5e38\u7b80\u5355\uff0c\u4e5f\u53ef\u4ee5\u5f88\u590d\u6742\u3002\u6709Properties\u548cBody\u7ec4\u6210\u3002Properties\u4e3a\u5916\u5305\u88c5\uff0c\u53ef\u4ee5\u5bf9\u6d88\u606f\u8fdb\u884c\u4fee\u9970\uff0c\u6bd4\u5982\u6d88\u606f\u7684\u4f18\u5148\u7ea7\u3001\u5ef6\u8fdf\u7b49\u9ad8\u7ea7\u7279\u6027\uff1bBody\u5c31\u662f\u6d88\u606f\u4f53\u5185\u5bb9\u3002 Virtual Host\uff1a\u865a\u62df\u4e3b\u673a\uff0c\u7528\u4e8e\u903b\u8f91\u9694\u79bb\u3002\u4e00\u4e2a\u865a\u62df\u4e3b\u673a\u91cc\u9762\u53ef\u4ee5\u6709\u82e5\u5e72\u4e2aExchange\u548cQueue\uff0c\u540c\u4e00\u4e2a\u865a\u62df\u4e3b\u673a\u91cc\u9762\u4e0d\u80fd\u6709\u76f8\u540c\u540d\u79f0\u7684Exchange\u6216Queue\u3002 Exchange\uff1a\u4ea4\u6362\u5668\uff0c\u63a5\u6536\u6d88\u606f\uff0c\u6309\u7167\u8def\u7531\u89c4\u5219\u5c06\u6d88\u606f\u8def\u7531\u5230\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u961f\u5217\u3002\u5982\u679c\u8def\u7531\u4e0d\u5230\uff0c\u6216\u8005\u8fd4\u56de\u7ed9\u751f\u4ea7\u8005\uff0c\u6216\u8005\u76f4\u63a5\u4e22\u5f03\u3002RabbitMQ\u5e38\u7528\u7684\u4ea4\u6362\u5668\u5e38\u7528\u7c7b\u578b\u6709direct\u3001topic\u3001fanout\u3001headers\u56db\u79cd\uff0c\u540e\u9762\u8be6\u7ec6\u4ecb\u7ecd\u3002 Binding\uff1a\u7ed1\u5b9a\uff0c\u4ea4\u6362\u5668\u548c\u6d88\u606f\u961f\u5217\u4e4b\u95f4\u7684\u865a\u62df\u8fde\u63a5\uff0c\u7ed1\u5b9a\u4e2d\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u6216\u8005\u591a\u4e2aRoutingKey\u3002 RoutingKey\uff1a\u8def\u7531\u952e\uff0c\u751f\u4ea7\u8005\u5c06\u6d88\u606f\u53d1\u9001\u7ed9\u4ea4\u6362\u5668\u7684\u65f6\u5019\uff0c\u4f1a\u53d1\u9001\u4e00\u4e2aRoutingKey\uff0c\u7528\u6765\u6307\u5b9a\u8def\u7531\u89c4\u5219\uff0c\u8fd9\u6837\u4ea4\u6362\u5668\u5c31\u77e5\u9053\u628a\u6d88\u606f\u53d1\u9001\u5230\u54ea\u4e2a\u961f\u5217\u3002\u8def\u7531\u952e\u901a\u5e38\u4e3a\u4e00\u4e2a\u201c.\u201d\u5206\u5272\u7684\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\u201ccom.rabbitmq\u201d\u3002 Queue\uff1a\u6d88\u606f\u961f\u5217\uff0c\u7528\u6765\u4fdd\u5b58\u6d88\u606f\uff0c\u4f9b\u6d88\u8d39\u8005\u6d88\u8d39\u3002 flowchart LR subgraph Server subgraph Virtual Host A(Exchange) --- B(Message Queue) end end Publisher\\nApplication --> A B --> Consumer\\nApplication \u5e38\u7528\u4ea4\u6362\u5668 RabbitMQ\u5e38\u7528\u7684\u4ea4\u6362\u5668\u7c7b\u578b\u6709direct\u3001topic\u3001fanout\u3001headers\u56db\u79cd\u3002 \u4ea4\u6362\u5668\u7c7b\u578b \u8bf4\u660e Direct Exchange \u8be5\u7c7b\u578b\u7684\u4ea4\u6362\u5668\u5c06\u6240\u6709\u53d1\u9001\u5230\u8be5\u4ea4\u6362\u5668\u7684\u6d88\u606f\u88ab\u8f6c\u53d1\u5230RoutingKey\u6307\u5b9a\u7684\u961f\u5217\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4\u8def\u7531\u5230BindingKey\u548cRoutingKey\u5b8c\u5168\u5339\u914d\u7684\u961f\u5217\u4e2d\u3002 Topic Exchange \u8be5\u7c7b\u578b\u7684\u4ea4\u6362\u5668\u5c06\u6240\u6709\u53d1\u9001\u5230Topic Exchange\u7684\u6d88\u606f\u88ab\u8f6c\u53d1\u5230\u6240\u6709RoutingKey\u4e2d\u6307\u5b9a\u7684Topic\u7684\u961f\u5217\u4e0a\u9762\u3002 Fanout Exchange \u8be5\u7c7b\u578b\u4e0d\u5904\u7406\u8def\u7531\u952e\uff0c\u4f1a\u628a\u6240\u6709\u53d1\u9001\u5230\u4ea4\u6362\u5668\u7684\u6d88\u606f\u8def\u7531\u5230\u6240\u6709\u7ed1\u5b9a\u7684\u961f\u5217\u4e2d\u3002\u4f18\u70b9\u662f\u8f6c\u53d1\u6d88\u606f\u6700\u5feb\uff0c\u6027\u80fd\u6700\u597d\u3002 Headers Exchange \u8be5\u7c7b\u578b\u7684\u4ea4\u6362\u5668\u4e0d\u4f9d\u8d56\u8def\u7531\u89c4\u5219\u6765\u8def\u7531\u6d88\u606f\uff0c\u800c\u662f\u6839\u636e\u6d88\u606f\u5185\u5bb9\u4e2d\u7684headers\u5c5e\u6027\u8fdb\u884c\u5339\u914d\u3002headers\u7c7b\u578b\u4ea4\u6362\u5668\u6027\u80fd\u5dee\uff0c\u5728\u5b9e\u9645\u4e2d\u5e76\u4e0d\u5e38\u7528\u3002 \u5b9e\u73b0\u539f\u7406\uff1a \u5ba2\u6237\u7aef Client \u8bbe\u7f6e\u6d88\u606f\u7684 routing key \u4e3a Service \u7684\u961f\u5217 op_q\uff1b\u8bbe\u7f6e\u6d88\u606f\u7684 reply-to \u5c5e\u6027\u4e3a\u8fd4\u56de\u7684 response \u7684\u76ee\u6807\u961f\u5217 reponse_q\uff0c\u8bbe\u7f6e\u5176 correlation_id \u4e3a\u4ee5\u968f\u673aUUID\uff0c\u7136\u540e\u5c06\u6d88\u606f\u53d1\u5230 exchange\u3002\u6bd4\u5982 channel.basic_publish(exchange='', routing_key='op_q', properties=pika.BasicProperties(reply_to = reponse_q, correlation_id = self.corr_id),body=request) Exchange \u5c06\u6d88\u606f\u8f6c\u53d1\u5230 Service \u7684 op_q Service \u6536\u5230\u8be5\u6d88\u606f\u540e\u8fdb\u884c\u5904\u7406\uff0c\u7136\u540e\u5c06response \u53d1\u5230 exchange\uff0c\u5e76\u8bbe\u7f6e\u6d88\u606f\u7684 routing_key \u4e3a\u539f\u6d88\u606f\u7684 reply_to \u5c5e\u6027\uff0c\u4ee5\u53ca\u8bbe\u7f6e\u5176 correlation_id \u4e3a\u539f\u6d88\u606f\u7684 correlation_id \u3002 ch.basic_publish(exchange='', routing_key=props.reply_to, properties=pika.BasicProperties( correlation_id = props.correlation_id), body=str(response)) Exchange \u5c06\u6d88\u606f\u8f6c\u53d1\u5230 reponse_q Client \u9010\u4e00\u63a5\u53d7 response_q \u4e2d\u7684\u6d88\u606f\uff0c\u68c0\u67e5\u6d88\u606f\u7684 correlation_id \u662f\u5426\u4e3a\u7b49\u4e8e\u5b83\u53d1\u51fa\u7684\u6d88\u606f\u7684correlation_id\uff0c\u662f\u7684\u8bdd\u8868\u660e\u8be5\u6d88\u606f\u4e3a\u5b83\u9700\u8981\u7684response\u3002","title":"RPC"},{"location":"Openstack/RPC/#rabbitmq","text":"\u63d0\u5230RabbitMQ\uff0c\u5c31\u4e0d\u5f97\u4e0d\u63d0AMQP\u534f\u8bae\u3002AMQP\u534f\u8bae\u662f\u5177\u6709\u73b0\u4ee3\u7279\u5f81\u7684\u4e8c\u8fdb\u5236\u534f\u8bae\u3002\u662f\u4e00\u4e2a\u63d0\u4f9b\u7edf\u4e00\u6d88\u606f\u670d\u52a1\u7684\u5e94\u7528\u5c42\u6807\u51c6\u9ad8\u7ea7\u6d88\u606f\u961f\u5217\u534f\u8bae\uff0c\u662f\u5e94\u7528\u5c42\u534f\u8bae\u7684\u4e00\u4e2a\u5f00\u653e\u6807\u51c6\uff0c\u4e3a\u9762\u5411\u6d88\u606f\u7684\u4e2d\u95f4\u4ef6\u8bbe\u8ba1\u3002 AMQP\u534f\u8bae\u4e2d\u95f4\u7684\u51e0\u4e2a\u91cd\u8981\u6982\u5ff5\uff1a Server\uff1a\u63a5\u6536\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\uff0c\u5b9e\u73b0AMQP\u5b9e\u4f53\u670d\u52a1\u3002 Connection\uff1a\u8fde\u63a5\uff0c\u5e94\u7528\u7a0b\u5e8f\u4e0eServer\u7684\u7f51\u7edc\u8fde\u63a5\uff0cTCP\u8fde\u63a5\u3002 Channel\uff1a\u4fe1\u9053\uff0c\u6d88\u606f\u8bfb\u5199\u7b49\u64cd\u4f5c\u5728\u4fe1\u9053\u4e2d\u8fdb\u884c\u3002\u5ba2\u6237\u7aef\u53ef\u4ee5\u5efa\u7acb\u591a\u4e2a\u4fe1\u9053\uff0c\u6bcf\u4e2a\u4fe1\u9053\u4ee3\u8868\u4e00\u4e2a\u4f1a\u8bdd\u4efb\u52a1\u3002 Message\uff1a\u6d88\u606f\uff0c\u5e94\u7528\u7a0b\u5e8f\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u4f20\u9001\u7684\u6570\u636e\uff0c\u6d88\u606f\u53ef\u4ee5\u975e\u5e38\u7b80\u5355\uff0c\u4e5f\u53ef\u4ee5\u5f88\u590d\u6742\u3002\u6709Properties\u548cBody\u7ec4\u6210\u3002Properties\u4e3a\u5916\u5305\u88c5\uff0c\u53ef\u4ee5\u5bf9\u6d88\u606f\u8fdb\u884c\u4fee\u9970\uff0c\u6bd4\u5982\u6d88\u606f\u7684\u4f18\u5148\u7ea7\u3001\u5ef6\u8fdf\u7b49\u9ad8\u7ea7\u7279\u6027\uff1bBody\u5c31\u662f\u6d88\u606f\u4f53\u5185\u5bb9\u3002 Virtual Host\uff1a\u865a\u62df\u4e3b\u673a\uff0c\u7528\u4e8e\u903b\u8f91\u9694\u79bb\u3002\u4e00\u4e2a\u865a\u62df\u4e3b\u673a\u91cc\u9762\u53ef\u4ee5\u6709\u82e5\u5e72\u4e2aExchange\u548cQueue\uff0c\u540c\u4e00\u4e2a\u865a\u62df\u4e3b\u673a\u91cc\u9762\u4e0d\u80fd\u6709\u76f8\u540c\u540d\u79f0\u7684Exchange\u6216Queue\u3002 Exchange\uff1a\u4ea4\u6362\u5668\uff0c\u63a5\u6536\u6d88\u606f\uff0c\u6309\u7167\u8def\u7531\u89c4\u5219\u5c06\u6d88\u606f\u8def\u7531\u5230\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u961f\u5217\u3002\u5982\u679c\u8def\u7531\u4e0d\u5230\uff0c\u6216\u8005\u8fd4\u56de\u7ed9\u751f\u4ea7\u8005\uff0c\u6216\u8005\u76f4\u63a5\u4e22\u5f03\u3002RabbitMQ\u5e38\u7528\u7684\u4ea4\u6362\u5668\u5e38\u7528\u7c7b\u578b\u6709direct\u3001topic\u3001fanout\u3001headers\u56db\u79cd\uff0c\u540e\u9762\u8be6\u7ec6\u4ecb\u7ecd\u3002 Binding\uff1a\u7ed1\u5b9a\uff0c\u4ea4\u6362\u5668\u548c\u6d88\u606f\u961f\u5217\u4e4b\u95f4\u7684\u865a\u62df\u8fde\u63a5\uff0c\u7ed1\u5b9a\u4e2d\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u6216\u8005\u591a\u4e2aRoutingKey\u3002 RoutingKey\uff1a\u8def\u7531\u952e\uff0c\u751f\u4ea7\u8005\u5c06\u6d88\u606f\u53d1\u9001\u7ed9\u4ea4\u6362\u5668\u7684\u65f6\u5019\uff0c\u4f1a\u53d1\u9001\u4e00\u4e2aRoutingKey\uff0c\u7528\u6765\u6307\u5b9a\u8def\u7531\u89c4\u5219\uff0c\u8fd9\u6837\u4ea4\u6362\u5668\u5c31\u77e5\u9053\u628a\u6d88\u606f\u53d1\u9001\u5230\u54ea\u4e2a\u961f\u5217\u3002\u8def\u7531\u952e\u901a\u5e38\u4e3a\u4e00\u4e2a\u201c.\u201d\u5206\u5272\u7684\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\u201ccom.rabbitmq\u201d\u3002 Queue\uff1a\u6d88\u606f\u961f\u5217\uff0c\u7528\u6765\u4fdd\u5b58\u6d88\u606f\uff0c\u4f9b\u6d88\u8d39\u8005\u6d88\u8d39\u3002 flowchart LR subgraph Server subgraph Virtual Host A(Exchange) --- B(Message Queue) end end Publisher\\nApplication --> A B --> Consumer\\nApplication \u5e38\u7528\u4ea4\u6362\u5668 RabbitMQ\u5e38\u7528\u7684\u4ea4\u6362\u5668\u7c7b\u578b\u6709direct\u3001topic\u3001fanout\u3001headers\u56db\u79cd\u3002 \u4ea4\u6362\u5668\u7c7b\u578b \u8bf4\u660e Direct Exchange \u8be5\u7c7b\u578b\u7684\u4ea4\u6362\u5668\u5c06\u6240\u6709\u53d1\u9001\u5230\u8be5\u4ea4\u6362\u5668\u7684\u6d88\u606f\u88ab\u8f6c\u53d1\u5230RoutingKey\u6307\u5b9a\u7684\u961f\u5217\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4\u8def\u7531\u5230BindingKey\u548cRoutingKey\u5b8c\u5168\u5339\u914d\u7684\u961f\u5217\u4e2d\u3002 Topic Exchange \u8be5\u7c7b\u578b\u7684\u4ea4\u6362\u5668\u5c06\u6240\u6709\u53d1\u9001\u5230Topic Exchange\u7684\u6d88\u606f\u88ab\u8f6c\u53d1\u5230\u6240\u6709RoutingKey\u4e2d\u6307\u5b9a\u7684Topic\u7684\u961f\u5217\u4e0a\u9762\u3002 Fanout Exchange \u8be5\u7c7b\u578b\u4e0d\u5904\u7406\u8def\u7531\u952e\uff0c\u4f1a\u628a\u6240\u6709\u53d1\u9001\u5230\u4ea4\u6362\u5668\u7684\u6d88\u606f\u8def\u7531\u5230\u6240\u6709\u7ed1\u5b9a\u7684\u961f\u5217\u4e2d\u3002\u4f18\u70b9\u662f\u8f6c\u53d1\u6d88\u606f\u6700\u5feb\uff0c\u6027\u80fd\u6700\u597d\u3002 Headers Exchange \u8be5\u7c7b\u578b\u7684\u4ea4\u6362\u5668\u4e0d\u4f9d\u8d56\u8def\u7531\u89c4\u5219\u6765\u8def\u7531\u6d88\u606f\uff0c\u800c\u662f\u6839\u636e\u6d88\u606f\u5185\u5bb9\u4e2d\u7684headers\u5c5e\u6027\u8fdb\u884c\u5339\u914d\u3002headers\u7c7b\u578b\u4ea4\u6362\u5668\u6027\u80fd\u5dee\uff0c\u5728\u5b9e\u9645\u4e2d\u5e76\u4e0d\u5e38\u7528\u3002 \u5b9e\u73b0\u539f\u7406\uff1a \u5ba2\u6237\u7aef Client \u8bbe\u7f6e\u6d88\u606f\u7684 routing key \u4e3a Service \u7684\u961f\u5217 op_q\uff1b\u8bbe\u7f6e\u6d88\u606f\u7684 reply-to \u5c5e\u6027\u4e3a\u8fd4\u56de\u7684 response \u7684\u76ee\u6807\u961f\u5217 reponse_q\uff0c\u8bbe\u7f6e\u5176 correlation_id \u4e3a\u4ee5\u968f\u673aUUID\uff0c\u7136\u540e\u5c06\u6d88\u606f\u53d1\u5230 exchange\u3002\u6bd4\u5982 channel.basic_publish(exchange='', routing_key='op_q', properties=pika.BasicProperties(reply_to = reponse_q, correlation_id = self.corr_id),body=request) Exchange \u5c06\u6d88\u606f\u8f6c\u53d1\u5230 Service \u7684 op_q Service \u6536\u5230\u8be5\u6d88\u606f\u540e\u8fdb\u884c\u5904\u7406\uff0c\u7136\u540e\u5c06response \u53d1\u5230 exchange\uff0c\u5e76\u8bbe\u7f6e\u6d88\u606f\u7684 routing_key \u4e3a\u539f\u6d88\u606f\u7684 reply_to \u5c5e\u6027\uff0c\u4ee5\u53ca\u8bbe\u7f6e\u5176 correlation_id \u4e3a\u539f\u6d88\u606f\u7684 correlation_id \u3002 ch.basic_publish(exchange='', routing_key=props.reply_to, properties=pika.BasicProperties( correlation_id = props.correlation_id), body=str(response)) Exchange \u5c06\u6d88\u606f\u8f6c\u53d1\u5230 reponse_q Client \u9010\u4e00\u63a5\u53d7 response_q \u4e2d\u7684\u6d88\u606f\uff0c\u68c0\u67e5\u6d88\u606f\u7684 correlation_id \u662f\u5426\u4e3a\u7b49\u4e8e\u5b83\u53d1\u51fa\u7684\u6d88\u606f\u7684correlation_id\uff0c\u662f\u7684\u8bdd\u8868\u660e\u8be5\u6d88\u606f\u4e3a\u5b83\u9700\u8981\u7684response\u3002","title":"RabbitMQ"},{"location":"Openstack/%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3/","text":"\u4e09\u6b21\u63e1\u624b sequenceDiagram participant Client participant Server autonumber Note left of Client: SYN_SEND Client ->> +Server: SYN=1 seq=J Note right of Server: SYN_RCVD Server -->> Client: SYN=1,ACK=1,ack=J+1,seq=K Note left of Client: ESTABLISHED Client ->> Server: ACK=1, ack=K+1 Note right of Server: ESTABLISHED \u7f51\u7edc\u8bbe\u5907 \u7f51\u5173\u548c\u8def\u7531\u5668 \u7f51\u5173\u4e0e\u8def\u7531\u5668\u4e24\u8005\u5b83\u4eec\u7684\u4f5c\u7528\u90fd\u662f\u7528\u5728\u7f51\u7edc\u5f53\u4e2d\uff0c\u4e3b\u8981\u662f\u7528\u6765\u8fde\u63a5\u4e0d\u540c\u5b50\u7f51\u7684\u4e3b\u673a\uff0c\u8fd9\u4e24\u79cd\u90fd\u662f\u5c5e\u4e8e\u786c\u4ef6\u8bbe\u65bd\uff0c\u5b83\u4eec\u90fd\u53ef\u4ee5\u5bf9\u5230\u8fbe\u8be5\u4e3b\u673a\u7684\u6570\u636e\u5305\u8fdb\u884c\u8f6c\u53d1\u3002 \u7f51\u5173\uff08Gateway\uff09\u5c31\u662f\u4e00\u4e2a\u7f51\u7edc\u8fde\u63a5\u5230\u53e6\u4e00\u4e2a\u7f51\u7edc\u7684\u201c\u5173\u53e3 \u7f51\u5173\u5b9e\u8d28\u4e0a\u662f\u4e00\u4e2a\u7f51\u7edc\u901a\u5411\u5176\u4ed6\u7f51\u7edc\u7684IP\u5730\u5740\u3002\u6bd4\u5982\u6709\u7f51\u7edcA\u548c\u7f51\u7edcB\uff0c\u7f51\u7edcA\u7684IP\u5730\u5740\u8303\u56f4\u4e3a\u201c192.168.1.1~192. 168.1.254\u201d\uff0c\u5b50\u7f51\u63a9\u7801\u4e3a255.255.255.0\uff1b\u7f51\u7edcB\u7684IP\u5730\u5740\u8303\u56f4\u4e3a\u201c192.168.2.1~192.168.2.254\u201d\uff0c\u5b50\u7f51\u63a9\u7801\u4e3a255.255.255.0\u3002 \u200b \u5728\u6ca1\u6709\u8def\u7531\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u4e24\u4e2a\u7f51\u7edc\u4e4b\u95f4\u662f\u4e0d\u80fd\u8fdb\u884cTCP/IP\u901a\u4fe1\u7684\uff0c\u5373\u4f7f\u662f\u4e24\u4e2a\u7f51\u7edc\u8fde\u63a5\u5728\u540c\u4e00\u53f0\u4ea4\u6362\u673a\uff08\u6216\u96c6\u7ebf\u5668\uff09\u4e0a\uff0cTCP/IP\u534f\u8bae\u4e5f\u4f1a\u6839\u636e\u5b50\u7f51\u63a9\u7801\uff08255.255.255.0\uff09\u5224\u5b9a\u4e24\u4e2a\u7f51\u7edc\u4e2d\u7684\u4e3b\u673a\u5904\u5728\u4e0d\u540c\u7684\u7f51\u7edc\u91cc\u3002\u800c\u8981\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u7f51\u7edc\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u5219\u5fc5\u987b\u901a\u8fc7\u7f51\u5173\u3002 \u200b \u5982\u679c\u7f51\u7edcA\u4e2d\u7684\u4e3b\u673a\u53d1\u73b0\u6570\u636e\u5305\u7684\u76ee\u7684\u4e3b\u673a\u4e0d\u5728\u672c\u5730\u7f51\u7edc\u4e2d\uff0c\u5c31\u628a\u6570\u636e\u5305\u8f6c\u53d1\u7ed9\u5b83\u81ea\u5df1\u7684\u7f51\u5173\uff0c\u518d\u7531\u7f51\u5173\u8f6c\u53d1\u7ed9\u7f51\u7edcB\u7684\u7f51\u5173\uff0c\u7f51\u7edcB\u7684\u7f51\u5173\u518d\u8f6c\u53d1\u7ed9\u7f51\u7edcB\u7684\u67d0\u4e2a\u4e3b\u673a\u3002\u7f51\u7edcB\u5411\u7f51\u7edcA\u8f6c\u53d1\u6570\u636e\u5305\u7684\u8fc7\u7a0b\u4e5f\u662f\u5982\u6b64\u3002 \u6240\u4ee5\u8bf4\uff0c\u53ea\u6709\u8bbe\u7f6e\u597d\u7f51\u5173\u7684IP\u5730\u5740\uff0cTCP/IP\u534f\u8bae\u624d\u80fd\u5b9e\u73b0\u4e0d\u540c\u7f51\u7edc\u4e4b\u95f4\u7684\u76f8\u4e92\u901a\u4fe1\u3002\u90a3\u4e48\u8fd9\u4e2aIP\u5730\u5740\u662f\u54ea\u53f0\u673a\u5668\u7684IP\u5730\u5740\u5462\uff1f\u7f51\u5173\u7684IP\u5730\u5740\u662f\u5177\u6709\u8def\u7531\u529f\u80fd\u7684\u8bbe\u5907\u7684IP\u5730\u5740\uff0c\u5177\u6709\u8def\u7531\u529f\u80fd\u7684\u8bbe\u5907\u6709\u8def\u7531\u5668\u3001\u542f\u7528\u4e86\u8def\u7531\u534f\u8bae\u7684\u670d\u52a1\u5668\uff08\u5b9e\u8d28\u4e0a\u76f8\u5f53\u4e8e\u4e00\u53f0\u8def\u7531\u5668\uff09\u3001\u4ee3\u7406\u670d\u52a1\u5668\uff08\u4e5f\u76f8\u5f53\u4e8e\u4e00\u53f0\u8def\u7531\u5668\uff09 \u8def\u7531\u5668\uff08Router\uff09\u662f\u4e00\u79cd\u8d1f\u8d23\u5bfb\u5f84\u7684\u7f51\u7edc\u8bbe\u5907\uff0c\u5b83\u5728\u4e92\u8fde\u7f51\u7edc\u4e2d\u4ece\u591a\u6761\u8def\u5f84\u4e2d\u5bfb\u627e\u901a\u8baf\u91cf\u6700\u5c11\u7684\u4e00\u6761\u7f51\u7edc\u8def\u5f84\u63d0\u4f9b\u7ed9\u7528\u6237\u901a\u4fe1\u3002\u8def\u7531\u5668\u7528\u4e8e\u8fde\u63a5\u591a\u4e2a\u903b\u8f91\u4e0a\u5206\u5f00\u7684\u7f51\u7edc\u3002\u5bf9\u7528\u6237\u63d0\u4f9b\u6700\u4f73\u7684\u901a\u4fe1\u8def\u5f84\uff0c\u8def\u7531\u5668\u5229\u7528\u8def\u7531\u8868\u4e3a\u6570\u636e\u4f20\u8f93\u9009\u62e9\u8def\u5f84\uff0c\u8def\u7531\u8868\u5305\u542b\u7f51\u7edc\u5730\u5740\u4ee5\u53ca\u5404\u5730\u5740\u4e4b\u95f4\u8ddd\u79bb\u7684\u6e05\u5355\uff0c\u8def\u7531\u5668\u5229\u7528\u8def\u7531\u8868\u67e5\u627e\u6570\u636e\u5305\u4ece\u5f53\u524d\u4f4d\u7f6e\u5230\u76ee\u7684\u5730\u5740\u7684\u6b63\u786e\u8def\u5f84\u3002\u8def\u7531\u5668\u4f7f\u7528\u6700\u5c11\u65f6\u95f4\u7b97\u6cd5\u6216\u6700\u4f18\u8def\u5f84\u7b97\u6cd5\u6765\u8c03\u6574\u4fe1\u606f\u4f20\u9012\u7684\u8def\u5f84\uff0c\u5982\u679c\u67d0\u4e00\u7f51\u7edc\u8def\u5f84\u53d1\u751f\u6545\u969c\u6216\u5835\u585e\uff0c\u8def\u7531\u5668\u53ef\u9009\u62e9\u53e6\u4e00\u6761\u8def\u5f84\uff0c\u4ee5\u4fdd\u8bc1\u4fe1\u606f\u7684\u6b63\u5e38\u4f20\u8f93\u3002\u8def\u7531\u5668\u53ef\u8fdb\u884c\u6570\u636e\u683c\u5f0f\u7684\u8f6c\u6362\uff0c\u6210\u4e3a\u4e0d\u540c\u534f\u8bae\u4e4b\u95f4\u7f51\u7edc\u4e92\u8fde\u7684\u5fc5\u8981\u8bbe\u5907\u3002 \u8d1f\u8f7d\u5747\u8861 \u8d1f\u8f7d\u5747\u8861\u6709\u4e24\u65b9\u9762\u7684\u542b\u4e49\uff1a \u9996\u5148\uff0c\u5927\u91cf\u7684\u5e76\u53d1\u8bbf\u95ee\u6216\u6570\u636e\u6d41\u91cf\u5206\u62c5\u5230\u591a\u53f0\u8282\u70b9\u8bbe\u5907\u4e0a\u5206\u522b\u5904\u7406\uff0c\u51cf\u5c11\u7528\u6237\u7b49\u5f85\u54cd\u5e94\u7684\u65f6\u95f4\uff1b \u5176\u6b21\uff0c\u5355\u4e2a\u91cd\u8d1f\u8f7d\u7684\u8fd0\u7b97\u5206\u62c5\u5230\u591a\u53f0\u8282\u70b9\u8bbe\u5907\u4e0a\u505a\u5e76\u884c\u5904\u7406\uff0c\u6bcf\u4e2a\u8282\u70b9\u8bbe\u5907\u5904\u7406\u7ed3\u675f\u540e\uff0c\u5c06\u7ed3\u679c\u6c47\u603b\uff0c\u8fd4\u56de\u7ed9\u7528\u6237\uff0c\u7cfb\u7edf\u5904\u7406\u80fd\u529b\u5f97\u5230\u5927\u5e45\u5ea6\u63d0\u9ad8\u3002 \u76ee\u524d\u8d1f\u8f7d\u5747\u8861\u6280\u672f\u5927\u591a\u6570\u662f\u7528\u4e8e\u63d0\u9ad8\u8bf8\u5982\u5728Web\u670d\u52a1\u5668\u3001FTP\u670d\u52a1\u5668\u548c\u5176\u5b83\u5173\u952e\u4efb\u52a1\u670d\u52a1\u5668\u4e0a\u7684Internet\u670d\u52a1\u5668\u7a0b\u5e8f\u7684\u53ef\u7528\u6027\u548c\u53ef\u4f38\u7f29\u6027\u3002 \u5206\u7c7b \u7c7b\u522b \u8bf4\u660e \u4e8c\u5c42\u8d1f\u8f7d\u5747\u8861\uff08mac\uff09 \u6839\u636eOSI\u6a21\u578b\u5206\u7684\u4e8c\u5c42\u8d1f\u8f7d\uff0c\u4e00\u822c\u662f\u7528\u865a\u62dfmac\u5730\u5740\u65b9\u5f0f\uff0c\u5916\u90e8\u5bf9\u865a\u62dfMAC\u5730\u5740\u8bf7\u6c42\uff0c\u8d1f\u8f7d\u5747\u8861\u63a5\u6536\u540e\u5206\u914d\u540e\u7aef\u5b9e\u9645\u7684MAC\u5730\u5740\u54cd\u5e94.** \u4e09\u5c42\u8d1f\u8f7d\u5747\u8861\uff08ip\uff09 \u4e00\u822c\u91c7\u7528\u865a\u62dfIP\u5730\u5740\u65b9\u5f0f\uff0c\u5916\u90e8\u5bf9\u865a\u62df\u7684ip\u5730\u5740\u8bf7\u6c42\uff0c\u8d1f\u8f7d\u5747\u8861\u63a5\u6536\u540e\u5206\u914d\u540e\u7aef\u5b9e\u9645\u7684IP\u5730\u5740\u54cd\u5e94. (\u5373\u4e00\u4e2aip\u5bf9\u4e00\u4e2aip\u7684\u8f6c\u53d1, \u7aef\u53e3\u5168\u653e\u5f00) \u56db\u5c42\u8d1f\u8f7d\u5747\u8861\uff08tcp\uff09 \u5728\u4e09\u6b21\u8d1f\u8f7d\u5747\u8861\u7684\u57fa\u7840\u4e0a\uff0c\u5373\u4ece\u7b2c\u56db\u5c42\"\u4f20\u8f93\u5c42\"\u5f00\u59cb, \u4f7f\u7528\"\u865a\u62dfip+port\"\u63a5\u6536\u8bf7\u6c42\uff0c\u518d\u8f6c\u53d1\u5230\u5bf9\u5e94\u7684\u673a\u5668\u3002 \u4e03\u5c42\u8d1f\u8f7d\u5747\u8861\uff08http\uff09 \u4ece\u7b2c\u4e03\u5c42\"\u5e94\u7528\u5c42\"\u5f00\u59cb, \u6839\u636e\u865a\u62df\u7684url\u6216IP\uff0c\u4e3b\u673a\u540d\u63a5\u6536\u8bf7\u6c42\uff0c\u518d\u8f6c\u5411\u76f8\u5e94\u7684\u5904\u7406\u670d\u52a1\u5668\u3002 \u56db\u5c42\u3001\u4e03\u5c42\u8d1f\u8f7d\u5747\u8861\u7684\u533a\u522b \u6240\u8c13\u7684\u56db\u5230\u4e03\u5c42\u8d1f\u8f7d\u5747\u8861\uff0c\u5c31\u662f\u5728\u5bf9\u540e\u53f0\u7684\u670d\u52a1\u5668\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\u65f6\uff0c\u4f9d\u636e\u56db\u5c42\u7684\u4fe1\u606f\u6216\u4e03\u5c42\u7684\u4fe1\u606f\u6765\u51b3\u5b9a\u600e\u4e48\u6837\u8f6c\u53d1\u6d41\u91cf\u3002 \u56db\u5c42\u5c31\u662f\u57fa\u4e8eIP+\u7aef\u53e3\u7684\u8d1f\u8f7d\u5747\u8861\uff1b \u4e03\u5c42\u5c31\u662f\u57fa\u4e8eURL\u7b49\u5e94\u7528\u5c42\u4fe1\u606f\u7684\u8d1f\u8f7d\u5747\u8861\uff1b \u540c\u7406\uff0c\u8fd8\u6709\u4e8c\u5c42\u8d1f\u8f7d\u5747\u8861\uff08\u57fa\u4e8eMAC\u5730\u5740\uff09\uff0c\u4e09\u5c42\u8d1f\u8f7d\u5747\u8861\uff08\u57fa\u4e8eIP\u5730\u5740\uff09\uff1b \u5728\u53cd\u5411\u4ee3\u7406\u6a21\u5f0f\u4e0b\uff0c \u5f53\u8d1f\u8f7d\u5747\u8861\u8bbe\u5907\u6536\u5230\u5ba2\u6237\u7aef\u8bf7\u6c42\u540e\uff0c\u4f1a\u8bb0\u5f55\u4e0b\u6b64\u62a5\u6587\uff08 \u6e90IP\u5730\u5740\u3001\u76ee\u7684IP\u5730\u5740\u3001\u534f\u8bae\u53f7\u3001\u6e90\u7aef\u53e3\u3001\u76ee\u7684\u7aef\u53e3\uff0c\u670d\u52a1\u7c7b\u578b\u4ee5\u53ca\u63a5\u53e3\u7d22\u5f15\uff09\uff0c \u5c06\u62a5\u6587\uff08 \u76ee\u7684\u5730\u5740\u66f4\u6539\u4e3a\u4f18\u9009\u540e\u7684RS\u8bbe\u5907\u7684IP\u5730\u5740 \uff0c\u76ee\u7684\u7aef\u53e3\u53f7\u4e0d\u53d8\uff1b \u200b \u6e90\u5730\u5740\u4fee\u6539\u4e3a\u8d1f\u8f7d\u5747\u8861\u8bbe\u5907\u4e0b\u884c\u4e0e\u5bf9\u5e94RS\u8bbe\u5907\u63a5\u53e3\u7684IP\u5730\u5740\uff0c\u6e90\u7aef\u53e3\u53f7\u968f\u673a\uff09\u53d1\u9001\u7ed9RS\uff1b \u5f53RS\u6536\u5230\u62a5\u6587\u540e\uff0c\u4f1a\u4ee5\uff08RS\u63a5\u53e3IP\u5730\u5740\u4e3a\u6e90\uff0c\u8d1f\u8f7d\u5747\u8861\u8bbe\u5907\u5730\u5740\u4e3a\u76ee\u7684\uff09\u56de\u590d\u62a5\u6587\uff1b \u8d1f\u8f7d\u5747\u8861\u8bbe\u5907\u5c06\u6e90\u4fee\u6539\u4e3aVIP\uff0c\u76ee\u7684\u7aef\u53e3\u53f7\u4fee\u6539\u4e3a\u5ba2\u6237\u7aef\u7684\u6e90\u7aef\u53e3\u53f7\uff0c\u76ee\u7684IP\u4fee\u6539\u4e3aClient\u7684\u6e90IP\u56de\u590d\u62a5\u6587\u3002 flowchart LR A[ClientA:port1]:::client ===> SLB:::lb --> ServerA:portA & ServerB:portB & ... classDef client fill: white; classDef lb fill:#f96; \u4e03\u5c42SLB\u548c\u56db\u5c42SLB\u7684\u533a\u522b\uff1a \u56db\u5c42SLB\uff1a\u914d\u7f6e\u8d1f\u8f7d\u5747\u8861\u8bbe\u5907\u4e0a\u670d\u52a1\u7c7b\u578b\u4e3atcp/udp\uff0c\u8d1f\u8f7d\u5747\u8861\u8bbe\u5907\u5c06\u53ea\u89e3\u6790\u52304\u5c42\uff0c\u8d1f\u8f7d\u5747\u8861\u8bbe\u5907\u4e0eclient\u4e09\u6b21\u63e1\u624b\u4e4b\u540e\u5c31\u4f1a\u548cRS\u5efa\u7acb\u8fde\u63a5\uff1b \u4e03\u5c42SLB\uff1a\u914d\u7f6e\u8d1f\u8f7d\u5747\u8861\u8bbe\u5907\u670d\u52a1\u7c7b\u578b\u4e3ahttp/ftp/https\u7b49\uff0c\u8d1f\u8f7d\u5747\u8861\u8bbe\u5907\u5c06\u89e3\u6790\u62a5\u6587\u52307\u5c42\uff0c \u5728\u8d1f\u8f7d\u5747\u8861\u8bbe\u5907\u4e0eclient\u4e09\u6b21\u63e1\u624b\u4e4b\u540e\uff0c\u53ea\u6709\u6536\u5230\u5bf9\u5e94\u4e03\u5c42\u62a5\u6587\uff0c\u624d\u4f1a\u8ddfRS\u5efa\u7acb\u8fde\u63a5\u3002 \u5728\u8d1f\u8f7d\u5747\u8861\u8bbe\u5907\u4e2d\uff0cSLB\u4e3b\u8981\u5de5\u4f5c\u5728\u4ee5\u4e0b\u7684\u4e09\u79cd\u4f20\u8f93\u6a21\u5f0f\u4e2d\uff1a \u53cd\u5411\u4ee3\u7406\uff1a \u76f8\u540c\u7684 IP+Port \u5bf9\u5e94\u540c\u4e00\u6279 backend \u8d1f\u8f7d\u5747\u8861 \uff1a \u76f8\u540c\u7684 IP + Port \u53ef\u4ee5\u5bf9\u5e94\u4e0d\u540c\u7684 backend \u4f8b\u5982: haproxy \u901a\u8fc7\u5b9a\u4e49 ACL , \u8bbe\u7f6e\u4e0d\u540c\u7684\u7684\u8f6c\u53d1\u7b56\u7565 \u5bf9\u670d\u52a1\u5668\u505a\u52a8\u9759\u5206\u79bb HAProxy\u4f5c\u4e3aL4\u8d1f\u8f7d\u5747\u8861\u5668\u5de5\u4f5c\u65f6\uff0c\u4e0d\u4f1a\u53bb\u89e3\u6790\u4efb\u4f55\u4e0eHTTP\u534f\u8bae\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u53ea\u5728\u4f20\u8f93\u5c42\u5bf9\u6570\u636e\u5305\u8fdb\u884c\u5904\u7406\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ee5L4\u6a21\u5f0f\u8fd0\u884c\u7684HAProxy\uff0c\u65e0\u6cd5\u5b9e\u73b0\u6839\u636eURL\u5411\u4e0d\u540c\u540e\u7aef\u8f6c\u53d1\u3001\u901a\u8fc7cookie\u5b9e\u73b0\u4f1a\u8bdd\u4fdd\u6301\u7b49\u529f\u80fd\u3002\u540c\u65f6\uff0c\u5728L4\u6a21\u5f0f\u4e0b\u5de5\u4f5c\u7684HAProxy\u4e5f\u65e0\u6cd5\u63d0\u4f9b\u76d1\u63a7\u9875\u9762\u3002\u4f46\u4f5c\u4e3aL4\u8d1f\u8f7d\u5747\u8861\u5668\u7684HAProxy\u80fd\u591f\u63d0\u4f9b\u66f4\u9ad8\u7684\u6027\u80fd\uff0c\u9002\u5408\u4e8e\u57fa\u4e8e\u5957\u63a5\u5b57\u7684\u670d\u52a1\uff08\u5982\u6570\u636e\u5e93\u3001\u6d88\u606f\u961f\u5217\u3001RPC\u3001\u90ae\u4ef6\u670d\u52a1\u3001Redis\u7b49\uff09\uff0c\u6216\u4e0d\u9700\u8981\u903b\u8f91\u89c4\u5219\u5224\u65ad\uff0c\u5e76\u5df2\u5b9e\u73b0\u4e86\u4f1a\u8bdd\u5171\u4eab\u7684HTTP\u670d\u52a1\u3002 mode: mode detail tcp \u7eafTCP\u6a21\u5f0f\uff0c4\u5c42\u8d1f\u8f7d\u5747\u8861 http http\u6a21\u5f0f\uff0c\u5b9e\u73b07\u5c42\u8fc7\u6ee4\uff0c\u5904\u7406\u5185\u5bb9\u4ea4\u6362 balance \u7b97\u6cd5 roundrobin: \u8f6e\u8be2 static-rr: \u8f6e\u8be2\uff0c\u5728\u7ebf\u4fee\u6539\u6743\u91cd\u65f6\u4e0d\u751f\u6548 leastconn: \u6700\u5c0f\u8fde\u63a5\u6570 first: \u5148\u8ba9\u4e00\u53f0\u8fbe\u5230maxconn\uff0c\u7136\u540e\u518d\u4f7f\u7528\u53e6\u5916\u4e00\u53f0\u6ca1\u8fbe\u5230\u7684 source: \u57fa\u4e8e\u5ba2\u6237\u7aef\u6765\u6e90\u7684\u54c8\u5e0c uri: \u6839\u636euri\u7684\u90e8\u5206\u6216\u8005\u5b8c\u6210uri\u8fdb\u884c\u54c8\u5e0c \u4f1a\u8bdd\u4fdd\u6301\u673a\u5236 \u4fdd\u8bc1\u540c\u4e00\u4e2a\u5ba2\u6237\u7aef\u7684\u8fde\u7eed\u7684\u8bf7\u6c42\u88ab\u8c03\u5ea6\u5230\u540c\u4e00\u4e2a\u540e\u7aef\u670d\u52a1\u5668\uff0c\u6709\u4e24\u79cd\u57fa\u672c\u65b9\u6cd5 balance source # \u57fa\u4e8e\u6e90\u5730\u5740\u7684\u8c03\u5ea6 appsession insert indirect preserve, appsession\u662f\u6307HAProxy\u63d2\u5165\u5230\u54cd\u5e94\u5185\u5bb9\u4e2d\u7684cookie\u540d\u79f0,insert\u662f\u6307\u5982\u679c\u5ba2\u6237\u7aef\u8bf7\u6c42\u4e2d\u6ca1\u6709\u8be5\u5b57\u6bb5\u5219\u63d2\u5165appsession, indirect\u662f\u6307\u5411\u540e\u7aef\u670d\u52a1\u5668\u53d1\u9001\u5ba2\u6237\u7aef\u8bf7\u6c42\u65f6\u5220\u9664appsession, preserve\u4e0einsert\u6216indirect\u5408\u7528\u65f6\uff0c\u4f7f\u5f97\u540e\u7aef\u53d1\u9001\u8be5\u540d\u5b57\uff08appsession\uff09\u7684 cookie\u65f6\u4e0d\u88abHAProxy\u5220\u9664\u6216\u8005\u66ff\u6362\u6389 TCP \u6a21\u5f0f\u4e0b HAProxy \u65e0\u6cd5\u901a\u8fc7HTTP Cookie\u5b9e\u73b0\u4f1a\u8bdd\u4fdd\u6301\uff0c\u4f46\u53ef\u4ee5\u5b9e\u73b0\u57fa\u4e8e\u5ba2\u6237\u7aefIP\u7684\u4f1a\u8bdd\u4fdd\u6301\uff0c balance source Layer 4 LoadBalance flowchart LR subgraph web-backend web-1 & web-2 end client == \\nhttp://yourdomain.com/... ==> LB ==> web-backend ==> DB Layer 7 LoadBalance flowchart LR subgraph web-backend web-1 & web-2 end subgraph blog-backend blog-1 & blog-2 end client ==> |\\nhttp://yourdomain.com/...| LB -->|/web| web-backend --> DB LB -->|/blog| blog-backend --> DB \u603b\u7684\u6765\u8bf4\uff0c\u4e00\u822c\u662flvs\u505a4\u5c42\u8d1f\u8f7d\uff1bnginx\u505a7\u5c42\u8d1f\u8f7d(\u4e5f\u80fd\u505a4\u5c42\u8d1f\u8f7d, \u901a\u8fc7stream\u6a21\u5757)\uff1b haproxy\u6bd4\u8f83\u7075\u6d3b\uff0c4\u5c42\u548c7\u5c42\u8d1f\u8f7d\u5747\u8861\u90fd\u80fd\u505a","title":"\u7f51\u7edc\u76f8\u5173"},{"location":"Openstack/%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3/#_1","text":"sequenceDiagram participant Client participant Server autonumber Note left of Client: SYN_SEND Client ->> +Server: SYN=1 seq=J Note right of Server: SYN_RCVD Server -->> Client: SYN=1,ACK=1,ack=J+1,seq=K Note left of Client: ESTABLISHED Client ->> Server: ACK=1, ack=K+1 Note right of Server: ESTABLISHED","title":"\u4e09\u6b21\u63e1\u624b"},{"location":"Openstack/%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3/#_2","text":"","title":"\u7f51\u7edc\u8bbe\u5907"},{"location":"Openstack/%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3/#_3","text":"\u7f51\u5173\u4e0e\u8def\u7531\u5668\u4e24\u8005\u5b83\u4eec\u7684\u4f5c\u7528\u90fd\u662f\u7528\u5728\u7f51\u7edc\u5f53\u4e2d\uff0c\u4e3b\u8981\u662f\u7528\u6765\u8fde\u63a5\u4e0d\u540c\u5b50\u7f51\u7684\u4e3b\u673a\uff0c\u8fd9\u4e24\u79cd\u90fd\u662f\u5c5e\u4e8e\u786c\u4ef6\u8bbe\u65bd\uff0c\u5b83\u4eec\u90fd\u53ef\u4ee5\u5bf9\u5230\u8fbe\u8be5\u4e3b\u673a\u7684\u6570\u636e\u5305\u8fdb\u884c\u8f6c\u53d1\u3002 \u7f51\u5173\uff08Gateway\uff09\u5c31\u662f\u4e00\u4e2a\u7f51\u7edc\u8fde\u63a5\u5230\u53e6\u4e00\u4e2a\u7f51\u7edc\u7684\u201c\u5173\u53e3 \u7f51\u5173\u5b9e\u8d28\u4e0a\u662f\u4e00\u4e2a\u7f51\u7edc\u901a\u5411\u5176\u4ed6\u7f51\u7edc\u7684IP\u5730\u5740\u3002\u6bd4\u5982\u6709\u7f51\u7edcA\u548c\u7f51\u7edcB\uff0c\u7f51\u7edcA\u7684IP\u5730\u5740\u8303\u56f4\u4e3a\u201c192.168.1.1~192. 168.1.254\u201d\uff0c\u5b50\u7f51\u63a9\u7801\u4e3a255.255.255.0\uff1b\u7f51\u7edcB\u7684IP\u5730\u5740\u8303\u56f4\u4e3a\u201c192.168.2.1~192.168.2.254\u201d\uff0c\u5b50\u7f51\u63a9\u7801\u4e3a255.255.255.0\u3002 \u200b \u5728\u6ca1\u6709\u8def\u7531\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u4e24\u4e2a\u7f51\u7edc\u4e4b\u95f4\u662f\u4e0d\u80fd\u8fdb\u884cTCP/IP\u901a\u4fe1\u7684\uff0c\u5373\u4f7f\u662f\u4e24\u4e2a\u7f51\u7edc\u8fde\u63a5\u5728\u540c\u4e00\u53f0\u4ea4\u6362\u673a\uff08\u6216\u96c6\u7ebf\u5668\uff09\u4e0a\uff0cTCP/IP\u534f\u8bae\u4e5f\u4f1a\u6839\u636e\u5b50\u7f51\u63a9\u7801\uff08255.255.255.0\uff09\u5224\u5b9a\u4e24\u4e2a\u7f51\u7edc\u4e2d\u7684\u4e3b\u673a\u5904\u5728\u4e0d\u540c\u7684\u7f51\u7edc\u91cc\u3002\u800c\u8981\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u7f51\u7edc\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u5219\u5fc5\u987b\u901a\u8fc7\u7f51\u5173\u3002 \u200b \u5982\u679c\u7f51\u7edcA\u4e2d\u7684\u4e3b\u673a\u53d1\u73b0\u6570\u636e\u5305\u7684\u76ee\u7684\u4e3b\u673a\u4e0d\u5728\u672c\u5730\u7f51\u7edc\u4e2d\uff0c\u5c31\u628a\u6570\u636e\u5305\u8f6c\u53d1\u7ed9\u5b83\u81ea\u5df1\u7684\u7f51\u5173\uff0c\u518d\u7531\u7f51\u5173\u8f6c\u53d1\u7ed9\u7f51\u7edcB\u7684\u7f51\u5173\uff0c\u7f51\u7edcB\u7684\u7f51\u5173\u518d\u8f6c\u53d1\u7ed9\u7f51\u7edcB\u7684\u67d0\u4e2a\u4e3b\u673a\u3002\u7f51\u7edcB\u5411\u7f51\u7edcA\u8f6c\u53d1\u6570\u636e\u5305\u7684\u8fc7\u7a0b\u4e5f\u662f\u5982\u6b64\u3002 \u6240\u4ee5\u8bf4\uff0c\u53ea\u6709\u8bbe\u7f6e\u597d\u7f51\u5173\u7684IP\u5730\u5740\uff0cTCP/IP\u534f\u8bae\u624d\u80fd\u5b9e\u73b0\u4e0d\u540c\u7f51\u7edc\u4e4b\u95f4\u7684\u76f8\u4e92\u901a\u4fe1\u3002\u90a3\u4e48\u8fd9\u4e2aIP\u5730\u5740\u662f\u54ea\u53f0\u673a\u5668\u7684IP\u5730\u5740\u5462\uff1f\u7f51\u5173\u7684IP\u5730\u5740\u662f\u5177\u6709\u8def\u7531\u529f\u80fd\u7684\u8bbe\u5907\u7684IP\u5730\u5740\uff0c\u5177\u6709\u8def\u7531\u529f\u80fd\u7684\u8bbe\u5907\u6709\u8def\u7531\u5668\u3001\u542f\u7528\u4e86\u8def\u7531\u534f\u8bae\u7684\u670d\u52a1\u5668\uff08\u5b9e\u8d28\u4e0a\u76f8\u5f53\u4e8e\u4e00\u53f0\u8def\u7531\u5668\uff09\u3001\u4ee3\u7406\u670d\u52a1\u5668\uff08\u4e5f\u76f8\u5f53\u4e8e\u4e00\u53f0\u8def\u7531\u5668\uff09 \u8def\u7531\u5668\uff08Router\uff09\u662f\u4e00\u79cd\u8d1f\u8d23\u5bfb\u5f84\u7684\u7f51\u7edc\u8bbe\u5907\uff0c\u5b83\u5728\u4e92\u8fde\u7f51\u7edc\u4e2d\u4ece\u591a\u6761\u8def\u5f84\u4e2d\u5bfb\u627e\u901a\u8baf\u91cf\u6700\u5c11\u7684\u4e00\u6761\u7f51\u7edc\u8def\u5f84\u63d0\u4f9b\u7ed9\u7528\u6237\u901a\u4fe1\u3002\u8def\u7531\u5668\u7528\u4e8e\u8fde\u63a5\u591a\u4e2a\u903b\u8f91\u4e0a\u5206\u5f00\u7684\u7f51\u7edc\u3002\u5bf9\u7528\u6237\u63d0\u4f9b\u6700\u4f73\u7684\u901a\u4fe1\u8def\u5f84\uff0c\u8def\u7531\u5668\u5229\u7528\u8def\u7531\u8868\u4e3a\u6570\u636e\u4f20\u8f93\u9009\u62e9\u8def\u5f84\uff0c\u8def\u7531\u8868\u5305\u542b\u7f51\u7edc\u5730\u5740\u4ee5\u53ca\u5404\u5730\u5740\u4e4b\u95f4\u8ddd\u79bb\u7684\u6e05\u5355\uff0c\u8def\u7531\u5668\u5229\u7528\u8def\u7531\u8868\u67e5\u627e\u6570\u636e\u5305\u4ece\u5f53\u524d\u4f4d\u7f6e\u5230\u76ee\u7684\u5730\u5740\u7684\u6b63\u786e\u8def\u5f84\u3002\u8def\u7531\u5668\u4f7f\u7528\u6700\u5c11\u65f6\u95f4\u7b97\u6cd5\u6216\u6700\u4f18\u8def\u5f84\u7b97\u6cd5\u6765\u8c03\u6574\u4fe1\u606f\u4f20\u9012\u7684\u8def\u5f84\uff0c\u5982\u679c\u67d0\u4e00\u7f51\u7edc\u8def\u5f84\u53d1\u751f\u6545\u969c\u6216\u5835\u585e\uff0c\u8def\u7531\u5668\u53ef\u9009\u62e9\u53e6\u4e00\u6761\u8def\u5f84\uff0c\u4ee5\u4fdd\u8bc1\u4fe1\u606f\u7684\u6b63\u5e38\u4f20\u8f93\u3002\u8def\u7531\u5668\u53ef\u8fdb\u884c\u6570\u636e\u683c\u5f0f\u7684\u8f6c\u6362\uff0c\u6210\u4e3a\u4e0d\u540c\u534f\u8bae\u4e4b\u95f4\u7f51\u7edc\u4e92\u8fde\u7684\u5fc5\u8981\u8bbe\u5907\u3002","title":"\u7f51\u5173\u548c\u8def\u7531\u5668"},{"location":"Openstack/%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3/#_4","text":"\u8d1f\u8f7d\u5747\u8861\u6709\u4e24\u65b9\u9762\u7684\u542b\u4e49\uff1a \u9996\u5148\uff0c\u5927\u91cf\u7684\u5e76\u53d1\u8bbf\u95ee\u6216\u6570\u636e\u6d41\u91cf\u5206\u62c5\u5230\u591a\u53f0\u8282\u70b9\u8bbe\u5907\u4e0a\u5206\u522b\u5904\u7406\uff0c\u51cf\u5c11\u7528\u6237\u7b49\u5f85\u54cd\u5e94\u7684\u65f6\u95f4\uff1b \u5176\u6b21\uff0c\u5355\u4e2a\u91cd\u8d1f\u8f7d\u7684\u8fd0\u7b97\u5206\u62c5\u5230\u591a\u53f0\u8282\u70b9\u8bbe\u5907\u4e0a\u505a\u5e76\u884c\u5904\u7406\uff0c\u6bcf\u4e2a\u8282\u70b9\u8bbe\u5907\u5904\u7406\u7ed3\u675f\u540e\uff0c\u5c06\u7ed3\u679c\u6c47\u603b\uff0c\u8fd4\u56de\u7ed9\u7528\u6237\uff0c\u7cfb\u7edf\u5904\u7406\u80fd\u529b\u5f97\u5230\u5927\u5e45\u5ea6\u63d0\u9ad8\u3002 \u76ee\u524d\u8d1f\u8f7d\u5747\u8861\u6280\u672f\u5927\u591a\u6570\u662f\u7528\u4e8e\u63d0\u9ad8\u8bf8\u5982\u5728Web\u670d\u52a1\u5668\u3001FTP\u670d\u52a1\u5668\u548c\u5176\u5b83\u5173\u952e\u4efb\u52a1\u670d\u52a1\u5668\u4e0a\u7684Internet\u670d\u52a1\u5668\u7a0b\u5e8f\u7684\u53ef\u7528\u6027\u548c\u53ef\u4f38\u7f29\u6027\u3002 \u5206\u7c7b \u7c7b\u522b \u8bf4\u660e \u4e8c\u5c42\u8d1f\u8f7d\u5747\u8861\uff08mac\uff09 \u6839\u636eOSI\u6a21\u578b\u5206\u7684\u4e8c\u5c42\u8d1f\u8f7d\uff0c\u4e00\u822c\u662f\u7528\u865a\u62dfmac\u5730\u5740\u65b9\u5f0f\uff0c\u5916\u90e8\u5bf9\u865a\u62dfMAC\u5730\u5740\u8bf7\u6c42\uff0c\u8d1f\u8f7d\u5747\u8861\u63a5\u6536\u540e\u5206\u914d\u540e\u7aef\u5b9e\u9645\u7684MAC\u5730\u5740\u54cd\u5e94.** \u4e09\u5c42\u8d1f\u8f7d\u5747\u8861\uff08ip\uff09 \u4e00\u822c\u91c7\u7528\u865a\u62dfIP\u5730\u5740\u65b9\u5f0f\uff0c\u5916\u90e8\u5bf9\u865a\u62df\u7684ip\u5730\u5740\u8bf7\u6c42\uff0c\u8d1f\u8f7d\u5747\u8861\u63a5\u6536\u540e\u5206\u914d\u540e\u7aef\u5b9e\u9645\u7684IP\u5730\u5740\u54cd\u5e94. (\u5373\u4e00\u4e2aip\u5bf9\u4e00\u4e2aip\u7684\u8f6c\u53d1, \u7aef\u53e3\u5168\u653e\u5f00) \u56db\u5c42\u8d1f\u8f7d\u5747\u8861\uff08tcp\uff09 \u5728\u4e09\u6b21\u8d1f\u8f7d\u5747\u8861\u7684\u57fa\u7840\u4e0a\uff0c\u5373\u4ece\u7b2c\u56db\u5c42\"\u4f20\u8f93\u5c42\"\u5f00\u59cb, \u4f7f\u7528\"\u865a\u62dfip+port\"\u63a5\u6536\u8bf7\u6c42\uff0c\u518d\u8f6c\u53d1\u5230\u5bf9\u5e94\u7684\u673a\u5668\u3002 \u4e03\u5c42\u8d1f\u8f7d\u5747\u8861\uff08http\uff09 \u4ece\u7b2c\u4e03\u5c42\"\u5e94\u7528\u5c42\"\u5f00\u59cb, \u6839\u636e\u865a\u62df\u7684url\u6216IP\uff0c\u4e3b\u673a\u540d\u63a5\u6536\u8bf7\u6c42\uff0c\u518d\u8f6c\u5411\u76f8\u5e94\u7684\u5904\u7406\u670d\u52a1\u5668\u3002 \u56db\u5c42\u3001\u4e03\u5c42\u8d1f\u8f7d\u5747\u8861\u7684\u533a\u522b \u6240\u8c13\u7684\u56db\u5230\u4e03\u5c42\u8d1f\u8f7d\u5747\u8861\uff0c\u5c31\u662f\u5728\u5bf9\u540e\u53f0\u7684\u670d\u52a1\u5668\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\u65f6\uff0c\u4f9d\u636e\u56db\u5c42\u7684\u4fe1\u606f\u6216\u4e03\u5c42\u7684\u4fe1\u606f\u6765\u51b3\u5b9a\u600e\u4e48\u6837\u8f6c\u53d1\u6d41\u91cf\u3002 \u56db\u5c42\u5c31\u662f\u57fa\u4e8eIP+\u7aef\u53e3\u7684\u8d1f\u8f7d\u5747\u8861\uff1b \u4e03\u5c42\u5c31\u662f\u57fa\u4e8eURL\u7b49\u5e94\u7528\u5c42\u4fe1\u606f\u7684\u8d1f\u8f7d\u5747\u8861\uff1b \u540c\u7406\uff0c\u8fd8\u6709\u4e8c\u5c42\u8d1f\u8f7d\u5747\u8861\uff08\u57fa\u4e8eMAC\u5730\u5740\uff09\uff0c\u4e09\u5c42\u8d1f\u8f7d\u5747\u8861\uff08\u57fa\u4e8eIP\u5730\u5740\uff09\uff1b \u5728\u53cd\u5411\u4ee3\u7406\u6a21\u5f0f\u4e0b\uff0c \u5f53\u8d1f\u8f7d\u5747\u8861\u8bbe\u5907\u6536\u5230\u5ba2\u6237\u7aef\u8bf7\u6c42\u540e\uff0c\u4f1a\u8bb0\u5f55\u4e0b\u6b64\u62a5\u6587\uff08 \u6e90IP\u5730\u5740\u3001\u76ee\u7684IP\u5730\u5740\u3001\u534f\u8bae\u53f7\u3001\u6e90\u7aef\u53e3\u3001\u76ee\u7684\u7aef\u53e3\uff0c\u670d\u52a1\u7c7b\u578b\u4ee5\u53ca\u63a5\u53e3\u7d22\u5f15\uff09\uff0c \u5c06\u62a5\u6587\uff08 \u76ee\u7684\u5730\u5740\u66f4\u6539\u4e3a\u4f18\u9009\u540e\u7684RS\u8bbe\u5907\u7684IP\u5730\u5740 \uff0c\u76ee\u7684\u7aef\u53e3\u53f7\u4e0d\u53d8\uff1b \u200b \u6e90\u5730\u5740\u4fee\u6539\u4e3a\u8d1f\u8f7d\u5747\u8861\u8bbe\u5907\u4e0b\u884c\u4e0e\u5bf9\u5e94RS\u8bbe\u5907\u63a5\u53e3\u7684IP\u5730\u5740\uff0c\u6e90\u7aef\u53e3\u53f7\u968f\u673a\uff09\u53d1\u9001\u7ed9RS\uff1b \u5f53RS\u6536\u5230\u62a5\u6587\u540e\uff0c\u4f1a\u4ee5\uff08RS\u63a5\u53e3IP\u5730\u5740\u4e3a\u6e90\uff0c\u8d1f\u8f7d\u5747\u8861\u8bbe\u5907\u5730\u5740\u4e3a\u76ee\u7684\uff09\u56de\u590d\u62a5\u6587\uff1b \u8d1f\u8f7d\u5747\u8861\u8bbe\u5907\u5c06\u6e90\u4fee\u6539\u4e3aVIP\uff0c\u76ee\u7684\u7aef\u53e3\u53f7\u4fee\u6539\u4e3a\u5ba2\u6237\u7aef\u7684\u6e90\u7aef\u53e3\u53f7\uff0c\u76ee\u7684IP\u4fee\u6539\u4e3aClient\u7684\u6e90IP\u56de\u590d\u62a5\u6587\u3002 flowchart LR A[ClientA:port1]:::client ===> SLB:::lb --> ServerA:portA & ServerB:portB & ... classDef client fill: white; classDef lb fill:#f96; \u4e03\u5c42SLB\u548c\u56db\u5c42SLB\u7684\u533a\u522b\uff1a \u56db\u5c42SLB\uff1a\u914d\u7f6e\u8d1f\u8f7d\u5747\u8861\u8bbe\u5907\u4e0a\u670d\u52a1\u7c7b\u578b\u4e3atcp/udp\uff0c\u8d1f\u8f7d\u5747\u8861\u8bbe\u5907\u5c06\u53ea\u89e3\u6790\u52304\u5c42\uff0c\u8d1f\u8f7d\u5747\u8861\u8bbe\u5907\u4e0eclient\u4e09\u6b21\u63e1\u624b\u4e4b\u540e\u5c31\u4f1a\u548cRS\u5efa\u7acb\u8fde\u63a5\uff1b \u4e03\u5c42SLB\uff1a\u914d\u7f6e\u8d1f\u8f7d\u5747\u8861\u8bbe\u5907\u670d\u52a1\u7c7b\u578b\u4e3ahttp/ftp/https\u7b49\uff0c\u8d1f\u8f7d\u5747\u8861\u8bbe\u5907\u5c06\u89e3\u6790\u62a5\u6587\u52307\u5c42\uff0c \u5728\u8d1f\u8f7d\u5747\u8861\u8bbe\u5907\u4e0eclient\u4e09\u6b21\u63e1\u624b\u4e4b\u540e\uff0c\u53ea\u6709\u6536\u5230\u5bf9\u5e94\u4e03\u5c42\u62a5\u6587\uff0c\u624d\u4f1a\u8ddfRS\u5efa\u7acb\u8fde\u63a5\u3002 \u5728\u8d1f\u8f7d\u5747\u8861\u8bbe\u5907\u4e2d\uff0cSLB\u4e3b\u8981\u5de5\u4f5c\u5728\u4ee5\u4e0b\u7684\u4e09\u79cd\u4f20\u8f93\u6a21\u5f0f\u4e2d\uff1a \u53cd\u5411\u4ee3\u7406\uff1a \u76f8\u540c\u7684 IP+Port \u5bf9\u5e94\u540c\u4e00\u6279 backend \u8d1f\u8f7d\u5747\u8861 \uff1a \u76f8\u540c\u7684 IP + Port \u53ef\u4ee5\u5bf9\u5e94\u4e0d\u540c\u7684 backend \u4f8b\u5982: haproxy \u901a\u8fc7\u5b9a\u4e49 ACL , \u8bbe\u7f6e\u4e0d\u540c\u7684\u7684\u8f6c\u53d1\u7b56\u7565 \u5bf9\u670d\u52a1\u5668\u505a\u52a8\u9759\u5206\u79bb HAProxy\u4f5c\u4e3aL4\u8d1f\u8f7d\u5747\u8861\u5668\u5de5\u4f5c\u65f6\uff0c\u4e0d\u4f1a\u53bb\u89e3\u6790\u4efb\u4f55\u4e0eHTTP\u534f\u8bae\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u53ea\u5728\u4f20\u8f93\u5c42\u5bf9\u6570\u636e\u5305\u8fdb\u884c\u5904\u7406\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ee5L4\u6a21\u5f0f\u8fd0\u884c\u7684HAProxy\uff0c\u65e0\u6cd5\u5b9e\u73b0\u6839\u636eURL\u5411\u4e0d\u540c\u540e\u7aef\u8f6c\u53d1\u3001\u901a\u8fc7cookie\u5b9e\u73b0\u4f1a\u8bdd\u4fdd\u6301\u7b49\u529f\u80fd\u3002\u540c\u65f6\uff0c\u5728L4\u6a21\u5f0f\u4e0b\u5de5\u4f5c\u7684HAProxy\u4e5f\u65e0\u6cd5\u63d0\u4f9b\u76d1\u63a7\u9875\u9762\u3002\u4f46\u4f5c\u4e3aL4\u8d1f\u8f7d\u5747\u8861\u5668\u7684HAProxy\u80fd\u591f\u63d0\u4f9b\u66f4\u9ad8\u7684\u6027\u80fd\uff0c\u9002\u5408\u4e8e\u57fa\u4e8e\u5957\u63a5\u5b57\u7684\u670d\u52a1\uff08\u5982\u6570\u636e\u5e93\u3001\u6d88\u606f\u961f\u5217\u3001RPC\u3001\u90ae\u4ef6\u670d\u52a1\u3001Redis\u7b49\uff09\uff0c\u6216\u4e0d\u9700\u8981\u903b\u8f91\u89c4\u5219\u5224\u65ad\uff0c\u5e76\u5df2\u5b9e\u73b0\u4e86\u4f1a\u8bdd\u5171\u4eab\u7684HTTP\u670d\u52a1\u3002 mode: mode detail tcp \u7eafTCP\u6a21\u5f0f\uff0c4\u5c42\u8d1f\u8f7d\u5747\u8861 http http\u6a21\u5f0f\uff0c\u5b9e\u73b07\u5c42\u8fc7\u6ee4\uff0c\u5904\u7406\u5185\u5bb9\u4ea4\u6362 balance \u7b97\u6cd5 roundrobin: \u8f6e\u8be2 static-rr: \u8f6e\u8be2\uff0c\u5728\u7ebf\u4fee\u6539\u6743\u91cd\u65f6\u4e0d\u751f\u6548 leastconn: \u6700\u5c0f\u8fde\u63a5\u6570 first: \u5148\u8ba9\u4e00\u53f0\u8fbe\u5230maxconn\uff0c\u7136\u540e\u518d\u4f7f\u7528\u53e6\u5916\u4e00\u53f0\u6ca1\u8fbe\u5230\u7684 source: \u57fa\u4e8e\u5ba2\u6237\u7aef\u6765\u6e90\u7684\u54c8\u5e0c uri: \u6839\u636euri\u7684\u90e8\u5206\u6216\u8005\u5b8c\u6210uri\u8fdb\u884c\u54c8\u5e0c \u4f1a\u8bdd\u4fdd\u6301\u673a\u5236 \u4fdd\u8bc1\u540c\u4e00\u4e2a\u5ba2\u6237\u7aef\u7684\u8fde\u7eed\u7684\u8bf7\u6c42\u88ab\u8c03\u5ea6\u5230\u540c\u4e00\u4e2a\u540e\u7aef\u670d\u52a1\u5668\uff0c\u6709\u4e24\u79cd\u57fa\u672c\u65b9\u6cd5 balance source # \u57fa\u4e8e\u6e90\u5730\u5740\u7684\u8c03\u5ea6 appsession insert indirect preserve, appsession\u662f\u6307HAProxy\u63d2\u5165\u5230\u54cd\u5e94\u5185\u5bb9\u4e2d\u7684cookie\u540d\u79f0,insert\u662f\u6307\u5982\u679c\u5ba2\u6237\u7aef\u8bf7\u6c42\u4e2d\u6ca1\u6709\u8be5\u5b57\u6bb5\u5219\u63d2\u5165appsession, indirect\u662f\u6307\u5411\u540e\u7aef\u670d\u52a1\u5668\u53d1\u9001\u5ba2\u6237\u7aef\u8bf7\u6c42\u65f6\u5220\u9664appsession, preserve\u4e0einsert\u6216indirect\u5408\u7528\u65f6\uff0c\u4f7f\u5f97\u540e\u7aef\u53d1\u9001\u8be5\u540d\u5b57\uff08appsession\uff09\u7684 cookie\u65f6\u4e0d\u88abHAProxy\u5220\u9664\u6216\u8005\u66ff\u6362\u6389 TCP \u6a21\u5f0f\u4e0b HAProxy \u65e0\u6cd5\u901a\u8fc7HTTP Cookie\u5b9e\u73b0\u4f1a\u8bdd\u4fdd\u6301\uff0c\u4f46\u53ef\u4ee5\u5b9e\u73b0\u57fa\u4e8e\u5ba2\u6237\u7aefIP\u7684\u4f1a\u8bdd\u4fdd\u6301\uff0c balance source Layer 4 LoadBalance flowchart LR subgraph web-backend web-1 & web-2 end client == \\nhttp://yourdomain.com/... ==> LB ==> web-backend ==> DB Layer 7 LoadBalance flowchart LR subgraph web-backend web-1 & web-2 end subgraph blog-backend blog-1 & blog-2 end client ==> |\\nhttp://yourdomain.com/...| LB -->|/web| web-backend --> DB LB -->|/blog| blog-backend --> DB \u603b\u7684\u6765\u8bf4\uff0c\u4e00\u822c\u662flvs\u505a4\u5c42\u8d1f\u8f7d\uff1bnginx\u505a7\u5c42\u8d1f\u8f7d(\u4e5f\u80fd\u505a4\u5c42\u8d1f\u8f7d, \u901a\u8fc7stream\u6a21\u5757)\uff1b haproxy\u6bd4\u8f83\u7075\u6d3b\uff0c4\u5c42\u548c7\u5c42\u8d1f\u8f7d\u5747\u8861\u90fd\u80fd\u505a","title":"\u8d1f\u8f7d\u5747\u8861"},{"location":"Openstack/%E8%99%9A%E6%8B%9F%E5%8C%96/","text":"\u865a\u62df\u5316\u4e3b\u8981\u662f\u901a\u8fc7\u4e00\u4e2a\u53eb\u505a Hypervisor \u7684\u7a0b\u5e8f\u5b9e\u73b0\u7684\u3002Hypervisor \u76f4\u63a5\u5b89\u88c5\u5728\u7269\u7406\u673a\u4e0a\uff0c\u591a\u4e2a\u865a\u62df\u673a\u5728 Hypervisor \u4e0a\u8fd0\u884c\u3002Hypervisor \u5b9e\u73b0\u65b9\u5f0f\u4e00\u822c\u662f\u4e00\u4e2a\u7279\u6b8a\u5b9a\u5236\u7684 Linux \u7cfb\u7edf\u3002\u6839\u636e Hypervisor \u7684\u5b9e\u73b0\u65b9\u5f0f\u548c\u6240\u5904\u7684\u4f4d\u7f6e\uff0c\u865a\u62df\u5316\u53c8\u5206\u4e3a\u4e24\u79cd\uff1a1\u578b\u865a\u62df\u5316\u548c2\u578b\u865a\u62df\u5316\u3002 1\u578b\u865a\u62df\u5316 2\u578b\u865a\u62df\u5316 \u7269\u7406\u673a\u4e0a\u9996\u5148\u5b89\u88c5\u5e38\u89c4\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u6bd4\u5982 Redhat Windows\u3002Hypervisor \u4f5c\u4e3a OS \u4e0a\u7684\u4e00\u4e2a\u7a0b\u5e8f\u6a21\u5757\u8fd0\u884c\uff0c\u5e76\u5bf9\u7ba1\u7406\u865a\u62df\u673a\u8fdb\u884c\u7ba1\u7406\u3002KVM\u3001VirtualBox \u548c VMWare Workstation \u90fd\u5c5e\u4e8e\u8fd9\u4e2a\u7c7b\u578b\u3002 \u5728 x86 \u5e73\u53f0\u4e0a\u6700\u70ed\u95e8\u8fd0\u7528\u6700\u5e7f\u6cdb\u7684\u865a\u62df\u5316\u65b9\u6848\u83ab\u8fc7\u4e8e KVM \u4e86\u3002OpenStack \u5bf9 KVM \u652f\u6301\u5f97\u4e5f\u6700\u597d\uff0c KVM \u5168\u79f0\u662f Kernel-Based Virtual Machine\u3002\u4e5f\u5c31\u662f\u8bf4 KVM \u662f\u57fa\u4e8e Linux \u5185\u6838\u5b9e\u73b0\u7684\u3002 KVM\u6709\u4e00\u4e2a\u5185\u6838\u6a21\u5757\u53eb kvm.ko\uff0c\u53ea\u7528\u4e8e\u7ba1\u7406\u865a\u62df CPU \u548c\u5185\u5b58\u3002 IO \u7684\u865a\u62df\u5316\u5219\u4ea4\u7ed9 Linux \u5185\u6838\u548cQemu\u6765\u5b9e\u73b0\u3002 Libvirt \u662fkvm \u7684\u7ba1\u7406\u5de5\u5177\uff0c\u9664\u4e86\u80fd\u7ba1\u7406 KVM \u8fd9\u79cd Hypervisor\uff0c\u8fd8\u80fd\u7ba1\u7406 Xen\uff0cVirtualBox \u7b49\u3002OpenStack \u5e95\u5c42\u4e5f\u4f7f\u7528 Libvirt\u3002 cpu\u865a\u62df\u5316 \u4e00\u4e2a KVM \u865a\u673a\u5728\u5bbf\u4e3b\u673a\u4e2d\u5176\u5b9e\u662f\u4e00\u4e2a qemu-kvm \u8fdb\u7a0b\uff0c\u4e0e\u5176\u4ed6 Linux \u8fdb\u7a0b\u4e00\u6837\u88ab\u8c03\u5ea6\u3002 \u865a\u673a\u4e2d\u7684\u6bcf\u4e00\u4e2a\u865a\u62df vCPU \u5219\u5bf9\u5e94 qemu-kvm \u8fdb\u7a0b\u4e2d\u7684\u4e00\u4e2a\u7ebf\u7a0b\u3002 \u5185\u5b58\u865a\u62df\u5316 KVM \u901a\u8fc7\u5185\u5b58\u865a\u62df\u5316\u5171\u4eab\u7269\u7406\u7cfb\u7edf\u5185\u5b58\uff0c\u52a8\u6001\u5206\u914d\u7ed9\u865a\u62df\u673a\u3002 KVM \u9700\u8981\u5b9e\u73b0 VA\uff08\u865a\u62df\u5185\u5b58\uff09 -> PA\uff08\u7269\u7406\u5185\u5b58\uff09 -> MA\uff08\u673a\u5668\u5185\u5b58\uff09\u4e4b\u95f4\u7684\u5730\u5740\u8f6c\u6362\u3002 \u865a\u673a OS \u63a7\u5236\u865a\u62df\u5730\u5740\u5230\u5ba2\u6237\u5185\u5b58\u7269\u7406\u5730\u5740\u7684\u6620\u5c04 \uff08VA -> PA\uff09\uff0c\u4f46\u662f\u865a\u673a OS \u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u5b9e\u9645\u673a\u5668\u5185\u5b58\uff0c\u56e0\u6b64 KVM \u9700\u8981\u8d1f\u8d23\u6620\u5c04\u5ba2\u6237\u7269\u7406\u5185\u5b58\u5230\u5b9e\u9645\u673a\u5668\u5185\u5b58 \uff08PA -> MA\uff09\u3002 \u5b58\u50a8\u865a\u62df\u5316 KVM \u7684\u5b58\u50a8\u865a\u62df\u5316\u662f\u901a\u8fc7\u5b58\u50a8\u6c60\uff08Storage Pool\uff09\u548c\u5377\uff08Volume\uff09\u6765\u7ba1\u7406\u7684\u3002 Storage Pool \u662f\u5bbf\u4e3b\u673a\u4e0a\u53ef\u4ee5\u770b\u5230\u7684\u4e00\u7247\u5b58\u50a8\u7a7a\u95f4\uff0c\u53ef\u4ee5\u662f\u591a\u79cd\u7c7b\u578b\u3002Volume \u662f\u5728 Storage Pool \u4e2d\u5212\u5206\u51fa\u7684\u4e00\u5757\u7a7a\u95f4\uff0c\u5bbf\u4e3b\u673a\u5c06 Volume \u5206\u914d\u7ed9\u865a\u62df\u673a\uff0cVolume \u5728\u865a\u62df\u673a\u4e2d\u770b\u5230\u7684\u5c31\u662f\u4e00\u5757\u786c\u76d8\u3002 \u6587\u4ef6\u76ee\u5f55\u578b\u7684 Storage Pool KVM \u5c06\u5bbf\u4e3b\u673a\u76ee\u5f55 /var/lib/libvirt/images/ \u4f5c\u4e3a\u9ed8\u8ba4\u7684 Storage Pool\u3002Volume \u662f\u8be5\u76ee\u5f55\u4e0b\u9762\u7684\u6587\u4ef6\u4e86\uff0c\u4e00\u4e2a\u6587\u4ef6\u5c31\u662f\u4e00\u4e2a Volume\u3002","title":"\u865a\u62df\u5316"},{"location":"Openstack/%E8%99%9A%E6%8B%9F%E5%8C%96/#1","text":"","title":"1\u578b\u865a\u62df\u5316"},{"location":"Openstack/%E8%99%9A%E6%8B%9F%E5%8C%96/#2","text":"\u7269\u7406\u673a\u4e0a\u9996\u5148\u5b89\u88c5\u5e38\u89c4\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u6bd4\u5982 Redhat Windows\u3002Hypervisor \u4f5c\u4e3a OS \u4e0a\u7684\u4e00\u4e2a\u7a0b\u5e8f\u6a21\u5757\u8fd0\u884c\uff0c\u5e76\u5bf9\u7ba1\u7406\u865a\u62df\u673a\u8fdb\u884c\u7ba1\u7406\u3002KVM\u3001VirtualBox \u548c VMWare Workstation \u90fd\u5c5e\u4e8e\u8fd9\u4e2a\u7c7b\u578b\u3002 \u5728 x86 \u5e73\u53f0\u4e0a\u6700\u70ed\u95e8\u8fd0\u7528\u6700\u5e7f\u6cdb\u7684\u865a\u62df\u5316\u65b9\u6848\u83ab\u8fc7\u4e8e KVM \u4e86\u3002OpenStack \u5bf9 KVM \u652f\u6301\u5f97\u4e5f\u6700\u597d\uff0c KVM \u5168\u79f0\u662f Kernel-Based Virtual Machine\u3002\u4e5f\u5c31\u662f\u8bf4 KVM \u662f\u57fa\u4e8e Linux \u5185\u6838\u5b9e\u73b0\u7684\u3002 KVM\u6709\u4e00\u4e2a\u5185\u6838\u6a21\u5757\u53eb kvm.ko\uff0c\u53ea\u7528\u4e8e\u7ba1\u7406\u865a\u62df CPU \u548c\u5185\u5b58\u3002 IO \u7684\u865a\u62df\u5316\u5219\u4ea4\u7ed9 Linux \u5185\u6838\u548cQemu\u6765\u5b9e\u73b0\u3002 Libvirt \u662fkvm \u7684\u7ba1\u7406\u5de5\u5177\uff0c\u9664\u4e86\u80fd\u7ba1\u7406 KVM \u8fd9\u79cd Hypervisor\uff0c\u8fd8\u80fd\u7ba1\u7406 Xen\uff0cVirtualBox \u7b49\u3002OpenStack \u5e95\u5c42\u4e5f\u4f7f\u7528 Libvirt\u3002","title":"2\u578b\u865a\u62df\u5316"},{"location":"Openstack/%E8%99%9A%E6%8B%9F%E5%8C%96/#cpu","text":"\u4e00\u4e2a KVM \u865a\u673a\u5728\u5bbf\u4e3b\u673a\u4e2d\u5176\u5b9e\u662f\u4e00\u4e2a qemu-kvm \u8fdb\u7a0b\uff0c\u4e0e\u5176\u4ed6 Linux \u8fdb\u7a0b\u4e00\u6837\u88ab\u8c03\u5ea6\u3002 \u865a\u673a\u4e2d\u7684\u6bcf\u4e00\u4e2a\u865a\u62df vCPU \u5219\u5bf9\u5e94 qemu-kvm \u8fdb\u7a0b\u4e2d\u7684\u4e00\u4e2a\u7ebf\u7a0b\u3002","title":"cpu\u865a\u62df\u5316"},{"location":"Openstack/%E8%99%9A%E6%8B%9F%E5%8C%96/#_1","text":"KVM \u901a\u8fc7\u5185\u5b58\u865a\u62df\u5316\u5171\u4eab\u7269\u7406\u7cfb\u7edf\u5185\u5b58\uff0c\u52a8\u6001\u5206\u914d\u7ed9\u865a\u62df\u673a\u3002 KVM \u9700\u8981\u5b9e\u73b0 VA\uff08\u865a\u62df\u5185\u5b58\uff09 -> PA\uff08\u7269\u7406\u5185\u5b58\uff09 -> MA\uff08\u673a\u5668\u5185\u5b58\uff09\u4e4b\u95f4\u7684\u5730\u5740\u8f6c\u6362\u3002 \u865a\u673a OS \u63a7\u5236\u865a\u62df\u5730\u5740\u5230\u5ba2\u6237\u5185\u5b58\u7269\u7406\u5730\u5740\u7684\u6620\u5c04 \uff08VA -> PA\uff09\uff0c\u4f46\u662f\u865a\u673a OS \u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u5b9e\u9645\u673a\u5668\u5185\u5b58\uff0c\u56e0\u6b64 KVM \u9700\u8981\u8d1f\u8d23\u6620\u5c04\u5ba2\u6237\u7269\u7406\u5185\u5b58\u5230\u5b9e\u9645\u673a\u5668\u5185\u5b58 \uff08PA -> MA\uff09\u3002","title":"\u5185\u5b58\u865a\u62df\u5316"},{"location":"Openstack/%E8%99%9A%E6%8B%9F%E5%8C%96/#_2","text":"KVM \u7684\u5b58\u50a8\u865a\u62df\u5316\u662f\u901a\u8fc7\u5b58\u50a8\u6c60\uff08Storage Pool\uff09\u548c\u5377\uff08Volume\uff09\u6765\u7ba1\u7406\u7684\u3002 Storage Pool \u662f\u5bbf\u4e3b\u673a\u4e0a\u53ef\u4ee5\u770b\u5230\u7684\u4e00\u7247\u5b58\u50a8\u7a7a\u95f4\uff0c\u53ef\u4ee5\u662f\u591a\u79cd\u7c7b\u578b\u3002Volume \u662f\u5728 Storage Pool \u4e2d\u5212\u5206\u51fa\u7684\u4e00\u5757\u7a7a\u95f4\uff0c\u5bbf\u4e3b\u673a\u5c06 Volume \u5206\u914d\u7ed9\u865a\u62df\u673a\uff0cVolume \u5728\u865a\u62df\u673a\u4e2d\u770b\u5230\u7684\u5c31\u662f\u4e00\u5757\u786c\u76d8\u3002 \u6587\u4ef6\u76ee\u5f55\u578b\u7684 Storage Pool KVM \u5c06\u5bbf\u4e3b\u673a\u76ee\u5f55 /var/lib/libvirt/images/ \u4f5c\u4e3a\u9ed8\u8ba4\u7684 Storage Pool\u3002Volume \u662f\u8be5\u76ee\u5f55\u4e0b\u9762\u7684\u6587\u4ef6\u4e86\uff0c\u4e00\u4e2a\u6587\u4ef6\u5c31\u662f\u4e00\u4e2a Volume\u3002","title":"\u5b58\u50a8\u865a\u62df\u5316"},{"location":"python/1.%E5%9F%BA%E7%A1%80/","text":"\u79c1\u6709\u5c5e\u6027 \u79c1\u6709\u5c5e\u6027\u4ee5 __ \u4f5c\u4e3a\u524d\u7f00\uff0c\u5916\u90e8\u65e0\u6cd5\u5f15\u7528, \u5b9e\u9645 __ \u5f00\u5934\u7684\u5c5e\u6027\u5728 \u5185\u90e8\u88ab\u8f6c\u5316\u4e3a _<ClassName>_<attribute> \u7684\u5f62\u5f0f\uff0c\u6240\u6709\u65e0\u6cd5\u5f15\u7528 example: import uuid class Student(object): \"\"\" a = Student('student1') print(a) print(a._Student__id) print('--------------------') a._Student__id == 2 print(a) print(a._Student__id) print('--------------------') a.set_new_id() print(a) \"\"\" def __init__(self, name): self.__id = uuid.uuid4() self.name = name def __str__(self): return '<Demo {0}>'.format(self.__id) def set_new_id(self): self.__id = uuid.uuid4() a = Student('student1') print(a) print(a._Student__id) print('--------------------') a._Student__id == 2 print(a) print(a._Student__id) print('--------------------') a.set_new_id() print(a) output: <Demo d66d2e6d-7b6a-41f0-a067-3d3ef729f114> d66d2e6d-7b6a-41f0-a067-3d3ef729f114 -------------------- <Demo d66d2e6d-7b6a-41f0-a067-3d3ef729f114> d66d2e6d-7b6a-41f0-a067-3d3ef729f114 -------------------- <Demo c6f9a404-fe57-4898-a73c-4900f48c254a> \u9b54\u6cd5\u51fd\u6570 __init__ \u548c __getitem__ class Cards(object): def __init__(self, cards): self.cards = cards def __getitem__(self, item): return self.cards[item] cards = Cards([1, 2, 3]) for card in cards: print(card) __rept__ \u548c __str__ __repr__ \u901a\u8fc7 repr \u51fd\u6570\u8c03\u7528\uff0c\u6216\u8005%r\u3001{!r}\u683c\u5f0f\u5316\u8c03\u7528\uff1b __str__ \u901a\u8fc7 str \u51fd\u6570\u8c03\u7528\uff0c\u6216\u8005%s\u3001{!s}\u683c\u5f0f\u5316\u8c03\u7528\u3002 print(user) \u9690\u5f0f\u8c03\u7528\u5bf9\u8c61\u5b57\u7b26\u4e32\u65b9\u6cd5\u7684\uff0c\u89e3\u6790\u5668\u4f1a\u5148\u627estr\u65b9\u6cd5\uff0c\u82e5\u672a\u5b9e\u73b0\uff0c\u518d\u627erepr\u3002 __repr__ \u9488\u5bf9\u5f00\u53d1\u4eba\u5458\uff1b __str__ \u9488\u5bf9\u666e\u901a\u7528\u6237 class Cards(object): def __init__(self, cards): self.cards = cards def __getitem__(self, item): return self.cards[item] def __repr__(self): return \"<Cards size={0}>\".format(len(self.cards)) def __str__(self): return \",\".join([str(c) for c in self.cards]) cards = Cards([1, 2, 3]) print(cards) print('%s' % cards) print('%r' % cards) print('{0}'.format(cards)) print('{!r}'.format(cards)) \u7ed3\u679c\uff1a 1,2,3 1,2,3 <Cards size=3> 1,2,3 <Cards size=3> [Finished in 0.2s] python2 \u4e2d\u6587\u7f16\u7801\u9519\u8bef python2 \u4f7f\u7528 format \u8fdb\u884c\u683c\u5f0f\u5316\u65f6\uff0c\u7531\u4e8e\u7f16\u7801\u683c\u5f0f\u662f ASCII \u62a5\u9519\uff0cPython3\u7531\u4e8e\u9ed8\u8ba4\u7f16\u7801\u662f utf8\uff0c\u6240\u4ee5\u6ca1\u6709\u6b64\u95ee\u9898\uff09 python3 >>> import json >>> hello_dict = json.loads('{\"chinese\": \"\u4f60\u597d\", \"english\": \"hello\"}') >>> print('{0}'.format(hello_dict['chinese'])) \u4f60\u597d python2 >>> import json >>> hello_dict = json.loads('{\"chinese\": \"\u4f60\u597d\", \"english\": \"hello\"}') >>> print('{0}'.format(hello_dict['english'])) hello >>> print('{0}'.format(hello_dict['chinese'])) Traceback (most recent call last): File \"<stdin>\", line 1, in <module> UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-1: ordinal not in range(128) >>> \u89e3\u51b3\u65b9\u6cd5\uff1a\u8bbe\u7f6e\u9ed8\u8ba4\u7f16\u7801\u683c\u5f0f\u4e3autf-8 import sys reload(sys) sys.setdefaultencoding('utf-8') \u5185\u7f6e\u7c7b\u578b \u7c7b\u578b \u8bf4\u660e None \u6570\u503c int float complex(\u590d\u6570) bool \u8fed\u4ee3\u7c7b\u578b iterator \u5e8f\u5217 bytes bytearray memoryview \u6620\u5c04 dict \u96c6\u5408 set frozenset \u4e0a\u4e0b\u6587 with int \u8fd0\u7b97 + - * / // \u6574\u9664\uff08\u5bf9\u4e8e\u5927\u6570\uff0c\u6574\u6570\u90e8\u5206\u7cbe\u5ea6\u4e0d\u4e22\u5931\uff09 >>> 491555843274052692 / 10 4.915558432740527e+16 >>> 491555843274052692 // 10 49155584327405269 \u904d\u5386 \u6b63\u5411\u904d\u5386\uff1a for I in LIST \u9006\u5411\u904d\u5386 reversed(LIST)","title":"1.\u57fa\u7840"},{"location":"python/1.%E5%9F%BA%E7%A1%80/#_1","text":"\u79c1\u6709\u5c5e\u6027\u4ee5 __ \u4f5c\u4e3a\u524d\u7f00\uff0c\u5916\u90e8\u65e0\u6cd5\u5f15\u7528, \u5b9e\u9645 __ \u5f00\u5934\u7684\u5c5e\u6027\u5728 \u5185\u90e8\u88ab\u8f6c\u5316\u4e3a _<ClassName>_<attribute> \u7684\u5f62\u5f0f\uff0c\u6240\u6709\u65e0\u6cd5\u5f15\u7528 example: import uuid class Student(object): \"\"\" a = Student('student1') print(a) print(a._Student__id) print('--------------------') a._Student__id == 2 print(a) print(a._Student__id) print('--------------------') a.set_new_id() print(a) \"\"\" def __init__(self, name): self.__id = uuid.uuid4() self.name = name def __str__(self): return '<Demo {0}>'.format(self.__id) def set_new_id(self): self.__id = uuid.uuid4() a = Student('student1') print(a) print(a._Student__id) print('--------------------') a._Student__id == 2 print(a) print(a._Student__id) print('--------------------') a.set_new_id() print(a) output: <Demo d66d2e6d-7b6a-41f0-a067-3d3ef729f114> d66d2e6d-7b6a-41f0-a067-3d3ef729f114 -------------------- <Demo d66d2e6d-7b6a-41f0-a067-3d3ef729f114> d66d2e6d-7b6a-41f0-a067-3d3ef729f114 -------------------- <Demo c6f9a404-fe57-4898-a73c-4900f48c254a>","title":"\u79c1\u6709\u5c5e\u6027"},{"location":"python/1.%E5%9F%BA%E7%A1%80/#_2","text":"__init__ \u548c __getitem__ class Cards(object): def __init__(self, cards): self.cards = cards def __getitem__(self, item): return self.cards[item] cards = Cards([1, 2, 3]) for card in cards: print(card) __rept__ \u548c __str__ __repr__ \u901a\u8fc7 repr \u51fd\u6570\u8c03\u7528\uff0c\u6216\u8005%r\u3001{!r}\u683c\u5f0f\u5316\u8c03\u7528\uff1b __str__ \u901a\u8fc7 str \u51fd\u6570\u8c03\u7528\uff0c\u6216\u8005%s\u3001{!s}\u683c\u5f0f\u5316\u8c03\u7528\u3002 print(user) \u9690\u5f0f\u8c03\u7528\u5bf9\u8c61\u5b57\u7b26\u4e32\u65b9\u6cd5\u7684\uff0c\u89e3\u6790\u5668\u4f1a\u5148\u627estr\u65b9\u6cd5\uff0c\u82e5\u672a\u5b9e\u73b0\uff0c\u518d\u627erepr\u3002 __repr__ \u9488\u5bf9\u5f00\u53d1\u4eba\u5458\uff1b __str__ \u9488\u5bf9\u666e\u901a\u7528\u6237 class Cards(object): def __init__(self, cards): self.cards = cards def __getitem__(self, item): return self.cards[item] def __repr__(self): return \"<Cards size={0}>\".format(len(self.cards)) def __str__(self): return \",\".join([str(c) for c in self.cards]) cards = Cards([1, 2, 3]) print(cards) print('%s' % cards) print('%r' % cards) print('{0}'.format(cards)) print('{!r}'.format(cards)) \u7ed3\u679c\uff1a 1,2,3 1,2,3 <Cards size=3> 1,2,3 <Cards size=3> [Finished in 0.2s]","title":"\u9b54\u6cd5\u51fd\u6570"},{"location":"python/1.%E5%9F%BA%E7%A1%80/#python2","text":"python2 \u4f7f\u7528 format \u8fdb\u884c\u683c\u5f0f\u5316\u65f6\uff0c\u7531\u4e8e\u7f16\u7801\u683c\u5f0f\u662f ASCII \u62a5\u9519\uff0cPython3\u7531\u4e8e\u9ed8\u8ba4\u7f16\u7801\u662f utf8\uff0c\u6240\u4ee5\u6ca1\u6709\u6b64\u95ee\u9898\uff09 python3 >>> import json >>> hello_dict = json.loads('{\"chinese\": \"\u4f60\u597d\", \"english\": \"hello\"}') >>> print('{0}'.format(hello_dict['chinese'])) \u4f60\u597d python2 >>> import json >>> hello_dict = json.loads('{\"chinese\": \"\u4f60\u597d\", \"english\": \"hello\"}') >>> print('{0}'.format(hello_dict['english'])) hello >>> print('{0}'.format(hello_dict['chinese'])) Traceback (most recent call last): File \"<stdin>\", line 1, in <module> UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-1: ordinal not in range(128) >>> \u89e3\u51b3\u65b9\u6cd5\uff1a\u8bbe\u7f6e\u9ed8\u8ba4\u7f16\u7801\u683c\u5f0f\u4e3autf-8 import sys reload(sys) sys.setdefaultencoding('utf-8')","title":"python2 \u4e2d\u6587\u7f16\u7801\u9519\u8bef"},{"location":"python/1.%E5%9F%BA%E7%A1%80/#_3","text":"\u7c7b\u578b \u8bf4\u660e None \u6570\u503c int float complex(\u590d\u6570) bool \u8fed\u4ee3\u7c7b\u578b iterator \u5e8f\u5217 bytes bytearray memoryview \u6620\u5c04 dict \u96c6\u5408 set frozenset \u4e0a\u4e0b\u6587 with","title":"\u5185\u7f6e\u7c7b\u578b"},{"location":"python/1.%E5%9F%BA%E7%A1%80/#int","text":"+ - * / // \u6574\u9664\uff08\u5bf9\u4e8e\u5927\u6570\uff0c\u6574\u6570\u90e8\u5206\u7cbe\u5ea6\u4e0d\u4e22\u5931\uff09 >>> 491555843274052692 / 10 4.915558432740527e+16 >>> 491555843274052692 // 10 49155584327405269","title":"int \u8fd0\u7b97"},{"location":"python/1.%E5%9F%BA%E7%A1%80/#_4","text":"\u6b63\u5411\u904d\u5386\uff1a for I in LIST \u9006\u5411\u904d\u5386 reversed(LIST)","title":"\u904d\u5386"},{"location":"python/2.%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/","text":"os \u83b7\u53d6home\u76ee\u5f55 os.environ['HOME'] os.path.expandvars('$HOME') os.path.expanduser('~') inspect \u5bf9\u662f\u5426\u662f\u6a21\u5757\u3001\u6846\u67b6\u3001\u51fd\u6570\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5 \u83b7\u53d6\u6e90\u7801 \u83b7\u53d6\u7c7b\u6216\u8005\u51fd\u6570\u7684\u53c2\u6570\u4fe1\u606f \u89e3\u6790\u5806\u6808 \u4f8b\u5982\uff0c\u83b7\u53d6 promotions \u6a21\u5757\u4e2d\u7684\u6240\u6709\u7c7b >>> import inspect >>> import promotions >>> >>> a = inspect.getmembers(promotions, inspect.isclass) >>> a [('Demo', promotions.Demo)] doctest \u6a21\u5757\u6d4b\u8bd5 \u6d4b\u8bd5\u547d\u4ee4\uff1a python -m doctest <file_path> \u4f8b\u5982 def factorial(array: int) -> int: \"\"\" \u9636\u4e58 >>> factorial(1), factorial(2), factorial(3) (1, 2, 6) \"\"\" result = 1 for number in range(1, array + 1): result *= number return result signal example: import signal def quit_signal_handler(signum,frame): pass signal.signal(signal.SIGINT,quit_signal_handler) wsgiref \u5904\u7406\u5355\u4e2a\u8bf7\u6c42 \u65b9\u6cd51 from wsgiref.simple_server import make_server, demo_app httpd = make_server('', 8000, demo_app) sa = httpd.socket.getsockname() print \"Serving HTTP on\", sa[0], \"port\", sa[1], \"...\" # serve one request, then exit httpd.handle_request() httpd.server_close() \u8fd0\u884c\u5982\u4e0a\u4ee3\u7801\uff0c \u6d4f\u89c8\u5668\u8bbf\u95ee http://localhost:8000/xyz?abc, \u8fd4\u56de\u5982\u4e0b\u5185\u5bb9 Hello, /xyz \u5e76\u53d1\u5904\u7406\u591a\u4e2ahttp\u8bf7\u6c42 \u65b9\u6cd51 \u5982\u679c\u6709\u7684http\u8bf7\u6c42\u7684\u5904\u7406\u65f6\u95f4\u8f83\u957f\uff0c\u4e0a\u8ff0\u65b9\u5f0f\u7684httpd\u670d\u52a1\u5c31\u4f1a\u51fa\u73b0\u963b\u585e\u3002\u8fd9\u79cd\u60c5\u51b5\u5c31\u9700\u8981httpd\u80fd\u5e76\u53d1\u5904\u7406\u591a\u4e2a\u8bf7\u6c42\u3002 \u4f8b\u5982\u6709\u8fd9\u6837\u4e00\u4e2ahttp\u670d\u52a1\uff1a\u8be5\u670d\u52a1\u8fd4\u56de\u2018Hello, word!\u2019, \u4f46\u662f\u5982\u679c\u8bf7\u6c42\u662f\u2018/sleep\u2019\uff0c \u5219sleep 5\u79d2\u540e\u624d\u8fd4\u56de\u7ed3\u679c\u3002\u5982\u679c\u7528 \u65b9\u6cd5 1 \uff0c\u5f53\u8bbf\u95ee\u2018http://localhost:8000/sleep\u2019\u65f6\uff0c\u540c\u65f6\u8bbf\u95ee\u2018http://localhost:8000/\u2019\uff0c\u4f1a\u51fa\u73b0\u963b\u585e\u3002 \u89e3\u51b3\u65b9\u6cd5\u65f6\u7528\u7ebf\u7a0b\u5904\u7406http\u8bf7\u6c42\u3002 from wsgiref.simple_server import make_server import threading def application(environ, start_response): start_response('200 OK', [('Content-Type', 'text/plain')]) print 'thread %s handing ... : %s' % (os.getpid(), environ['PATH_INFO']) if environ['PATH_INFO'] == '/sleep': start_time = time.time() while (time.time() - start_time) <= 5: pass return ['Hello, word! \\r\\n'] def server_forever(thread_num): for i in xrange(thread_num): t = threading.Thread(target=httpd.serve_forever) t.start() # start 4 threads to run method: serve_forever server_forever(4) \u65b9\u6cd52 \u65b9\u6cd51\u5728http\u670d\u52a1\u542f\u52a8\u65f6\u76f4\u63a5\u521b\u5efa4\u4e2a\u7ebf\u7a0b\u5904\u7406http\u8bf7\u6c42\uff0c\u5982\u679c\u5e0c\u671b\u6ca1\u6709\u8bf7\u6c42\u65f6\uff0c\u7ebf\u7a0b\u4e0d\u8981\u521b\u5efa\uff0c\u8bf7\u6c42\u6570\u91cf\u7684\u589e\u52a0\u65f6\uff0c\u518d\u6dfb\u52a0\u5904\u7406\u7684\u7ebf\u7a0b\uff0c \u53ef\u7528\u5982\u4e0b\u65b9\u6cd5\uff1a from wsgiref.simple_server import make_server import threading def application(*environ*, *start_response*): # the same as method1 def server_forever(*max_thread*): while True: request = httpd.get_request() if threading.activeCount() < max_thread: t = threading.Thread(targe*=httpd.process_request, args=(request[0], request[1])) t.start() # set max thread num is 4 server_forever(4) socket example import os import socket import time SERVER_ADDRESS = (HOST, PORT) = '', 8888 REQUEST_QUEUE_SIZE = 5 def handle_request(client_connection): request = client_connection.recv(1024) print( 'Child PID: {pid}. Parent PID {ppid}'.format( pid=os.getpid(), ppid=os.getppid(), ) ) print(request.decode()) http_response = b\"\"\"\\ HTTP/1.1 200 OK Hello, World! \"\"\" client_connection.sendall(http_response) time.sleep(60) def serve_forever(): listen_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) listen_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) listen_socket.bind(SERVER_ADDRESS) listen_socket.listen(REQUEST_QUEUE_SIZE) print('Serving HTTP on port {port} ...'.format(port=PORT)) print('Parent PID (PPID): {pid}\\n'.format(pid=os.getpid())) while True: client_connection, client_address = listen_socket.accept() pid = os.fork() if pid == 0: listen_socket.close() handle_request(client_connection) client_connection.close() os._exit(0) else: client_connection.close() if __name__ == '__main__': serve_forever()","title":"2.\u5185\u7f6e\u6a21\u5757"},{"location":"python/2.%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#os","text":"\u83b7\u53d6home\u76ee\u5f55 os.environ['HOME'] os.path.expandvars('$HOME') os.path.expanduser('~')","title":"os"},{"location":"python/2.%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#inspect","text":"\u5bf9\u662f\u5426\u662f\u6a21\u5757\u3001\u6846\u67b6\u3001\u51fd\u6570\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5 \u83b7\u53d6\u6e90\u7801 \u83b7\u53d6\u7c7b\u6216\u8005\u51fd\u6570\u7684\u53c2\u6570\u4fe1\u606f \u89e3\u6790\u5806\u6808 \u4f8b\u5982\uff0c\u83b7\u53d6 promotions \u6a21\u5757\u4e2d\u7684\u6240\u6709\u7c7b >>> import inspect >>> import promotions >>> >>> a = inspect.getmembers(promotions, inspect.isclass) >>> a [('Demo', promotions.Demo)]","title":"inspect"},{"location":"python/2.%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#doctest","text":"\u6d4b\u8bd5\u547d\u4ee4\uff1a python -m doctest <file_path> \u4f8b\u5982 def factorial(array: int) -> int: \"\"\" \u9636\u4e58 >>> factorial(1), factorial(2), factorial(3) (1, 2, 6) \"\"\" result = 1 for number in range(1, array + 1): result *= number return result","title":"doctest \u6a21\u5757\u6d4b\u8bd5"},{"location":"python/2.%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#signal","text":"example: import signal def quit_signal_handler(signum,frame): pass signal.signal(signal.SIGINT,quit_signal_handler)","title":"signal"},{"location":"python/2.%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#wsgiref","text":"\u5904\u7406\u5355\u4e2a\u8bf7\u6c42 \u65b9\u6cd51 from wsgiref.simple_server import make_server, demo_app httpd = make_server('', 8000, demo_app) sa = httpd.socket.getsockname() print \"Serving HTTP on\", sa[0], \"port\", sa[1], \"...\" # serve one request, then exit httpd.handle_request() httpd.server_close() \u8fd0\u884c\u5982\u4e0a\u4ee3\u7801\uff0c \u6d4f\u89c8\u5668\u8bbf\u95ee http://localhost:8000/xyz?abc, \u8fd4\u56de\u5982\u4e0b\u5185\u5bb9 Hello, /xyz \u5e76\u53d1\u5904\u7406\u591a\u4e2ahttp\u8bf7\u6c42 \u65b9\u6cd51 \u5982\u679c\u6709\u7684http\u8bf7\u6c42\u7684\u5904\u7406\u65f6\u95f4\u8f83\u957f\uff0c\u4e0a\u8ff0\u65b9\u5f0f\u7684httpd\u670d\u52a1\u5c31\u4f1a\u51fa\u73b0\u963b\u585e\u3002\u8fd9\u79cd\u60c5\u51b5\u5c31\u9700\u8981httpd\u80fd\u5e76\u53d1\u5904\u7406\u591a\u4e2a\u8bf7\u6c42\u3002 \u4f8b\u5982\u6709\u8fd9\u6837\u4e00\u4e2ahttp\u670d\u52a1\uff1a\u8be5\u670d\u52a1\u8fd4\u56de\u2018Hello, word!\u2019, \u4f46\u662f\u5982\u679c\u8bf7\u6c42\u662f\u2018/sleep\u2019\uff0c \u5219sleep 5\u79d2\u540e\u624d\u8fd4\u56de\u7ed3\u679c\u3002\u5982\u679c\u7528 \u65b9\u6cd5 1 \uff0c\u5f53\u8bbf\u95ee\u2018http://localhost:8000/sleep\u2019\u65f6\uff0c\u540c\u65f6\u8bbf\u95ee\u2018http://localhost:8000/\u2019\uff0c\u4f1a\u51fa\u73b0\u963b\u585e\u3002 \u89e3\u51b3\u65b9\u6cd5\u65f6\u7528\u7ebf\u7a0b\u5904\u7406http\u8bf7\u6c42\u3002 from wsgiref.simple_server import make_server import threading def application(environ, start_response): start_response('200 OK', [('Content-Type', 'text/plain')]) print 'thread %s handing ... : %s' % (os.getpid(), environ['PATH_INFO']) if environ['PATH_INFO'] == '/sleep': start_time = time.time() while (time.time() - start_time) <= 5: pass return ['Hello, word! \\r\\n'] def server_forever(thread_num): for i in xrange(thread_num): t = threading.Thread(target=httpd.serve_forever) t.start() # start 4 threads to run method: serve_forever server_forever(4) \u65b9\u6cd52 \u65b9\u6cd51\u5728http\u670d\u52a1\u542f\u52a8\u65f6\u76f4\u63a5\u521b\u5efa4\u4e2a\u7ebf\u7a0b\u5904\u7406http\u8bf7\u6c42\uff0c\u5982\u679c\u5e0c\u671b\u6ca1\u6709\u8bf7\u6c42\u65f6\uff0c\u7ebf\u7a0b\u4e0d\u8981\u521b\u5efa\uff0c\u8bf7\u6c42\u6570\u91cf\u7684\u589e\u52a0\u65f6\uff0c\u518d\u6dfb\u52a0\u5904\u7406\u7684\u7ebf\u7a0b\uff0c \u53ef\u7528\u5982\u4e0b\u65b9\u6cd5\uff1a from wsgiref.simple_server import make_server import threading def application(*environ*, *start_response*): # the same as method1 def server_forever(*max_thread*): while True: request = httpd.get_request() if threading.activeCount() < max_thread: t = threading.Thread(targe*=httpd.process_request, args=(request[0], request[1])) t.start() # set max thread num is 4 server_forever(4)","title":"wsgiref"},{"location":"python/2.%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#socket","text":"example import os import socket import time SERVER_ADDRESS = (HOST, PORT) = '', 8888 REQUEST_QUEUE_SIZE = 5 def handle_request(client_connection): request = client_connection.recv(1024) print( 'Child PID: {pid}. Parent PID {ppid}'.format( pid=os.getpid(), ppid=os.getppid(), ) ) print(request.decode()) http_response = b\"\"\"\\ HTTP/1.1 200 OK Hello, World! \"\"\" client_connection.sendall(http_response) time.sleep(60) def serve_forever(): listen_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) listen_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) listen_socket.bind(SERVER_ADDRESS) listen_socket.listen(REQUEST_QUEUE_SIZE) print('Serving HTTP on port {port} ...'.format(port=PORT)) print('Parent PID (PPID): {pid}\\n'.format(pid=os.getpid())) while True: client_connection, client_address = listen_socket.accept() pid = os.fork() if pid == 0: listen_socket.close() handle_request(client_connection) client_connection.close() os._exit(0) else: client_connection.close() if __name__ == '__main__': serve_forever()","title":"socket"},{"location":"python/3.%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/","text":"eventlet eventlet\u7684\u6838\u5fc3\u662f\u534f\u7a0b\uff08\u4e5f\u53eb\u505agreen thread\uff09\u3002 \u5b83\u901a\u8fc7 greenlet \u63d0\u4f9b\u7684\u534f\u7a0b\u529f\u80fd\uff0c\u8ba9\u5f00\u53d1\u8005\u53ef\u4ee5\u4e0d\u7528\u5c06\u4ee5\u5f80\u7684\u591a\u7ebf\u7a0b\u7b49\u5e76\u53d1\u7a0b\u5e8f\u7684\u5f00\u53d1\u65b9\u5f0f\u8f6c\u53d8\u6210\u5f02\u6b65\u72b6\u6001\u673a\u6a21\u578b\uff0c\u5c31\u80fd\u76f4\u63a5\u4f7f\u7528select/epoll/kqueue\u7b49\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u652f\u6301\u9ad8\u5e76\u53d1IO\u63a5\u53e3\uff0c\u5e76\u4e14\u80fd\u5c3d\u53ef\u80fd\u5730\u53d1\u6325\u5b83\u4eec\u5728\u5e76\u53d1\u4e0a\u7684\u4f18\u52bf\u3002 import sys import socket import eventlet import eventlet.wsgi import webob.dec import os import time ''' \u4e3b\u8fdb\u7a0b \u521b\u5efa \u82e5\u5e72\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u540c\u65f6\u76d1\u542csocket\u6587\u4ef6 ''' socket_path = '/home/sockettest' mysocket = eventlet.listen(socket_path, family=socket.AF_UNIX, backlog=10) application = MetadataProxyHandler() children = {} workers = 5 def start_child(): pid = os.fork() if pid == 0: while True: listen_socket() sys.exit(1) else: children[pid] = application print 'fork process %d' % pid def listen_socket(): client, address = mysocket.accept() print(\"server[%s] %s dealing request... %s\" % (os.getpid(), str(client), address)) buf = client.recv(1024) # time.sleep(3) #print(\" %s\" %(buf)) client.close() while len(children) < workers: start_child() import eventlet import eventlet.greenpool from eventlet import wsgi import time import socket import os # import threading def handler(env, start_response): print '%s handling ... %s' % (os.getpid(), env['PATH_INFO']) if env['PATH_INFO'] == '/sleep': start = time.time() while (time.time() - start) < 60: pass # eventlet.sleep(10) # if env['PATH_INFO'] != '/': # start_response('404 Not Found', [('Content-Type', 'text/plain')]) # return ['Not Found\\r\\n'] start_response('200 OK', [('Content-Type', 'text/plain')]) data = {\"users\": [{\"id\": \"1\"}]} return data _socket = eventlet.listen(('', 8093)) _socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) _socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEPORT, 1) pool = eventlet.greenpool.GreenPool(10) pool.spawn(wsgi.server, _socket, handler) pool.waitall() print 'waiting ...' sched Python \u81ea\u5e26\u4e00\u4e2a\u8c03\u5ea6\u5668\u6a21\u5757sched\uff0c\u5b83\u80fd\u4e3a\u4f60\u5b9e\u73b0\u4f18\u5148\u7ea7\u961f\u5217/\u5ef6\u8fdf\u961f\u5217\u548c\u5b9a\u65f6\u961f\u5217\u3002 \u4f7f\u7528\u65b9\u6cd5\uff0c\u4f8b\u5982\uff0c5\u79d2\u540e\u6267\u884c\u65b9\u6cd5\uff0c\u4f18\u5148\u7ea7\u4e3a1 import sched def do_work(name): print(f'\u4f60\u597d\uff1a{name}') sch = sched.scheduler() sch.enter(5, 1, do_work, argument=('kingname', )) sch.run() \u4f18\u5148\u7ea7\u8d8a\u4f4e\u7b49\u7ea7\u8d8a\u9ad8 \u53ea\u6709\u5f53\u4e24\u4e2a\u4efb\u52a1\u540c\u65f6\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u624d\u4f1a\u53bb\u68c0\u67e5\u4f18\u5148\u7ea7\u3002\u5982\u679c\u4e24\u4e2a\u4efb\u52a1\u89e6\u53d1\u7684\u65f6\u95f4\u4e00\u524d\u4e00\u540e\uff0c\u90a3\u4e48\u8fd8\u8f6e\u4e0d\u5230\u6bd4\u8f83\u4f18\u5148\u7ea7\u3002 SQLAlchemy SQLAlchemy \uff0cPython\u5de5\u5177\u5305\u662f\u4e00\u4e2a\u5f3a\u5927\u7684 OR Mapper \uff0c\u5b83\u4e3a\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86SQL\u7684\u5168\u90e8\u529f\u80fd\u548c\u7075\u6d3b\u6027\u3002 Flask-SQLAlchemy\u662fFlask\u6269\u5c55\uff0c\u5b83\u5c06\u5bf9SQLAlchemy\u7684\u652f\u6301\u6dfb\u52a0\u5230Flask\u5e94\u7528\u7a0b\u5e8f\u4e2d\u3002 pip install flask-sqlalchemy elasticapm \u6027\u80fd\u76d1\u63a7 Instrumenting custom code | APM Python Agent Reference flask Flask \u662f\u4e00\u4e2a\u4f7f\u7528 Python \u7f16\u5199\u7684\u8f7b\u91cf\u7ea7 Web \u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\u3002 \u793a\u4f8b\uff0c helloword.py import flask app = flask.Flask(__name__) @app.route('/') def hello_world(): return 'Hello, World!' \u8fd0\u884c \u65b9\u6cd51\uff1a\u6dfb\u52a0 app.run() \u6267\u884c python helloword.py \u65b9\u6cd52 $ export FLASK_APP=helloword.py $ flask run * Running on http://127.0.0.1:5000/ \u8def\u7531\u53d8\u91cf\u89c4\u5219 \u901a\u8fc7\u5411\u89c4\u5219\u53c2\u6570\u6dfb\u52a0\u53d8\u91cf\u90e8\u5206\uff0c\u53ef\u4ee5\u52a8\u6001\u6784\u5efaURL\u3002\u6b64\u53d8\u91cf\u90e8\u5206\u6807\u8bb0\u4e3a \u3002 \u5b83\u4f5c\u4e3a\u5173\u952e\u5b57\u53c2\u6570\u4f20\u9012\u7ed9\u4e0e\u89c4\u5219\u76f8\u5173\u8054\u7684\u51fd\u6570\u3002 \u793a\u4f8b\uff1a @app.route('/hello/<name>') def hello(name): return 'Hello,{0}'.format(name) \u9664\u4e86\u9ed8\u8ba4\u5b57\u7b26\u4e32\u53d8\u91cf\u90e8\u5206\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u8f6c\u6362\u5668\u6784\u5efa\u89c4\u5219\uff1a int \u63a5\u53d7\u6574\u6570 float \u5bf9\u4e8e\u6d6e\u70b9\u503c path \u63a5\u53d7\u7528\u4f5c\u76ee\u5f55\u5206\u9694\u7b26\u7684\u659c\u6760 \u793a\u4f8b @app.route('/blog/<int:post_id>') def show_blog(post_id): return 'Blog Number {0}'.format(post_id) Django \u751f\u547d\u5468\u671f \u6d4f\u89c8\u5668 - wsgi - \u4e2d\u95f4\u4ef6 - \u8def\u7531\u7cfb\u7edf - views \u5f53\u7528\u6237\u5728\u6d4f\u89c8\u5668\u8f93\u5165url\u65f6\uff0c\u6d4f\u89c8\u5668\u4f1a\u751f\u6210\u8bf7\u6c42\u5934\u548c\u8bf7\u6c42\u4f53\u53d1\u9001\u7ed9\u670d\u52a1\u7aef\uff0curl\u7ecf\u8fc7Django\u4e2d\u7684wsgi\u65f6\u8bf7\u6c42\u5bf9\u8c61\u521b\u5efa\u5b8c\u6210\uff0c\u7ecf\u8fc7django\u7684\u4e2d\u95f4\u4ef6\uff0c\u7136\u540e\u5230\u8def\u7531\u7cfb\u7edf\u5339\u914d\u8def\u7531\uff0c\u5339\u914d\u6210\u529f\u540e\u8d70\u5230\u76f8\u5bf9\u5e94\u7684views\u51fd\u6570\uff0c\u89c6\u56fe\u51fd\u6570\u6267\u884c\u76f8\u5173\u7684\u903b\u8f91\u4ee3\u7801\u8fd4\u56de\u6267\u884c\u7ed3\u679c\uff0cDjango\u628a\u5ba2\u6237\u7aef\u60f3\u8981\u7684\u6570\u636e\u4f5c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u5ba2\u6237\u7aef\u63a5\u6536\u6570\u636e\uff0c\u6e32\u67d3\u5230\u9875\u9762\u5c55\u73b0\u7ed9\u7528\u6237 \u5185\u7f6e\u7ec4\u4ef6 Admin\u3001from\u3001modelfrom\u3001model \u914d\u7f6e\u7f13\u5b58\u5230redis CACHES = { \"default\": { \"BACKEND\": \"django_redis.cache.RedisCache\", \"LOCATION\": \"redis://39.96.61.39:6379\", 'PASSWORD':'19990104.Yu', \"OPTIONS\": { \"CLIENT_CLASS\": \"django_redis.client.DefaultClient\", } } } \u5355\u4e2aview\u7f13\u5b58 \u89c6\u56fe\u5bfc\u5165from django.views.decorators.cache import cache_page \u5728\u9700\u8981\u8fdb\u884c\u7f13\u5b58\u7684\u89c6\u56fe\u51fd\u6570\u4e0a\u6dfb\u52a0\u5982\u4e0b\u88c5\u9970\u5668\u5373\u53ef\uff1a @cache_page(60 * 2)#20\u5206\u949f \u5e95\u5c42\u7f13\u5b58API \u89c6\u56fe\u5bfc\u5165 from django.core.cache import cache \u6a21\u677f\u7247\u6bb5\u7f13\u5b58 \u4f7f\u7528cache\u6807\u7b7e\u8fdb\u884c\u7f13\u5b58 \u5728HTML\u6587\u4ef6\u4e2d\u6dfb\u52a0\uff1a \\{\\%load cache\\%\\} \\{\\%cache 60 \u7f13\u5b58\u540d\u5b57 \\%\\} session\u548ccookie \u533a\u522b\uff1a cookie\u6570\u636e\u5b58\u653e\u5728\u5ba2\u6237\u7684\u6d4f\u89c8\u5668\u4e0a\uff0csession\u6570\u636e\u653e\u5728\u670d\u52a1\u5668\u4e0a cookie\u4e0d\u662f\u5f88\u5b89\u5168\uff0c\u522b\u4eba\u53ef\u4ee5\u5206\u6790\u5b58\u653e\u5728\u672c\u5730\u7684COOKIE\u5e76\u8fdb\u884cCOOKIE\u6b3a\u9a97\uff1b\u5355\u4e2acookie\u4fdd\u5b58\u7684\u6570\u636e\u4e0d\u80fd\u8d85\u8fc74K\uff0c\u5f88\u591a\u6d4f\u89c8\u5668\u90fd\u9650\u5236\u4e00\u4e2a\u7ad9\u70b9\u6700\u591a\u4fdd\u5b5820\u4e2acookie\u3002 \u8003\u8651\u5230\u5b89\u5168\u5e94\u5f53\u4f7f\u7528session\u3002 session\u4f1a\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u4fdd\u5b58\u5728\u670d\u52a1\u5668\u4e0a\u3002\u5f53\u8bbf\u95ee\u589e\u591a\uff0c\u4f1a\u6bd4\u8f83\u5360\u7528\u4f60\u670d\u52a1\u5668\u7684\u6027\u80fd\u8003\u8651\u5230\u51cf\u8f7b\u670d\u52a1\u5668\u6027\u80fd\u65b9\u9762\uff0c\u5e94\u5f53\u4f7f\u7528COOKIE \u5efa\u8bae\uff1a\u5c06\u767b\u9646\u4fe1\u606f\u7b49\u91cd\u8981\u4fe1\u606f\u5b58\u653e\u4e3aSESSION\uff0c\u5176\u4ed6\u4fe1\u606f\u5982\u679c\u9700\u8981\u4fdd\u7559\uff0c\u53ef\u4ee5\u653e\u5728COOKIE\u4e2d MVC\u548cMTV\u6a21\u5f0f MTV\uff1a Model(\u6a21\u578b)\uff1a\u8d1f\u8d23\u4e1a\u52a1\u5bf9\u8c61\u4e0e\u6570\u636e\u5e93\u7684\u5bf9\u8c61(ORM) Template(\u6a21\u7248)\uff1a\u8d1f\u8d23\u5982\u4f55\u628a\u9875\u9762\u5c55\u793a\u7ed9\u7528\u6237 View(\u89c6\u56fe)\uff1a\u8d1f\u8d23\u4e1a\u52a1\u903b\u8f91\uff0c\u5e76\u5728\u9002\u5f53\u7684\u65f6\u5019\u8c03\u7528Model\u548cTemplate MVC: \u5c31\u662f\u628aweb\u5e94\u7528\u5206\u4e3a\u6a21\u578b(M),\u63a7\u5236\u5668(C),\u89c6\u56fe(V)\u4e09\u5c42\uff1b \u4ed6\u4eec\u4e4b\u95f4\u4ee5\u4e00\u79cd\u63d2\u4ef6\u4f3c\u7684\uff0c\u677e\u8026\u5408\u7684\u65b9\u5f0f\u8fde\u63a5\u5728\u4e00\u8d77\u3002 \u6a21\u578b\u8d1f\u8d23\u4e1a\u52a1\u5bf9\u8c61\u4e0e\u6570\u636e\u5e93\u7684\u5bf9\u8c61(ORM), \u89c6\u56fe\u8d1f\u8d23\u4e0e\u7528\u6237\u7684\u4ea4\u4e92(\u9875\u9762)\uff0c \u63a7\u5236\u5668(C)\u63a5\u53d7\u7528\u6237\u7684\u8f93\u5165\u8c03\u7528\u6a21\u578b\u548c\u89c6\u56fe\u5b8c\u6210\u7528\u6237\u7684\u8bf7\u6c42\u3002 ORM \u5bf9\u8c61\u5173\u7cfb\u6620\u5c04 \u4f18\u70b9\uff1a 1\u3001ORM\u4f7f\u5f97\u6211\u4eec\u7684\u901a\u7528\u6570\u636e\u5e93\u4ea4\u4e92\u53d8\u5f97\u7b80\u5355\u6613\u884c\uff0c\u5e76\u4e14\u5b8c\u5168\u4e0d\u7528\u8003\u8651\u5f00\u59cb\u7684SQL\u8bed\u53e5\u3002\u5feb\u901f\u5f00\u53d1\uff0c\u7531\u6b64\u800c\u6765\u3002 2\u3001\u53ef\u4ee5\u907f\u514d\u4e00\u4e9b\u65b0\u624b\u7a0b\u5e8f\u733f\u5199sql\u8bed\u53e5\u5e26\u6765\u7684\u6027\u80fd\u6548\u7387\u548c\u5b89\u5168\u95ee\u9898\u3002 \u7f3a\u70b9\uff1a 1\u3001\u6027\u80fd\u6709\u6240\u727a\u7272\uff0c\u4e0d\u8fc7\u73b0\u5728\u7684\u5404\u79cdORM\u6846\u67b6\u90fd\u5728\u5c1d\u8bd5\u4f7f\u7528\u5404\u79cd\u65b9\u6cd5\u6765\u51cf\u5c11\u8fd9\u4e2a\u95ee\u9898\uff08LazyLoad\uff0cCache\uff09\uff0c\u6548\u679c\u8fd8\u662f\u5f88\u663e\u8457\u7684\u3002 2\u3001\u5bf9\u4e8e\u4e2a\u522b\u7684\u8d1f\u8d23\u67e5\u8be2\uff0cORM\u4ecd\u7136\u529b\u4e0d\u4ece\u5fc3\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cORm\u6846\u67b6\u4e00\u822c\u4e5f\u63d0\u4f9b\u4e86\u76f4\u63a5\u5199\u539f\u751fsql\u7684\u65b9\u5f0f\u3002 \u4e2d\u95f4\u4ef6\u7684\u4f5c\u7528 \u4e2d\u95f4\u4ef6\u662f\u4ecb\u4e8erequest\u4e0eresponse\u5904\u7406\u4e4b\u95f4\u7684\u4e00\u9053\u5904\u7406\u8fc7\u7a0b\uff0c\u80fd\u5728\u5168\u5c40\u4e0a\u6539\u53d8django\u7684\u8f93\u5165\u4e0e\u8f93\u51fa \u4e2d\u95f4\u4ef6\u76844\u79cd\u65b9\u6cd5\u53ca\u5e94\u7528\u573a\u666f\uff08\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u5fc5\u987b\u7ee7\u627fMiddlewareMixin\uff09 \u5bfc\u5305 from django.utils.deprecation import MiddlewareMixin 4\u79cd\u65b9\u6cd5\uff1a process_request process_view process_exception views\u4e2d\u51fa\u73b0\u9519\u8bef\u6267\u884c\u8be5\u65b9\u6cd5 process_response ORM\u4e2d\u7684\u65b9\u6cd5 \u8fd4\u56de\u5bf9\u8c61\u5217\u8868(Queryset)\u7684\u65b9\u6cd5\u6709: all() filter() ordey_by() exclude() values() values_list() reverse() distinct() \u8fd4\u56de\u5355\u4e2a\u5bf9\u8c61\u7684\u65b9\u6cd5\u6709: first() last() get() create()\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61,\u4e14\u8fd4\u56de\u521a\u521b\u5efa\u7684\u5bf9\u8c61 \u5224\u65ad\u5e03\u5c14\u503c\u7684\u6709: exists() \u8fd4\u56de\u6570\u5b57\u7684\u6709: count() 16\u3001CSRF\u5b9e\u73b0\u673a\u5236 1\uff09\u542f\u7528\u4e2d\u95f4\u4ef6 2\uff09post\u8bf7\u6c42 3\uff09\u9a8c\u8bc1\u7801 4\uff09\u8868\u5355\u4e2d\u6dfb\u52a0{\\% csrf_token \\%}\u6807\u7b7e Django\u7684\u8de8\u57df\u95ee\u9898 1\u3001\u4e3a\u4ec0\u4e48\u6709\u8de8\u57df\uff1f 1\u3001\u6d4f\u89c8\u5668\u7684\u540c\u6e90\u7b56\u7565 \uff08\u4ece\u4e00\u4e2a\u57df\u4e0a\u52a0\u8f7d\u7684\u811a\u672c\u4e0d\u5141\u8bb8\u8bbf\u95ee\u53e6\u5916\u4e00\u4e2a\u57df\u7684\u6587\u6863\u5c5e\u6027\u3002\uff09 2\u3001\u89e3\u51b3\u8de8\u57df\u95ee\u9898 1\u3001\u524d\u7aef\u8bbe\u7f6e\u4ee3\u7406\u8fdb\u884c\u8bbf\u95ee 2\u3001settings\u4e2d\u914d\u7f6edjango-cors-headers==2.0.1 INSTALLED_APPS\u4e2d\u6dfb\u52a0 \u2018corsheaders\u2019 'corsheaders.middleware.CorsMiddleware',#\u653e\u5728session\u4e2d\u95f4\u4ef6\u4e0b\u9762 \u6dfb\u52a0\u4ee3\u7801 CORS_ALLOW_CREDENTIALS = True CORS_ORIGIN_ALLOW_ALL = True \u5141\u8bb8\u6240\u6709\u7684\u8bf7\u6c42\u5934 CORS_ALLOW_HEADERS = ('*') \u8bfb\u5199\u5206\u79bb \u624b\u52a8\uff0c\u4f7f\u7528 using\uff0c\u793a\u4f8b models.Products.objects.using('default').create(prod_name='\u718a\u732b\u516c\u4ed4') \u81ea\u52a8\uff0c\u914d\u7f6e\u6570\u636e\u5e93\u8def\u7531 \u6570\u636e\u5e93\u8def\u7531\u4e2d\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\u3002 \u4e3b\u8981\u7528\u5176\u4e2d\u7684\u4e24\u4e2a\uff1a def db_for_read()\u51b3\u5b9a\u8bfb\u64cd\u4f5c\u7684\u6570\u636e\u5e93\uff0cdef db_for_write()\u51b3\u5b9a\u5199\u64cd\u4f5c\u7684\u6570\u636e\u5e93\u3002 class Router: def db_for_read(self, model, **hints): return 'db2' def db_for_write(self, model, **hints): return 'default' \u5728settings.py\u4e2d\u6307\u5b9aDATABASE_ROUTERS DATABASE_ROUTERS = ['myrouter.Router',]## sdf sdfsdf","title":"3.\u7b2c\u4e09\u65b9\u5e93"},{"location":"python/3.%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/#eventlet","text":"eventlet\u7684\u6838\u5fc3\u662f\u534f\u7a0b\uff08\u4e5f\u53eb\u505agreen thread\uff09\u3002 \u5b83\u901a\u8fc7 greenlet \u63d0\u4f9b\u7684\u534f\u7a0b\u529f\u80fd\uff0c\u8ba9\u5f00\u53d1\u8005\u53ef\u4ee5\u4e0d\u7528\u5c06\u4ee5\u5f80\u7684\u591a\u7ebf\u7a0b\u7b49\u5e76\u53d1\u7a0b\u5e8f\u7684\u5f00\u53d1\u65b9\u5f0f\u8f6c\u53d8\u6210\u5f02\u6b65\u72b6\u6001\u673a\u6a21\u578b\uff0c\u5c31\u80fd\u76f4\u63a5\u4f7f\u7528select/epoll/kqueue\u7b49\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u652f\u6301\u9ad8\u5e76\u53d1IO\u63a5\u53e3\uff0c\u5e76\u4e14\u80fd\u5c3d\u53ef\u80fd\u5730\u53d1\u6325\u5b83\u4eec\u5728\u5e76\u53d1\u4e0a\u7684\u4f18\u52bf\u3002 import sys import socket import eventlet import eventlet.wsgi import webob.dec import os import time ''' \u4e3b\u8fdb\u7a0b \u521b\u5efa \u82e5\u5e72\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u540c\u65f6\u76d1\u542csocket\u6587\u4ef6 ''' socket_path = '/home/sockettest' mysocket = eventlet.listen(socket_path, family=socket.AF_UNIX, backlog=10) application = MetadataProxyHandler() children = {} workers = 5 def start_child(): pid = os.fork() if pid == 0: while True: listen_socket() sys.exit(1) else: children[pid] = application print 'fork process %d' % pid def listen_socket(): client, address = mysocket.accept() print(\"server[%s] %s dealing request... %s\" % (os.getpid(), str(client), address)) buf = client.recv(1024) # time.sleep(3) #print(\" %s\" %(buf)) client.close() while len(children) < workers: start_child() import eventlet import eventlet.greenpool from eventlet import wsgi import time import socket import os # import threading def handler(env, start_response): print '%s handling ... %s' % (os.getpid(), env['PATH_INFO']) if env['PATH_INFO'] == '/sleep': start = time.time() while (time.time() - start) < 60: pass # eventlet.sleep(10) # if env['PATH_INFO'] != '/': # start_response('404 Not Found', [('Content-Type', 'text/plain')]) # return ['Not Found\\r\\n'] start_response('200 OK', [('Content-Type', 'text/plain')]) data = {\"users\": [{\"id\": \"1\"}]} return data _socket = eventlet.listen(('', 8093)) _socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) _socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEPORT, 1) pool = eventlet.greenpool.GreenPool(10) pool.spawn(wsgi.server, _socket, handler) pool.waitall() print 'waiting ...'","title":"eventlet"},{"location":"python/3.%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/#sched","text":"Python \u81ea\u5e26\u4e00\u4e2a\u8c03\u5ea6\u5668\u6a21\u5757sched\uff0c\u5b83\u80fd\u4e3a\u4f60\u5b9e\u73b0\u4f18\u5148\u7ea7\u961f\u5217/\u5ef6\u8fdf\u961f\u5217\u548c\u5b9a\u65f6\u961f\u5217\u3002 \u4f7f\u7528\u65b9\u6cd5\uff0c\u4f8b\u5982\uff0c5\u79d2\u540e\u6267\u884c\u65b9\u6cd5\uff0c\u4f18\u5148\u7ea7\u4e3a1 import sched def do_work(name): print(f'\u4f60\u597d\uff1a{name}') sch = sched.scheduler() sch.enter(5, 1, do_work, argument=('kingname', )) sch.run() \u4f18\u5148\u7ea7\u8d8a\u4f4e\u7b49\u7ea7\u8d8a\u9ad8 \u53ea\u6709\u5f53\u4e24\u4e2a\u4efb\u52a1\u540c\u65f6\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u624d\u4f1a\u53bb\u68c0\u67e5\u4f18\u5148\u7ea7\u3002\u5982\u679c\u4e24\u4e2a\u4efb\u52a1\u89e6\u53d1\u7684\u65f6\u95f4\u4e00\u524d\u4e00\u540e\uff0c\u90a3\u4e48\u8fd8\u8f6e\u4e0d\u5230\u6bd4\u8f83\u4f18\u5148\u7ea7\u3002","title":"sched"},{"location":"python/3.%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/#sqlalchemy","text":"SQLAlchemy \uff0cPython\u5de5\u5177\u5305\u662f\u4e00\u4e2a\u5f3a\u5927\u7684 OR Mapper \uff0c\u5b83\u4e3a\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86SQL\u7684\u5168\u90e8\u529f\u80fd\u548c\u7075\u6d3b\u6027\u3002 Flask-SQLAlchemy\u662fFlask\u6269\u5c55\uff0c\u5b83\u5c06\u5bf9SQLAlchemy\u7684\u652f\u6301\u6dfb\u52a0\u5230Flask\u5e94\u7528\u7a0b\u5e8f\u4e2d\u3002 pip install flask-sqlalchemy","title":"SQLAlchemy"},{"location":"python/3.%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/#elasticapm","text":"\u6027\u80fd\u76d1\u63a7 Instrumenting custom code | APM Python Agent Reference","title":"elasticapm"},{"location":"python/3.%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/#flask","text":"Flask \u662f\u4e00\u4e2a\u4f7f\u7528 Python \u7f16\u5199\u7684\u8f7b\u91cf\u7ea7 Web \u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\u3002 \u793a\u4f8b\uff0c helloword.py import flask app = flask.Flask(__name__) @app.route('/') def hello_world(): return 'Hello, World!' \u8fd0\u884c \u65b9\u6cd51\uff1a\u6dfb\u52a0 app.run() \u6267\u884c python helloword.py \u65b9\u6cd52 $ export FLASK_APP=helloword.py $ flask run * Running on http://127.0.0.1:5000/ \u8def\u7531\u53d8\u91cf\u89c4\u5219 \u901a\u8fc7\u5411\u89c4\u5219\u53c2\u6570\u6dfb\u52a0\u53d8\u91cf\u90e8\u5206\uff0c\u53ef\u4ee5\u52a8\u6001\u6784\u5efaURL\u3002\u6b64\u53d8\u91cf\u90e8\u5206\u6807\u8bb0\u4e3a \u3002 \u5b83\u4f5c\u4e3a\u5173\u952e\u5b57\u53c2\u6570\u4f20\u9012\u7ed9\u4e0e\u89c4\u5219\u76f8\u5173\u8054\u7684\u51fd\u6570\u3002 \u793a\u4f8b\uff1a @app.route('/hello/<name>') def hello(name): return 'Hello,{0}'.format(name) \u9664\u4e86\u9ed8\u8ba4\u5b57\u7b26\u4e32\u53d8\u91cf\u90e8\u5206\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u8f6c\u6362\u5668\u6784\u5efa\u89c4\u5219\uff1a int \u63a5\u53d7\u6574\u6570 float \u5bf9\u4e8e\u6d6e\u70b9\u503c path \u63a5\u53d7\u7528\u4f5c\u76ee\u5f55\u5206\u9694\u7b26\u7684\u659c\u6760 \u793a\u4f8b @app.route('/blog/<int:post_id>') def show_blog(post_id): return 'Blog Number {0}'.format(post_id)","title":"flask"},{"location":"python/3.%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/#django","text":"\u751f\u547d\u5468\u671f \u6d4f\u89c8\u5668 - wsgi - \u4e2d\u95f4\u4ef6 - \u8def\u7531\u7cfb\u7edf - views \u5f53\u7528\u6237\u5728\u6d4f\u89c8\u5668\u8f93\u5165url\u65f6\uff0c\u6d4f\u89c8\u5668\u4f1a\u751f\u6210\u8bf7\u6c42\u5934\u548c\u8bf7\u6c42\u4f53\u53d1\u9001\u7ed9\u670d\u52a1\u7aef\uff0curl\u7ecf\u8fc7Django\u4e2d\u7684wsgi\u65f6\u8bf7\u6c42\u5bf9\u8c61\u521b\u5efa\u5b8c\u6210\uff0c\u7ecf\u8fc7django\u7684\u4e2d\u95f4\u4ef6\uff0c\u7136\u540e\u5230\u8def\u7531\u7cfb\u7edf\u5339\u914d\u8def\u7531\uff0c\u5339\u914d\u6210\u529f\u540e\u8d70\u5230\u76f8\u5bf9\u5e94\u7684views\u51fd\u6570\uff0c\u89c6\u56fe\u51fd\u6570\u6267\u884c\u76f8\u5173\u7684\u903b\u8f91\u4ee3\u7801\u8fd4\u56de\u6267\u884c\u7ed3\u679c\uff0cDjango\u628a\u5ba2\u6237\u7aef\u60f3\u8981\u7684\u6570\u636e\u4f5c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u5ba2\u6237\u7aef\u63a5\u6536\u6570\u636e\uff0c\u6e32\u67d3\u5230\u9875\u9762\u5c55\u73b0\u7ed9\u7528\u6237 \u5185\u7f6e\u7ec4\u4ef6 Admin\u3001from\u3001modelfrom\u3001model \u914d\u7f6e\u7f13\u5b58\u5230redis CACHES = { \"default\": { \"BACKEND\": \"django_redis.cache.RedisCache\", \"LOCATION\": \"redis://39.96.61.39:6379\", 'PASSWORD':'19990104.Yu', \"OPTIONS\": { \"CLIENT_CLASS\": \"django_redis.client.DefaultClient\", } } } \u5355\u4e2aview\u7f13\u5b58 \u89c6\u56fe\u5bfc\u5165from django.views.decorators.cache import cache_page \u5728\u9700\u8981\u8fdb\u884c\u7f13\u5b58\u7684\u89c6\u56fe\u51fd\u6570\u4e0a\u6dfb\u52a0\u5982\u4e0b\u88c5\u9970\u5668\u5373\u53ef\uff1a @cache_page(60 * 2)#20\u5206\u949f \u5e95\u5c42\u7f13\u5b58API \u89c6\u56fe\u5bfc\u5165 from django.core.cache import cache \u6a21\u677f\u7247\u6bb5\u7f13\u5b58 \u4f7f\u7528cache\u6807\u7b7e\u8fdb\u884c\u7f13\u5b58 \u5728HTML\u6587\u4ef6\u4e2d\u6dfb\u52a0\uff1a \\{\\%load cache\\%\\} \\{\\%cache 60 \u7f13\u5b58\u540d\u5b57 \\%\\} session\u548ccookie \u533a\u522b\uff1a cookie\u6570\u636e\u5b58\u653e\u5728\u5ba2\u6237\u7684\u6d4f\u89c8\u5668\u4e0a\uff0csession\u6570\u636e\u653e\u5728\u670d\u52a1\u5668\u4e0a cookie\u4e0d\u662f\u5f88\u5b89\u5168\uff0c\u522b\u4eba\u53ef\u4ee5\u5206\u6790\u5b58\u653e\u5728\u672c\u5730\u7684COOKIE\u5e76\u8fdb\u884cCOOKIE\u6b3a\u9a97\uff1b\u5355\u4e2acookie\u4fdd\u5b58\u7684\u6570\u636e\u4e0d\u80fd\u8d85\u8fc74K\uff0c\u5f88\u591a\u6d4f\u89c8\u5668\u90fd\u9650\u5236\u4e00\u4e2a\u7ad9\u70b9\u6700\u591a\u4fdd\u5b5820\u4e2acookie\u3002 \u8003\u8651\u5230\u5b89\u5168\u5e94\u5f53\u4f7f\u7528session\u3002 session\u4f1a\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u4fdd\u5b58\u5728\u670d\u52a1\u5668\u4e0a\u3002\u5f53\u8bbf\u95ee\u589e\u591a\uff0c\u4f1a\u6bd4\u8f83\u5360\u7528\u4f60\u670d\u52a1\u5668\u7684\u6027\u80fd\u8003\u8651\u5230\u51cf\u8f7b\u670d\u52a1\u5668\u6027\u80fd\u65b9\u9762\uff0c\u5e94\u5f53\u4f7f\u7528COOKIE \u5efa\u8bae\uff1a\u5c06\u767b\u9646\u4fe1\u606f\u7b49\u91cd\u8981\u4fe1\u606f\u5b58\u653e\u4e3aSESSION\uff0c\u5176\u4ed6\u4fe1\u606f\u5982\u679c\u9700\u8981\u4fdd\u7559\uff0c\u53ef\u4ee5\u653e\u5728COOKIE\u4e2d MVC\u548cMTV\u6a21\u5f0f MTV\uff1a Model(\u6a21\u578b)\uff1a\u8d1f\u8d23\u4e1a\u52a1\u5bf9\u8c61\u4e0e\u6570\u636e\u5e93\u7684\u5bf9\u8c61(ORM) Template(\u6a21\u7248)\uff1a\u8d1f\u8d23\u5982\u4f55\u628a\u9875\u9762\u5c55\u793a\u7ed9\u7528\u6237 View(\u89c6\u56fe)\uff1a\u8d1f\u8d23\u4e1a\u52a1\u903b\u8f91\uff0c\u5e76\u5728\u9002\u5f53\u7684\u65f6\u5019\u8c03\u7528Model\u548cTemplate MVC: \u5c31\u662f\u628aweb\u5e94\u7528\u5206\u4e3a\u6a21\u578b(M),\u63a7\u5236\u5668(C),\u89c6\u56fe(V)\u4e09\u5c42\uff1b \u4ed6\u4eec\u4e4b\u95f4\u4ee5\u4e00\u79cd\u63d2\u4ef6\u4f3c\u7684\uff0c\u677e\u8026\u5408\u7684\u65b9\u5f0f\u8fde\u63a5\u5728\u4e00\u8d77\u3002 \u6a21\u578b\u8d1f\u8d23\u4e1a\u52a1\u5bf9\u8c61\u4e0e\u6570\u636e\u5e93\u7684\u5bf9\u8c61(ORM), \u89c6\u56fe\u8d1f\u8d23\u4e0e\u7528\u6237\u7684\u4ea4\u4e92(\u9875\u9762)\uff0c \u63a7\u5236\u5668(C)\u63a5\u53d7\u7528\u6237\u7684\u8f93\u5165\u8c03\u7528\u6a21\u578b\u548c\u89c6\u56fe\u5b8c\u6210\u7528\u6237\u7684\u8bf7\u6c42\u3002 ORM \u5bf9\u8c61\u5173\u7cfb\u6620\u5c04 \u4f18\u70b9\uff1a 1\u3001ORM\u4f7f\u5f97\u6211\u4eec\u7684\u901a\u7528\u6570\u636e\u5e93\u4ea4\u4e92\u53d8\u5f97\u7b80\u5355\u6613\u884c\uff0c\u5e76\u4e14\u5b8c\u5168\u4e0d\u7528\u8003\u8651\u5f00\u59cb\u7684SQL\u8bed\u53e5\u3002\u5feb\u901f\u5f00\u53d1\uff0c\u7531\u6b64\u800c\u6765\u3002 2\u3001\u53ef\u4ee5\u907f\u514d\u4e00\u4e9b\u65b0\u624b\u7a0b\u5e8f\u733f\u5199sql\u8bed\u53e5\u5e26\u6765\u7684\u6027\u80fd\u6548\u7387\u548c\u5b89\u5168\u95ee\u9898\u3002 \u7f3a\u70b9\uff1a 1\u3001\u6027\u80fd\u6709\u6240\u727a\u7272\uff0c\u4e0d\u8fc7\u73b0\u5728\u7684\u5404\u79cdORM\u6846\u67b6\u90fd\u5728\u5c1d\u8bd5\u4f7f\u7528\u5404\u79cd\u65b9\u6cd5\u6765\u51cf\u5c11\u8fd9\u4e2a\u95ee\u9898\uff08LazyLoad\uff0cCache\uff09\uff0c\u6548\u679c\u8fd8\u662f\u5f88\u663e\u8457\u7684\u3002 2\u3001\u5bf9\u4e8e\u4e2a\u522b\u7684\u8d1f\u8d23\u67e5\u8be2\uff0cORM\u4ecd\u7136\u529b\u4e0d\u4ece\u5fc3\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cORm\u6846\u67b6\u4e00\u822c\u4e5f\u63d0\u4f9b\u4e86\u76f4\u63a5\u5199\u539f\u751fsql\u7684\u65b9\u5f0f\u3002 \u4e2d\u95f4\u4ef6\u7684\u4f5c\u7528 \u4e2d\u95f4\u4ef6\u662f\u4ecb\u4e8erequest\u4e0eresponse\u5904\u7406\u4e4b\u95f4\u7684\u4e00\u9053\u5904\u7406\u8fc7\u7a0b\uff0c\u80fd\u5728\u5168\u5c40\u4e0a\u6539\u53d8django\u7684\u8f93\u5165\u4e0e\u8f93\u51fa \u4e2d\u95f4\u4ef6\u76844\u79cd\u65b9\u6cd5\u53ca\u5e94\u7528\u573a\u666f\uff08\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u5fc5\u987b\u7ee7\u627fMiddlewareMixin\uff09 \u5bfc\u5305 from django.utils.deprecation import MiddlewareMixin 4\u79cd\u65b9\u6cd5\uff1a process_request process_view process_exception views\u4e2d\u51fa\u73b0\u9519\u8bef\u6267\u884c\u8be5\u65b9\u6cd5 process_response ORM\u4e2d\u7684\u65b9\u6cd5 \u8fd4\u56de\u5bf9\u8c61\u5217\u8868(Queryset)\u7684\u65b9\u6cd5\u6709: all() filter() ordey_by() exclude() values() values_list() reverse() distinct() \u8fd4\u56de\u5355\u4e2a\u5bf9\u8c61\u7684\u65b9\u6cd5\u6709: first() last() get() create()\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61,\u4e14\u8fd4\u56de\u521a\u521b\u5efa\u7684\u5bf9\u8c61 \u5224\u65ad\u5e03\u5c14\u503c\u7684\u6709: exists() \u8fd4\u56de\u6570\u5b57\u7684\u6709: count() 16\u3001CSRF\u5b9e\u73b0\u673a\u5236 1\uff09\u542f\u7528\u4e2d\u95f4\u4ef6 2\uff09post\u8bf7\u6c42 3\uff09\u9a8c\u8bc1\u7801 4\uff09\u8868\u5355\u4e2d\u6dfb\u52a0{\\% csrf_token \\%}\u6807\u7b7e Django\u7684\u8de8\u57df\u95ee\u9898 1\u3001\u4e3a\u4ec0\u4e48\u6709\u8de8\u57df\uff1f 1\u3001\u6d4f\u89c8\u5668\u7684\u540c\u6e90\u7b56\u7565 \uff08\u4ece\u4e00\u4e2a\u57df\u4e0a\u52a0\u8f7d\u7684\u811a\u672c\u4e0d\u5141\u8bb8\u8bbf\u95ee\u53e6\u5916\u4e00\u4e2a\u57df\u7684\u6587\u6863\u5c5e\u6027\u3002\uff09 2\u3001\u89e3\u51b3\u8de8\u57df\u95ee\u9898 1\u3001\u524d\u7aef\u8bbe\u7f6e\u4ee3\u7406\u8fdb\u884c\u8bbf\u95ee 2\u3001settings\u4e2d\u914d\u7f6edjango-cors-headers==2.0.1 INSTALLED_APPS\u4e2d\u6dfb\u52a0 \u2018corsheaders\u2019 'corsheaders.middleware.CorsMiddleware',#\u653e\u5728session\u4e2d\u95f4\u4ef6\u4e0b\u9762 \u6dfb\u52a0\u4ee3\u7801 CORS_ALLOW_CREDENTIALS = True CORS_ORIGIN_ALLOW_ALL = True","title":"Django"},{"location":"python/3.%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/#_1","text":"CORS_ALLOW_HEADERS = ('*') \u8bfb\u5199\u5206\u79bb \u624b\u52a8\uff0c\u4f7f\u7528 using\uff0c\u793a\u4f8b models.Products.objects.using('default').create(prod_name='\u718a\u732b\u516c\u4ed4') \u81ea\u52a8\uff0c\u914d\u7f6e\u6570\u636e\u5e93\u8def\u7531 \u6570\u636e\u5e93\u8def\u7531\u4e2d\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\u3002 \u4e3b\u8981\u7528\u5176\u4e2d\u7684\u4e24\u4e2a\uff1a def db_for_read()\u51b3\u5b9a\u8bfb\u64cd\u4f5c\u7684\u6570\u636e\u5e93\uff0cdef db_for_write()\u51b3\u5b9a\u5199\u64cd\u4f5c\u7684\u6570\u636e\u5e93\u3002 class Router: def db_for_read(self, model, **hints): return 'db2' def db_for_write(self, model, **hints): return 'default' \u5728settings.py\u4e2d\u6307\u5b9aDATABASE_ROUTERS DATABASE_ROUTERS = ['myrouter.Router',]## sdf","title":"\u5141\u8bb8\u6240\u6709\u7684\u8bf7\u6c42\u5934"},{"location":"python/3.%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/#sdfsdf","text":"","title":"sdfsdf"},{"location":"python/4.%E4%BC%98%E5%8C%96/","text":"\u907f\u514d\u5168\u5c40\u53d8\u91cf \u7531\u4e8e\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u5b9e\u73b0\u65b9\u5f0f\u4e0d\u540c\uff0c\u5b9a\u4e49\u5728\u5168\u5c40\u8303\u56f4\u5185\u7684\u4ee3\u7801\u8fd0\u884c\u901f\u5ea6\u4f1a\u6bd4\u5b9a\u4e49\u5728\u51fd\u6570\u4e2d\u7684\u6162\u4e0d\u5c11\u3002\u901a\u8fc7\u5c06\u811a\u672c\u8bed\u53e5\u653e\u5165\u5230\u51fd\u6570\u4e2d\uff0c\u901a\u5e38\u53ef\u5e26\u6765 15% - 30% \u7684\u901f\u5ea6\u63d0\u5347\u3002 \u907f\u514d\u5c5e\u6027\u8bbf\u95ee \u6bcf\u6b21\u4f7f\u7528.\uff08\u5c5e\u6027\u8bbf\u95ee\u64cd\u4f5c\u7b26\u65f6\uff09\u4f1a\u89e6\u53d1\u7279\u5b9a\u7684\u65b9\u6cd5\uff0c\u5982__getattribute__()\u548c__getattr__()\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u4f1a\u8fdb\u884c\u5b57\u5178\u64cd\u4f5c\uff0c\u56e0\u6b64\u4f1a\u5e26\u6765\u989d\u5916\u7684\u65f6\u95f4\u5f00\u9500\u3002\u901a\u8fc7from import\u8bed\u53e5\uff0c\u53ef\u4ee5\u6d88\u9664\u5c5e\u6027\u8bbf\u95ee\u3002 \u907f\u514d\u65e0\u7528\u7684\u6570\u636e\u590d\u5236 \u4ea4\u6362\u503c\u65f6\u4e0d\u4f7f\u7528\u4e2d\u95f4\u53d8\u91cf,\u4f7f\u7528\uff1aa,b = b,a \u5b57\u7b26\u4e32\u62fc\u63a5\u7528join\u800c\u4e0d\u662f+ \u5f53\u4f7f\u7528a + b\u62fc\u63a5\u5b57\u7b26\u4e32\u65f6\uff0c\u7531\u4e8e Python \u4e2d\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff0c\u5176\u4f1a\u7533\u8bf7\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\uff0c\u5c06a\u548cb\u5206\u522b\u590d\u5236\u5230\u8be5\u65b0\u7533\u8bf7\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\u3002\u56e0\u6b64\uff0c\u5982\u679c\u8981\u62fc\u63a5 n \u4e2a\u5b57\u7b26\u4e32\uff0c\u4f1a\u4ea7\u751f n-1 \u4e2a\u4e2d\u95f4\u7ed3\u679c\uff0c\u6bcf\u4ea7\u751f\u4e00\u4e2a\u4e2d\u95f4\u7ed3\u679c\u90fd\u9700\u8981\u7533\u8bf7\u548c\u590d\u5236\u4e00\u6b21\u5185\u5b58\uff0c\u4e25\u91cd\u5f71\u54cd\u8fd0\u884c\u6548\u7387\u3002\u800c\u4f7f\u7528join()\u62fc\u63a5\u5b57\u7b26\u4e32\u65f6\uff0c\u4f1a\u9996\u5148\u8ba1\u7b97\u51fa\u9700\u8981\u7533\u8bf7\u7684\u603b\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u7136\u540e\u4e00\u6b21\u6027\u5730\u7533\u8bf7\u6240\u9700\u5185\u5b58\uff0c\u5e76\u5c06\u6bcf\u4e2a\u5b57\u7b26\u4e32\u5143\u7d20\u590d\u5236\u5230\u8be5\u5185\u5b58\u4e2d\u53bb\u3002 \u7528for\u5faa\u73af\u4ee3\u66ffwhile\u5faa\u73af \u4f7f\u7528\u9690\u5f0ffor\u5faa\u73af\u4ee3\u66ff\u663e\u5f0ffor\u5faa\u73af \u5f00\u653e\u5c01\u95ed\u539f\u5219\u548c\u4f9d\u8d56\u5012\u7f6e\u539f\u5219 \u5f00\u653e\u5c01\u95ed\u539f\u5219\u4e2d\u7684\u5f00\u653e\u6307\u7684\u662f\u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5c01\u95ed\u6307\u7684\u662f\u5bf9\u4fee\u6539\u5c01\u95ed\u3002\u9700\u6c42\u603b\u662f\u53d8\u5316\u7684\uff0c\u4e1a\u52a1\u65b9\u8fd9\u4e2a\u6708\u8ba9\u4f60\u628a\u6570\u636e\u5b58\u50a8\u5230 MySQL \u6570\u636e\u5e93\u4e2d\uff0c\u4e0b\u4e2a\u6708\u5c31\u6709\u53ef\u80fd\u8ba9\u4f60\u5bfc\u51fa\u5230 Excel \u8868\u683c\u91cc\uff0c\u8fd9\u65f6\u5019\u4f60\u5c31\u5f97\u6539\u4ee3\u7801\u4e86\u3002\u8fd9\u4e2a\u573a\u666f\u548c\u4e0a\u9762\u7684\u5355\u4e00\u804c\u8d23\u539f\u5219\u5f88\u76f8\u4f3c\uff0c\u540c\u6837\u9762\u4e34\u4ee3\u7801\u6539\u52a8\uff0c\u5355\u4e00\u804c\u8d23\u539f\u5219\u793a\u4f8b\u4e3b\u8981\u8868\u8fbe\u7684\u662f\u901a\u8fc7\u89e3\u8026\u964d\u4f4e\u6539\u52a8\u7684\u5f71\u54cd\uff0c\u8fd9\u91cc\u4e3b\u8981\u8868\u8fbe\u7684\u662f\u901a\u8fc7\u5bf9\u6269\u5c55\u5f00\u653e\u3001\u5bf9\u4fee\u6539\u5c01\u95ed\u63d0\u9ad8\u7a0b\u5e8f\u5e94\u5bf9\u53d8\u5316\u7684\u80fd\u529b\u548c\u63d0\u9ad8\u7a0b\u5e8f\u7a33\u5b9a\u6027\u3002 \u8f83\u5c11\u7684\u6539\u52a8\u6216\u8005\u4e0d\u6539\u52a8\u5373\u89c6\u4e3a\u7a33\u5b9a\uff0c\u7a33\u5b9a\u610f\u5473\u7740\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684\u5176\u5b83\u4ee3\u7801\u62ff\u5230\u7684\u7ed3\u679c\u662f\u53ef\u4ee5\u786e\u5b9a\u7684\uff0c\u6574\u4f53\u662f\u7a33\u5b9a\u7684\u3002 \u6311\u80a5\u62e3\u7626\u7684\u63a5\u53e3\u9694\u79bb\u539f\u5219 \u63a5\u53e3\u9694\u79bb\u539f\u5219\u4e2d\u7684\u63a5\u53e3\u6307\u7684\u662f Interface\uff0c\u800c\u4e0d\u662f Web \u5e94\u7528\u91cc\u9762\u7684 Restful \u63a5\u53e3\uff0c\u4f46\u662f\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u53ef\u4ee5\u5c06\u5176\u62bd\u8c61\u7406\u89e3\u4e3a\u76f8\u540c\u7684\u5bf9\u8c61\u3002\u63a5\u53e3\u9694\u79bb\u539f\u5219\u5728\u8bbe\u8ba1\u5c42\u9762\u770b\uff0c\u8ddf\u5355\u4e00\u804c\u8d23\u539f\u5219\u7684\u76ee\u7684\u662f\u4e00\u81f4\u7684\u3002\u63a5\u53e3\u9694\u79bb\u539f\u5219\u7684\u6307\u5bfc\u601d\u60f3\u662f\uff1a \u8c03\u7528\u65b9\u4e0d\u5e94\u8be5\u4f9d\u8d56\u5b83\u4e0d\u9700\u8981\u7684\u63a5\u53e3\uff1b \u4f9d\u8d56\u5173\u7cfb\u5e94\u5f53\u5efa\u7acb\u5728\u6700\u5c0f\u63a5\u53e3\u4e0a\uff1b","title":"4.\u4f18\u5316"},{"location":"python/4.%E4%BC%98%E5%8C%96/#_1","text":"\u7531\u4e8e\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u5b9e\u73b0\u65b9\u5f0f\u4e0d\u540c\uff0c\u5b9a\u4e49\u5728\u5168\u5c40\u8303\u56f4\u5185\u7684\u4ee3\u7801\u8fd0\u884c\u901f\u5ea6\u4f1a\u6bd4\u5b9a\u4e49\u5728\u51fd\u6570\u4e2d\u7684\u6162\u4e0d\u5c11\u3002\u901a\u8fc7\u5c06\u811a\u672c\u8bed\u53e5\u653e\u5165\u5230\u51fd\u6570\u4e2d\uff0c\u901a\u5e38\u53ef\u5e26\u6765 15% - 30% \u7684\u901f\u5ea6\u63d0\u5347\u3002","title":"\u907f\u514d\u5168\u5c40\u53d8\u91cf"},{"location":"python/4.%E4%BC%98%E5%8C%96/#_2","text":"\u6bcf\u6b21\u4f7f\u7528.\uff08\u5c5e\u6027\u8bbf\u95ee\u64cd\u4f5c\u7b26\u65f6\uff09\u4f1a\u89e6\u53d1\u7279\u5b9a\u7684\u65b9\u6cd5\uff0c\u5982__getattribute__()\u548c__getattr__()\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u4f1a\u8fdb\u884c\u5b57\u5178\u64cd\u4f5c\uff0c\u56e0\u6b64\u4f1a\u5e26\u6765\u989d\u5916\u7684\u65f6\u95f4\u5f00\u9500\u3002\u901a\u8fc7from import\u8bed\u53e5\uff0c\u53ef\u4ee5\u6d88\u9664\u5c5e\u6027\u8bbf\u95ee\u3002","title":"\u907f\u514d\u5c5e\u6027\u8bbf\u95ee"},{"location":"python/4.%E4%BC%98%E5%8C%96/#_3","text":"\u4ea4\u6362\u503c\u65f6\u4e0d\u4f7f\u7528\u4e2d\u95f4\u53d8\u91cf,\u4f7f\u7528\uff1aa,b = b,a \u5b57\u7b26\u4e32\u62fc\u63a5\u7528join\u800c\u4e0d\u662f+ \u5f53\u4f7f\u7528a + b\u62fc\u63a5\u5b57\u7b26\u4e32\u65f6\uff0c\u7531\u4e8e Python \u4e2d\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff0c\u5176\u4f1a\u7533\u8bf7\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\uff0c\u5c06a\u548cb\u5206\u522b\u590d\u5236\u5230\u8be5\u65b0\u7533\u8bf7\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\u3002\u56e0\u6b64\uff0c\u5982\u679c\u8981\u62fc\u63a5 n \u4e2a\u5b57\u7b26\u4e32\uff0c\u4f1a\u4ea7\u751f n-1 \u4e2a\u4e2d\u95f4\u7ed3\u679c\uff0c\u6bcf\u4ea7\u751f\u4e00\u4e2a\u4e2d\u95f4\u7ed3\u679c\u90fd\u9700\u8981\u7533\u8bf7\u548c\u590d\u5236\u4e00\u6b21\u5185\u5b58\uff0c\u4e25\u91cd\u5f71\u54cd\u8fd0\u884c\u6548\u7387\u3002\u800c\u4f7f\u7528join()\u62fc\u63a5\u5b57\u7b26\u4e32\u65f6\uff0c\u4f1a\u9996\u5148\u8ba1\u7b97\u51fa\u9700\u8981\u7533\u8bf7\u7684\u603b\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u7136\u540e\u4e00\u6b21\u6027\u5730\u7533\u8bf7\u6240\u9700\u5185\u5b58\uff0c\u5e76\u5c06\u6bcf\u4e2a\u5b57\u7b26\u4e32\u5143\u7d20\u590d\u5236\u5230\u8be5\u5185\u5b58\u4e2d\u53bb\u3002 \u7528for\u5faa\u73af\u4ee3\u66ffwhile\u5faa\u73af \u4f7f\u7528\u9690\u5f0ffor\u5faa\u73af\u4ee3\u66ff\u663e\u5f0ffor\u5faa\u73af","title":"\u907f\u514d\u65e0\u7528\u7684\u6570\u636e\u590d\u5236"},{"location":"python/4.%E4%BC%98%E5%8C%96/#_4","text":"\u5f00\u653e\u5c01\u95ed\u539f\u5219\u4e2d\u7684\u5f00\u653e\u6307\u7684\u662f\u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5c01\u95ed\u6307\u7684\u662f\u5bf9\u4fee\u6539\u5c01\u95ed\u3002\u9700\u6c42\u603b\u662f\u53d8\u5316\u7684\uff0c\u4e1a\u52a1\u65b9\u8fd9\u4e2a\u6708\u8ba9\u4f60\u628a\u6570\u636e\u5b58\u50a8\u5230 MySQL \u6570\u636e\u5e93\u4e2d\uff0c\u4e0b\u4e2a\u6708\u5c31\u6709\u53ef\u80fd\u8ba9\u4f60\u5bfc\u51fa\u5230 Excel \u8868\u683c\u91cc\uff0c\u8fd9\u65f6\u5019\u4f60\u5c31\u5f97\u6539\u4ee3\u7801\u4e86\u3002\u8fd9\u4e2a\u573a\u666f\u548c\u4e0a\u9762\u7684\u5355\u4e00\u804c\u8d23\u539f\u5219\u5f88\u76f8\u4f3c\uff0c\u540c\u6837\u9762\u4e34\u4ee3\u7801\u6539\u52a8\uff0c\u5355\u4e00\u804c\u8d23\u539f\u5219\u793a\u4f8b\u4e3b\u8981\u8868\u8fbe\u7684\u662f\u901a\u8fc7\u89e3\u8026\u964d\u4f4e\u6539\u52a8\u7684\u5f71\u54cd\uff0c\u8fd9\u91cc\u4e3b\u8981\u8868\u8fbe\u7684\u662f\u901a\u8fc7\u5bf9\u6269\u5c55\u5f00\u653e\u3001\u5bf9\u4fee\u6539\u5c01\u95ed\u63d0\u9ad8\u7a0b\u5e8f\u5e94\u5bf9\u53d8\u5316\u7684\u80fd\u529b\u548c\u63d0\u9ad8\u7a0b\u5e8f\u7a33\u5b9a\u6027\u3002 \u8f83\u5c11\u7684\u6539\u52a8\u6216\u8005\u4e0d\u6539\u52a8\u5373\u89c6\u4e3a\u7a33\u5b9a\uff0c\u7a33\u5b9a\u610f\u5473\u7740\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684\u5176\u5b83\u4ee3\u7801\u62ff\u5230\u7684\u7ed3\u679c\u662f\u53ef\u4ee5\u786e\u5b9a\u7684\uff0c\u6574\u4f53\u662f\u7a33\u5b9a\u7684\u3002 \u6311\u80a5\u62e3\u7626\u7684\u63a5\u53e3\u9694\u79bb\u539f\u5219 \u63a5\u53e3\u9694\u79bb\u539f\u5219\u4e2d\u7684\u63a5\u53e3\u6307\u7684\u662f Interface\uff0c\u800c\u4e0d\u662f Web \u5e94\u7528\u91cc\u9762\u7684 Restful \u63a5\u53e3\uff0c\u4f46\u662f\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u53ef\u4ee5\u5c06\u5176\u62bd\u8c61\u7406\u89e3\u4e3a\u76f8\u540c\u7684\u5bf9\u8c61\u3002\u63a5\u53e3\u9694\u79bb\u539f\u5219\u5728\u8bbe\u8ba1\u5c42\u9762\u770b\uff0c\u8ddf\u5355\u4e00\u804c\u8d23\u539f\u5219\u7684\u76ee\u7684\u662f\u4e00\u81f4\u7684\u3002\u63a5\u53e3\u9694\u79bb\u539f\u5219\u7684\u6307\u5bfc\u601d\u60f3\u662f\uff1a \u8c03\u7528\u65b9\u4e0d\u5e94\u8be5\u4f9d\u8d56\u5b83\u4e0d\u9700\u8981\u7684\u63a5\u53e3\uff1b \u4f9d\u8d56\u5173\u7cfb\u5e94\u5f53\u5efa\u7acb\u5728\u6700\u5c0f\u63a5\u53e3\u4e0a\uff1b","title":"\u5f00\u653e\u5c01\u95ed\u539f\u5219\u548c\u4f9d\u8d56\u5012\u7f6e\u539f\u5219"},{"location":"python/fluent-python/1.python%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B/","text":"1.python\u6570\u636e\u6a21\u578b \u6570\u636e\u6a21\u578b\u662f\u5bf9python\u6846\u67b6\u7684\u63cf\u8ff0\uff08\u4e5f\u79f0\u4e3a\u5bf9\u8c61\u6a21\u578b\uff09\u3002 \u901a\u8fc7\u5b9e\u73b0\u7279\u6b8a\u65b9\u6cd5\uff0c\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u8868\u73b0\u5f97\u50cf\u5185\u7f6e\u7c7b\u578b\u4e00\u6837\uff0c\u4ece\u800c\u5199\u51fa\u6709python\u98ce\u683c\u7684\u4ee3\u7801\u3002 \u7279\u6b8a\u65b9\u6cd5\u4f5c\u7528 \u8fed\u4ee3 \u96c6\u5408\u7c7b \u5c5e\u6027\u8bbf\u95ee \u8fd0\u7b97\u7b26\u91cd\u8f7d \u51fd\u6570\u548c\u65b9\u6cd5\u8c03\u7528 \u5bf9\u8c61\u521b\u5efa\u9500\u6bc1 \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 \u7ba1\u7406\u4e0a\u4e0b\u6587","title":"1.python\u6570\u636e\u6a21\u578b"},{"location":"python/fluent-python/1.python%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B/#1python","text":"\u6570\u636e\u6a21\u578b\u662f\u5bf9python\u6846\u67b6\u7684\u63cf\u8ff0\uff08\u4e5f\u79f0\u4e3a\u5bf9\u8c61\u6a21\u578b\uff09\u3002 \u901a\u8fc7\u5b9e\u73b0\u7279\u6b8a\u65b9\u6cd5\uff0c\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u8868\u73b0\u5f97\u50cf\u5185\u7f6e\u7c7b\u578b\u4e00\u6837\uff0c\u4ece\u800c\u5199\u51fa\u6709python\u98ce\u683c\u7684\u4ee3\u7801\u3002 \u7279\u6b8a\u65b9\u6cd5\u4f5c\u7528 \u8fed\u4ee3 \u96c6\u5408\u7c7b \u5c5e\u6027\u8bbf\u95ee \u8fd0\u7b97\u7b26\u91cd\u8f7d \u51fd\u6570\u548c\u65b9\u6cd5\u8c03\u7528 \u5bf9\u8c61\u521b\u5efa\u9500\u6bc1 \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 \u7ba1\u7406\u4e0a\u4e0b\u6587","title":"1.python\u6570\u636e\u6a21\u578b"},{"location":"python/fluent-python/2.%20%E5%88%97%E8%A1%A8/","text":"1.\u5207\u7247 \u5217\u8868\uff0c\u5143\u7ec4\uff0c\u5b57\u7b26\u4e32\u7b49\u90fd\u652f\u6301\u5207\u7247\u64cd\u4f5c s[a:b:c] \u8868\u793a\u5bf9 s \u518d a, b \u533a\u95f4\u5185\u4ee5 c\u4e3a\u95f4\u9694\u8fdb\u884c \u5207\u7247 s[1:2] = [1,2] \u5207\u7247\u8d4b\u503c 2.\u6392\u5e8f list.sort() \u65b9\u6cd5\u5c31\u5730\u6392\u5e8f sorted() \u65b9\u6cd5\u8fd4\u56de\u65b0\u6570\u7ec4 bisect \u6a21\u5757 \u7528\u6765\u7ba1\u7406\u5df2\u6392\u5e8f\u7684\u5e8f\u5217 bisect.insort \u4e8c\u5206\u67e5\u627e\u6cd5\u63d2\u5165\u6570\u636e bisect.bisect \u4e8c\u5206\u67e5\u627e\u6cd5\u67e5\u627e\u6570\u636e 3.\u6570\u7ec4 array.array \u5982\u679c\u53ea\u9700\u8981\u4e00\u4e2a\u5305\u542b\u6570\u5b57\u7684\u5217\u8868\uff0c array.array \u6bd4list \u9ad8\u6548","title":"2. \u5217\u8868"},{"location":"python/fluent-python/2.%20%E5%88%97%E8%A1%A8/#1","text":"\u5217\u8868\uff0c\u5143\u7ec4\uff0c\u5b57\u7b26\u4e32\u7b49\u90fd\u652f\u6301\u5207\u7247\u64cd\u4f5c s[a:b:c] \u8868\u793a\u5bf9 s \u518d a, b \u533a\u95f4\u5185\u4ee5 c\u4e3a\u95f4\u9694\u8fdb\u884c \u5207\u7247 s[1:2] = [1,2] \u5207\u7247\u8d4b\u503c","title":"1.\u5207\u7247"},{"location":"python/fluent-python/2.%20%E5%88%97%E8%A1%A8/#2","text":"list.sort() \u65b9\u6cd5\u5c31\u5730\u6392\u5e8f sorted() \u65b9\u6cd5\u8fd4\u56de\u65b0\u6570\u7ec4 bisect \u6a21\u5757 \u7528\u6765\u7ba1\u7406\u5df2\u6392\u5e8f\u7684\u5e8f\u5217 bisect.insort \u4e8c\u5206\u67e5\u627e\u6cd5\u63d2\u5165\u6570\u636e bisect.bisect \u4e8c\u5206\u67e5\u627e\u6cd5\u67e5\u627e\u6570\u636e","title":"2.\u6392\u5e8f"},{"location":"python/fluent-python/2.%20%E5%88%97%E8%A1%A8/#3-arrayarray","text":"\u5982\u679c\u53ea\u9700\u8981\u4e00\u4e2a\u5305\u542b\u6570\u5b57\u7684\u5217\u8868\uff0c array.array \u6bd4list \u9ad8\u6548","title":"3.\u6570\u7ec4 array.array"},{"location":"python/fluent-python/3.dict%20%E5%92%8Cset/","text":"3.dict \u548cset \u5904\u7406\u627e\u4e0d\u5230\u7684\u952e setdefault collections.defaultdict defaultdict(default_factory)\u628a\u53c2\u6570\u4f5c\u4e3adefault_factory,\u7528\u6765\u6784\u9020\u4e00\u4e2adefaultdict, \u53ea\u4f1a\u5728 getitem \u91cc\u88ab\u8c03\u7528\uff0c\u5728\u5176\u4ed6\u65b9\u6cd5\u91cc\u4e0d\u4f1a\u53d1\u6325\u4f5c\u7528 \u5173\u4e8e setdefault \u7684\u4f8b\u5b50 my_dict = {} my_dict.setdefault('key1', 1) print(my_dict['key1']) print(my_dict.get('key1')) \"\"\"output: 1 1 \"\"\" \u5173\u4e8e defaultdict \u7684\u4f8b\u5b50 import collections my_dict = collections.defaultdict(list) print(my_dict.get('key1')) print(my_dict['key1']) \"\"\"output: None [] \"\"\" \u6240\u6709\u6620\u5c04\u7c7b\u578b\u5728\u65e9\u4e0d\u5230key \u65f6\uff0c\u90fd\u4f1a\u6d89\u53ca\u5230\u7279\u6b8a\u65b9\u6cd5 missing , missing \u53ea\u5bf9 getitem \u6709\u6548,\u5bf9get, contains \u7b49\u6ca1\u6709\u5f71\u54cd dict\u7684\u53d8\u79cd collections.OrderedDict \u6dfb\u52a0\u952e\u7684\u65f6\u5019\u4fdd\u6301\u987a\u5e8f collections.ChainMap \u628a\u591a\u4e2a mappings \u5408\u5e76, \u5982\u679c\u6709\u91cd\u590d\u7684key, \u67e5\u8be2\u65f6\u8fd4\u56de\u7684\u662f\u7b2c\u4e00\u4e2a collections.Counter \u7ed9dict \u51c6\u5907\u4e00\u4e2a \u8ba1\u7b97\u5668\uff0c\u6bcf\u6b21\u66f4\u65b0\u4e00\u6b21key, \u8ba1\u6570\u5668 \u52a01\uff0c\u4f8b\u5982\u7edf\u8ba1\u5b57\u7b26\u4e32\u6bcf\u4e2a\u5b57\u7b26\u7684\u4e2a\u6570 collections.UserDict \u7528\u4e8e\u81ea\u5b9a\u4e49\u6620\u5c04\u7c7b\u578b \u793a\u4f8b\uff1a In [19]: import collections In [20]: my_dict = collections.OrderedDict() In [22]: my_dict['b'] = 1 In [23]: my_dict['a'] = 2 In [24]: my_dict Out[24]: OrderedDict([('b', 1), ('a', 2)]) In [25]: for k, v in my_dict.items(): ...: print(k, v) ...: b 1 a 2 In [1]: import collections In [2]: my_dict = collections.ChainMap({'a': 1}, {'a': 11, 'b': 2}, {'c': 3}) In [3]: my_dict Out[3]: ChainMap({'a': 1}, {'a': 11, 'b': 2}, {'c': 3}) In [4]: my_dict['a'] Out[4]: 1 In [5]: my_dict['b'] Out[5]: 2 In [6]: In [6]: my_dict = collections.Counter('aaabbc') In [8]: my_dict Out[8]: Counter({'a': 3, 'b': 2, 'c': 1}) In [8]: In [9]: my_dict.update(['aaa', 'd', 'c']) In [11]: my_dict Out[11]: Counter({'a': 3, 'b': 2, 'c': 2, 'aaa': 1, 'd': 1}) In [12]: my_dict.most_common() Out[12]: [('a', 3), ('b', 2), ('c', 2), ('aaa', 1), ('d', 1)] In [13]: my_dict['a'] Out[13]: 3 1111111111 In [14]: \u4e0d\u53ef\u53d8\u6620\u5c04\u7c7b\u578b \u6807\u51c6\u5e93\u4e2d\u7684\u6620\u5c04\u7c7b\u578b\u90fd\u662f\u53ef\u53d8\u7684\uff0c\u6709\u65f6\u4e0d\u5e0c\u671b\u7528\u6237\u4fee\u6539\u67d0\u4e2a\u6620\u5c04\u5bf9\u8c61\uff0c\u4ece python3.3 \u5f00\u59cb\uff0ctypes\u6a21\u5757\u5f15\u5165\u4e00\u4e2a\u7c7b MappingProxyType\uff0c\u5b83\u4f1a\u8fd4\u56de\u4e00\u4e2a\u53ea\u8bfb\u89c6\u56fe\uff0c\u7528\u6237\u4fee\u6539\u4f1a\u62a5\u9519 In [1]: import types In [2]: mydict = {'a': 1} In [3]: mydict_proxy = types.MappingProxyType(mydict) In [4]: mydict_proxy Out[4]: mappingproxy({'a': 1}) In [5]: mydict_proxy['a'] = 2 Traceback (most recent call last): File \"<ipython-input-5-ce95580a71dc>\", line 1, in <module> mydict_proxy['a'] = 2 TypeError: 'mappingproxy' object does not support item assignment In [6]: mydict_proxy['b'] = 2 Traceback (most recent call last): File \"<ipython-input-6-66d818660568>\", line 1, in <module> mydict_proxy['b'] = 2 TypeError: 'mappingproxy' object does not support item assignment In [7]: mydict['a'] = 2 In [8]: mydict_proxy Out[8]: mappingproxy({'a': 2}) \u96c6\u5408\u8bed\u6cd5 \u521b\u5efa\u975e\u7a7a\u96c6\u5408 mydict = {1\uff0c2\uff0c3} \u521b\u5efa\u7a7a\u96c6\u5408 set() \u6216\u8005 {1\uff0c2\uff0c3} dict \u548cset \u6548\u7387\u6709\u591a\u9ad8 \u4e3a\u4ec0\u4e48\u4ed6\u4eec\u662f\u65e0\u5e8f\u7684 \u4e3a\u4ec0\u4e48\u4e0d\u662f\u6240\u6709\u7684\u5bf9\u8c61\u90fd\u53ef\u4ee5\u4f5c\u4e3adict \u7684\u952e\u6216set \u7684\u5143\u7d20 \u4e3a\u4ec0\u4e48\u4ed6\u4eec\u7684\u987a\u5e8f\u662f\u6839\u636e\u6dfb\u52a0\u7684\u987a\u5e8f\u51b3\u5b9a\u7684\uff0c\u5728\u4ed6\u4eec\u7684\u751f\u547d\u8d70\u8d77\u5185\uff0c\u987a\u5e8f\u4e0d\u662f\u4e00\u6210\u4e0d\u53d8\u7684 \u4e3a\u4ec0\u4e48\u4e0d\u5e94\u8be5\u5728 \u8fed\u4ee3\u7684\u540c\u65f6\u5f80\u91cc\u6dfb\u52a0\u5143\u7d20 dict \u548c set \u5b9e\u73b0\u65b9\u6cd5\u90fd\u662f\u6563\u5217\u8868\uff0c\uff08\u6563\u5217\u8868\u5176\u5b9e\u662f\u4e00\u4e2a\u7a00\u758f\u6570\u7ec4\uff0c\u6563\u5217\u8868\u4e2d\u7684\u5355\u5143\u901a\u5e38\u53eb\u505a\u8868\u5143\uff09 dict \u7684\u6bcf\u4e2a\u952e\u503c\u5bf9\u4f5c\u4e3a\u4e00\u4e2a\u8868\u5143\uff0c\u4e00\u4e2a\u662f\u952e\u7684\u5f15\u7528\uff0c\u4e00\u4e2a\u662f\u662f\u503c\u7684\u5f15\u7528 \u56e0\u4e3a\u8868\u5143\u5927\u5c0f\u4e00\u81f4\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7 \u504f\u79fb\u91cf\u6765\u83b7\u53d6\u67d0\u4e2a\u8868\u5143 \u5982\u679c\u8981\u6dfb\u52a0\u4e00\u4e2a \u5bf9\u8c61\u5230\u6563\u5217\u8868\u4e2d\uff0c\u9700\u8981\u5148\u8ba1\u7b97 \u952e\u7684\u6570\u5217\u503c\uff08python\u4f7f\u7528hash()\uff09\u3002\u4e24\u4e2a\u5bf9\u8c61\u76f8\u7b49\uff0chash\u4e5f\u5fc5\u987b\u8981\u76f8\u7b49 \u6563\u5217\u8868\u7b97\u6cd5\uff1a flowchart LR \u8ba1\u7b97\u952e\u7684\\n\u6563\u5217\u503c --> \u4f7f\u7528\u6563\u5217\u503c\u7684\\n\u4e00\u90e8\u5206\u5b9a\u4f4d\u8868\u5143 --> A{\u8868\u5143\u4e3a\u7a7a?} subgraph \u67e5\u8be2\u8868\u5143\u7684\u503c A --> |no| B{\u952e\u76f8\u7b49?} --> |no|\u4f7f\u7528\u6563\u5217\u503c\u7684\u53e6\u4e00\u90e8\u5206\\n\u5b9a\u4f4d\u6563\u5217\u8868\u7684\u53e6\u4e00\u884c --> A end A --> |yes| \u629b\u51faError:::e B --> |yes| \u8fd4\u56de\u8868\u5143\u7684\u503c:::s classDef s fill:green,color:white classDef e fill:red,color:white dict\u7684\u5b9e\u73b0\u5bfc\u81f4\u7684\u7ed3\u679c \u952e\u5fc5\u987b\u662f\u53ef\u6563\u5217\u7684 \u5b57\u5178\u7684\u5185\u5b58\u5f00\u9500\u5f88\u5927\uff08\u6563\u5217\u8868\u662f\u7a00\u758f\u7684\uff0c\u5185\u5b58\u7a7a\u95f4\u5229\u7528\u7387\u4f4e\uff09 \u952e\u67e5\u8be2\u5f88\u5feb\uff08\u4ee5\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u63d0\u4f9b\u4e86\u65e0\u89c6\u6570\u636e\u91cf\u5927\u5c0f\u7684\u5feb\u901f\u8bbf\u95ee\uff0c\u4e00\u5343\u4e07\u4e2a\u5143\u7d20\u7684\u5b57\u5178\uff0c\u6bcf\u79d2\u80fd\u8fdb\u884c200\u4e2a\u952e\u67e5\u8be2\uff09 \u952e\u7684\u987a\u5e8f\u53d6\u51b3\u4e8e\u6dfb\u52a0\u7684\u987a\u5e8f \u5f80\u5b57\u5178\u8fde\u6dfb\u52a0\u65b0\u952e\uff0c\u53ef\u80fd\u4f1a\u6539\u53d8\u5df2\u6709\u7684\u952e\u7684\u987a\u5e8f \u200b dict \u7684\u5b9e\u73b0 \u5bfc\u81f4\u7684\u7ed3\u679c\u540c\u6837\u9002\u7528\u4e8e set","title":"3.dict \u548cset"},{"location":"python/fluent-python/3.dict%20%E5%92%8Cset/#3dict-set","text":"","title":"3.dict \u548cset"},{"location":"python/fluent-python/3.dict%20%E5%92%8Cset/#_1","text":"setdefault collections.defaultdict defaultdict(default_factory)\u628a\u53c2\u6570\u4f5c\u4e3adefault_factory,\u7528\u6765\u6784\u9020\u4e00\u4e2adefaultdict, \u53ea\u4f1a\u5728 getitem \u91cc\u88ab\u8c03\u7528\uff0c\u5728\u5176\u4ed6\u65b9\u6cd5\u91cc\u4e0d\u4f1a\u53d1\u6325\u4f5c\u7528 \u5173\u4e8e setdefault \u7684\u4f8b\u5b50 my_dict = {} my_dict.setdefault('key1', 1) print(my_dict['key1']) print(my_dict.get('key1')) \"\"\"output: 1 1 \"\"\" \u5173\u4e8e defaultdict \u7684\u4f8b\u5b50 import collections my_dict = collections.defaultdict(list) print(my_dict.get('key1')) print(my_dict['key1']) \"\"\"output: None [] \"\"\" \u6240\u6709\u6620\u5c04\u7c7b\u578b\u5728\u65e9\u4e0d\u5230key \u65f6\uff0c\u90fd\u4f1a\u6d89\u53ca\u5230\u7279\u6b8a\u65b9\u6cd5 missing , missing \u53ea\u5bf9 getitem \u6709\u6548,\u5bf9get, contains \u7b49\u6ca1\u6709\u5f71\u54cd","title":"\u5904\u7406\u627e\u4e0d\u5230\u7684\u952e"},{"location":"python/fluent-python/3.dict%20%E5%92%8Cset/#dict","text":"collections.OrderedDict \u6dfb\u52a0\u952e\u7684\u65f6\u5019\u4fdd\u6301\u987a\u5e8f collections.ChainMap \u628a\u591a\u4e2a mappings \u5408\u5e76, \u5982\u679c\u6709\u91cd\u590d\u7684key, \u67e5\u8be2\u65f6\u8fd4\u56de\u7684\u662f\u7b2c\u4e00\u4e2a collections.Counter \u7ed9dict \u51c6\u5907\u4e00\u4e2a \u8ba1\u7b97\u5668\uff0c\u6bcf\u6b21\u66f4\u65b0\u4e00\u6b21key, \u8ba1\u6570\u5668 \u52a01\uff0c\u4f8b\u5982\u7edf\u8ba1\u5b57\u7b26\u4e32\u6bcf\u4e2a\u5b57\u7b26\u7684\u4e2a\u6570 collections.UserDict \u7528\u4e8e\u81ea\u5b9a\u4e49\u6620\u5c04\u7c7b\u578b \u793a\u4f8b\uff1a In [19]: import collections In [20]: my_dict = collections.OrderedDict() In [22]: my_dict['b'] = 1 In [23]: my_dict['a'] = 2 In [24]: my_dict Out[24]: OrderedDict([('b', 1), ('a', 2)]) In [25]: for k, v in my_dict.items(): ...: print(k, v) ...: b 1 a 2 In [1]: import collections In [2]: my_dict = collections.ChainMap({'a': 1}, {'a': 11, 'b': 2}, {'c': 3}) In [3]: my_dict Out[3]: ChainMap({'a': 1}, {'a': 11, 'b': 2}, {'c': 3}) In [4]: my_dict['a'] Out[4]: 1 In [5]: my_dict['b'] Out[5]: 2 In [6]: In [6]: my_dict = collections.Counter('aaabbc') In [8]: my_dict Out[8]: Counter({'a': 3, 'b': 2, 'c': 1}) In [8]: In [9]: my_dict.update(['aaa', 'd', 'c']) In [11]: my_dict Out[11]: Counter({'a': 3, 'b': 2, 'c': 2, 'aaa': 1, 'd': 1}) In [12]: my_dict.most_common() Out[12]: [('a', 3), ('b', 2), ('c', 2), ('aaa', 1), ('d', 1)] In [13]: my_dict['a'] Out[13]: 3 1111111111 In [14]:","title":"dict\u7684\u53d8\u79cd"},{"location":"python/fluent-python/3.dict%20%E5%92%8Cset/#_2","text":"\u6807\u51c6\u5e93\u4e2d\u7684\u6620\u5c04\u7c7b\u578b\u90fd\u662f\u53ef\u53d8\u7684\uff0c\u6709\u65f6\u4e0d\u5e0c\u671b\u7528\u6237\u4fee\u6539\u67d0\u4e2a\u6620\u5c04\u5bf9\u8c61\uff0c\u4ece python3.3 \u5f00\u59cb\uff0ctypes\u6a21\u5757\u5f15\u5165\u4e00\u4e2a\u7c7b MappingProxyType\uff0c\u5b83\u4f1a\u8fd4\u56de\u4e00\u4e2a\u53ea\u8bfb\u89c6\u56fe\uff0c\u7528\u6237\u4fee\u6539\u4f1a\u62a5\u9519 In [1]: import types In [2]: mydict = {'a': 1} In [3]: mydict_proxy = types.MappingProxyType(mydict) In [4]: mydict_proxy Out[4]: mappingproxy({'a': 1}) In [5]: mydict_proxy['a'] = 2 Traceback (most recent call last): File \"<ipython-input-5-ce95580a71dc>\", line 1, in <module> mydict_proxy['a'] = 2 TypeError: 'mappingproxy' object does not support item assignment In [6]: mydict_proxy['b'] = 2 Traceback (most recent call last): File \"<ipython-input-6-66d818660568>\", line 1, in <module> mydict_proxy['b'] = 2 TypeError: 'mappingproxy' object does not support item assignment In [7]: mydict['a'] = 2 In [8]: mydict_proxy Out[8]: mappingproxy({'a': 2})","title":"\u4e0d\u53ef\u53d8\u6620\u5c04\u7c7b\u578b"},{"location":"python/fluent-python/3.dict%20%E5%92%8Cset/#_3","text":"\u521b\u5efa\u975e\u7a7a\u96c6\u5408 mydict = {1\uff0c2\uff0c3} \u521b\u5efa\u7a7a\u96c6\u5408 set() \u6216\u8005 {1\uff0c2\uff0c3} dict \u548cset \u6548\u7387\u6709\u591a\u9ad8 \u4e3a\u4ec0\u4e48\u4ed6\u4eec\u662f\u65e0\u5e8f\u7684 \u4e3a\u4ec0\u4e48\u4e0d\u662f\u6240\u6709\u7684\u5bf9\u8c61\u90fd\u53ef\u4ee5\u4f5c\u4e3adict \u7684\u952e\u6216set \u7684\u5143\u7d20 \u4e3a\u4ec0\u4e48\u4ed6\u4eec\u7684\u987a\u5e8f\u662f\u6839\u636e\u6dfb\u52a0\u7684\u987a\u5e8f\u51b3\u5b9a\u7684\uff0c\u5728\u4ed6\u4eec\u7684\u751f\u547d\u8d70\u8d77\u5185\uff0c\u987a\u5e8f\u4e0d\u662f\u4e00\u6210\u4e0d\u53d8\u7684 \u4e3a\u4ec0\u4e48\u4e0d\u5e94\u8be5\u5728 \u8fed\u4ee3\u7684\u540c\u65f6\u5f80\u91cc\u6dfb\u52a0\u5143\u7d20 dict \u548c set \u5b9e\u73b0\u65b9\u6cd5\u90fd\u662f\u6563\u5217\u8868\uff0c\uff08\u6563\u5217\u8868\u5176\u5b9e\u662f\u4e00\u4e2a\u7a00\u758f\u6570\u7ec4\uff0c\u6563\u5217\u8868\u4e2d\u7684\u5355\u5143\u901a\u5e38\u53eb\u505a\u8868\u5143\uff09 dict \u7684\u6bcf\u4e2a\u952e\u503c\u5bf9\u4f5c\u4e3a\u4e00\u4e2a\u8868\u5143\uff0c\u4e00\u4e2a\u662f\u952e\u7684\u5f15\u7528\uff0c\u4e00\u4e2a\u662f\u662f\u503c\u7684\u5f15\u7528 \u56e0\u4e3a\u8868\u5143\u5927\u5c0f\u4e00\u81f4\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7 \u504f\u79fb\u91cf\u6765\u83b7\u53d6\u67d0\u4e2a\u8868\u5143 \u5982\u679c\u8981\u6dfb\u52a0\u4e00\u4e2a \u5bf9\u8c61\u5230\u6563\u5217\u8868\u4e2d\uff0c\u9700\u8981\u5148\u8ba1\u7b97 \u952e\u7684\u6570\u5217\u503c\uff08python\u4f7f\u7528hash()\uff09\u3002\u4e24\u4e2a\u5bf9\u8c61\u76f8\u7b49\uff0chash\u4e5f\u5fc5\u987b\u8981\u76f8\u7b49 \u6563\u5217\u8868\u7b97\u6cd5\uff1a flowchart LR \u8ba1\u7b97\u952e\u7684\\n\u6563\u5217\u503c --> \u4f7f\u7528\u6563\u5217\u503c\u7684\\n\u4e00\u90e8\u5206\u5b9a\u4f4d\u8868\u5143 --> A{\u8868\u5143\u4e3a\u7a7a?} subgraph \u67e5\u8be2\u8868\u5143\u7684\u503c A --> |no| B{\u952e\u76f8\u7b49?} --> |no|\u4f7f\u7528\u6563\u5217\u503c\u7684\u53e6\u4e00\u90e8\u5206\\n\u5b9a\u4f4d\u6563\u5217\u8868\u7684\u53e6\u4e00\u884c --> A end A --> |yes| \u629b\u51faError:::e B --> |yes| \u8fd4\u56de\u8868\u5143\u7684\u503c:::s classDef s fill:green,color:white classDef e fill:red,color:white dict\u7684\u5b9e\u73b0\u5bfc\u81f4\u7684\u7ed3\u679c \u952e\u5fc5\u987b\u662f\u53ef\u6563\u5217\u7684 \u5b57\u5178\u7684\u5185\u5b58\u5f00\u9500\u5f88\u5927\uff08\u6563\u5217\u8868\u662f\u7a00\u758f\u7684\uff0c\u5185\u5b58\u7a7a\u95f4\u5229\u7528\u7387\u4f4e\uff09 \u952e\u67e5\u8be2\u5f88\u5feb\uff08\u4ee5\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u63d0\u4f9b\u4e86\u65e0\u89c6\u6570\u636e\u91cf\u5927\u5c0f\u7684\u5feb\u901f\u8bbf\u95ee\uff0c\u4e00\u5343\u4e07\u4e2a\u5143\u7d20\u7684\u5b57\u5178\uff0c\u6bcf\u79d2\u80fd\u8fdb\u884c200\u4e2a\u952e\u67e5\u8be2\uff09 \u952e\u7684\u987a\u5e8f\u53d6\u51b3\u4e8e\u6dfb\u52a0\u7684\u987a\u5e8f \u5f80\u5b57\u5178\u8fde\u6dfb\u52a0\u65b0\u952e\uff0c\u53ef\u80fd\u4f1a\u6539\u53d8\u5df2\u6709\u7684\u952e\u7684\u987a\u5e8f \u200b dict \u7684\u5b9e\u73b0 \u5bfc\u81f4\u7684\u7ed3\u679c\u540c\u6837\u9002\u7528\u4e8e set","title":"\u96c6\u5408\u8bed\u6cd5"},{"location":"python/fluent-python/4.%E6%96%87%E6%9C%AC%E5%92%8C%E5%AD%97%E8%8A%82%E5%BA%8F%E5%88%97/","text":"1.\u5b57\u7b26 \u5b57\u7b26\u7684\u6807\u8bc6\uff0c\u5373\u7801\u4f4d \u5b57\u7b26\u7684\u5177\u4f53\u8868\u8ff0\u53d6\u51b3\u4e8e \u7f16\u7801\u3002\u7f16\u7801 \u5c31\u662f\u7801\u4f4d\u548c\u5b57\u8282\u5e8f\u5217\u4e4b\u95f4\u8f6c\u6362\u662f\u4f7f\u7528\u7684\u7b97\u6cd5\u3002 \u7f16\u7801: \u7801\u4f4d -> \u5b57\u8282\u5e8f\u5217 In [59]: b = '\u4f60\u597d\uff0cpython'.encode() In [60]: b Out[60]: b'\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd\\xef\\xbc\\x8cpython' \u89e3\u7801\uff1a\u5b57\u8282\u5e8f\u5217 - > \u7801\u4f4d bytes.decode('utf8') In [61]: b.decode() Out[61]: '\u4f60\u597d\uff0cpython' 2.\u5b57\u8282 bytes bytearray \u6784\u5efa\u65b9\u6cd5 bytes\u6784\u9020\u51fd\u6570\uff1astr \u7c7b\u578b+encoding \u7c7b\u578b In [76]: bytes('\u4f60\u597d\uff0cpython', encoding='utf8') \u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u63d0\u4f9b\u4e00\u4e2a0~255 \u4e4b\u95f4\u7684\u503c In [62]: b_arr = bytearray(b) In [63]: b_array Out[63]: bytearray(b'\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd\\xef\\xbc\\x8cpython') \u7f16\u7801\u9519\u8bef\u7684\u5904\u7406\u65b9\u6cd5 \u5f53 encode() \u65b9\u6cd5\u65e0\u6cd5\u7f16\u7801\u67d0\u4e2a\u7279\u6b8a\u5b57\u7b26\u662f\uff0c\u9ed8\u8ba4\u629b\u51fa\u5f02\u5e38 UnicodeEcodeError \u4f7f\u7528errors=ignore \u8df3\u8fc7\u5f02\u5e38 encode('cp437', errors='ignore')\uff08\u5b57\u7b26\u7f3a\u5931\uff0c\u4e0d\u59a5\uff09 \u4f7f\u7528 errors='replace',\u65e0\u6cd5\u7f16\u7801\u7684\u7528 ? \u66ff\u6362 \u4f7f\u7528 errors='xmlcharrefreloace' ,\u65e0\u6cd5\u7f16\u7801\u7684\u5b57\u7b26\u66ff\u6362\u4e3a xml \u5b9e\u4f53 4.\u89e3\u7801\u9519\u8bef\u7684\u5904\u7406\u65b9\u6cd5 \u4e0d\u662f\u6bcf\u4e2a\u5b57\u8282\u90fd\u5305\u542b \u6709\u6548\u7684ASCII \u5b57\u7b26 decode \u9047\u5230\u65e0\u6cd5\u89e3\u7801\u7684\u5b57\u8282\uff0c\u9ed8\u8ba4\u629b\u51fa UnicodeDecodeError \u4f7f\u7528errors='ignore' \u4f7f\u7528errors='replace',\u65e0\u6cd5\u89e3\u7801\u7684\u88ab\u66ff\u6362\u4e3a In [103]: b'\\xe9'.decode('utf8', errors='ignore') Out[103]: '' In [104]: b'\\xe9'.decode('utf8', errors='replace') Out[104]: ' ' 5.\u5904\u7406\u6587\u672c\u7684\u6700\u4f73\u5b9e\u8df5 Unicode\u4e09\u660e\u6cbb \u8bfb\u5199\u6587\u4ef6\u663e\u793a\u6307\u5b9a encoding=\u53c2\u6570\uff0c\u4e0d\u8981\u4f9d\u8d56\u9ed8\u8ba4\u7684\u7f16\u7801/\u89e3\u7801\u65b9\u5f0f 6.os \u6a21\u5757\u4e2d\u7684\u5b57\u7b26\u4e32\u548c\u5b57\u8282\u5e8f\u5217 os.listdir \u652f\u6301 \u5b57\u7b26\u4e32 \u548c\u5b57\u8282\u5e8f\u5217\u4f5c\u4e3a\u53c2\u6570\uff08\u53cc\u6a21\u5f0fAPI,\u4f8b\u5982 re.complite(rb'xxx')\uff09 In [138]: os.listdir('g:/.') Out[138]: ['wsl_update_x64.msi', '\u65e5\u8bed'] In [139]: os.listdir(b'g:/.') Out[139]: [b'wsl_update_x64.msi', b'\\xe6\\x97\\xa5\\xe8\\xaf\\xad'] \u8fd9\u4e00\u7279\u6027\u5141\u8bb8\u6211\u4eec\u5904\u7406\u4efb\u4f55\u7684\u5b57\u7b26\u4e32\uff0c\u4e0d\u7ba1\u6709\u591a\u5c11\u9b3c\u7b26 os.fsencode \u5982\u679cfilename \u662f str \u7c7b\u578b\uff0c\u8f6c\u5316\u4e3a bytes(\u4f7f\u7528 sys.getfilesystemencoding() \u7684\u7f16\u89e3\u7801\u5668) os.fsdecode \u5982\u679cfilename \u662f bytes \u7c7b\u578b\uff0c\u8f6c\u5316\u4e3a str\uff08\u4f7f\u7528 sys.getfilesystemencoding() \u7684\u7f16\u89e3\u7801\u5668\uff09","title":"4.\u6587\u672c\u548c\u5b57\u8282\u5e8f\u5217"},{"location":"python/fluent-python/4.%E6%96%87%E6%9C%AC%E5%92%8C%E5%AD%97%E8%8A%82%E5%BA%8F%E5%88%97/#1","text":"\u5b57\u7b26\u7684\u6807\u8bc6\uff0c\u5373\u7801\u4f4d \u5b57\u7b26\u7684\u5177\u4f53\u8868\u8ff0\u53d6\u51b3\u4e8e \u7f16\u7801\u3002\u7f16\u7801 \u5c31\u662f\u7801\u4f4d\u548c\u5b57\u8282\u5e8f\u5217\u4e4b\u95f4\u8f6c\u6362\u662f\u4f7f\u7528\u7684\u7b97\u6cd5\u3002 \u7f16\u7801: \u7801\u4f4d -> \u5b57\u8282\u5e8f\u5217 In [59]: b = '\u4f60\u597d\uff0cpython'.encode() In [60]: b Out[60]: b'\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd\\xef\\xbc\\x8cpython' \u89e3\u7801\uff1a\u5b57\u8282\u5e8f\u5217 - > \u7801\u4f4d bytes.decode('utf8') In [61]: b.decode() Out[61]: '\u4f60\u597d\uff0cpython'","title":"1.\u5b57\u7b26"},{"location":"python/fluent-python/4.%E6%96%87%E6%9C%AC%E5%92%8C%E5%AD%97%E8%8A%82%E5%BA%8F%E5%88%97/#2","text":"bytes bytearray \u6784\u5efa\u65b9\u6cd5 bytes\u6784\u9020\u51fd\u6570\uff1astr \u7c7b\u578b+encoding \u7c7b\u578b In [76]: bytes('\u4f60\u597d\uff0cpython', encoding='utf8') \u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u63d0\u4f9b\u4e00\u4e2a0~255 \u4e4b\u95f4\u7684\u503c In [62]: b_arr = bytearray(b) In [63]: b_array Out[63]: bytearray(b'\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd\\xef\\xbc\\x8cpython') \u7f16\u7801\u9519\u8bef\u7684\u5904\u7406\u65b9\u6cd5 \u5f53 encode() \u65b9\u6cd5\u65e0\u6cd5\u7f16\u7801\u67d0\u4e2a\u7279\u6b8a\u5b57\u7b26\u662f\uff0c\u9ed8\u8ba4\u629b\u51fa\u5f02\u5e38 UnicodeEcodeError \u4f7f\u7528errors=ignore \u8df3\u8fc7\u5f02\u5e38 encode('cp437', errors='ignore')\uff08\u5b57\u7b26\u7f3a\u5931\uff0c\u4e0d\u59a5\uff09 \u4f7f\u7528 errors='replace',\u65e0\u6cd5\u7f16\u7801\u7684\u7528 ? \u66ff\u6362 \u4f7f\u7528 errors='xmlcharrefreloace' ,\u65e0\u6cd5\u7f16\u7801\u7684\u5b57\u7b26\u66ff\u6362\u4e3a xml \u5b9e\u4f53","title":"2.\u5b57\u8282"},{"location":"python/fluent-python/4.%E6%96%87%E6%9C%AC%E5%92%8C%E5%AD%97%E8%8A%82%E5%BA%8F%E5%88%97/#4","text":"\u4e0d\u662f\u6bcf\u4e2a\u5b57\u8282\u90fd\u5305\u542b \u6709\u6548\u7684ASCII \u5b57\u7b26 decode \u9047\u5230\u65e0\u6cd5\u89e3\u7801\u7684\u5b57\u8282\uff0c\u9ed8\u8ba4\u629b\u51fa UnicodeDecodeError \u4f7f\u7528errors='ignore' \u4f7f\u7528errors='replace',\u65e0\u6cd5\u89e3\u7801\u7684\u88ab\u66ff\u6362\u4e3a In [103]: b'\\xe9'.decode('utf8', errors='ignore') Out[103]: '' In [104]: b'\\xe9'.decode('utf8', errors='replace') Out[104]: ' '","title":"4.\u89e3\u7801\u9519\u8bef\u7684\u5904\u7406\u65b9\u6cd5"},{"location":"python/fluent-python/4.%E6%96%87%E6%9C%AC%E5%92%8C%E5%AD%97%E8%8A%82%E5%BA%8F%E5%88%97/#5","text":"Unicode\u4e09\u660e\u6cbb \u8bfb\u5199\u6587\u4ef6\u663e\u793a\u6307\u5b9a encoding=\u53c2\u6570\uff0c\u4e0d\u8981\u4f9d\u8d56\u9ed8\u8ba4\u7684\u7f16\u7801/\u89e3\u7801\u65b9\u5f0f","title":"5.\u5904\u7406\u6587\u672c\u7684\u6700\u4f73\u5b9e\u8df5"},{"location":"python/fluent-python/4.%E6%96%87%E6%9C%AC%E5%92%8C%E5%AD%97%E8%8A%82%E5%BA%8F%E5%88%97/#6os","text":"os.listdir \u652f\u6301 \u5b57\u7b26\u4e32 \u548c\u5b57\u8282\u5e8f\u5217\u4f5c\u4e3a\u53c2\u6570\uff08\u53cc\u6a21\u5f0fAPI,\u4f8b\u5982 re.complite(rb'xxx')\uff09 In [138]: os.listdir('g:/.') Out[138]: ['wsl_update_x64.msi', '\u65e5\u8bed'] In [139]: os.listdir(b'g:/.') Out[139]: [b'wsl_update_x64.msi', b'\\xe6\\x97\\xa5\\xe8\\xaf\\xad'] \u8fd9\u4e00\u7279\u6027\u5141\u8bb8\u6211\u4eec\u5904\u7406\u4efb\u4f55\u7684\u5b57\u7b26\u4e32\uff0c\u4e0d\u7ba1\u6709\u591a\u5c11\u9b3c\u7b26 os.fsencode \u5982\u679cfilename \u662f str \u7c7b\u578b\uff0c\u8f6c\u5316\u4e3a bytes(\u4f7f\u7528 sys.getfilesystemencoding() \u7684\u7f16\u89e3\u7801\u5668) os.fsdecode \u5982\u679cfilename \u662f bytes \u7c7b\u578b\uff0c\u8f6c\u5316\u4e3a str\uff08\u4f7f\u7528 sys.getfilesystemencoding() \u7684\u7f16\u89e3\u7801\u5668\uff09","title":"6.os \u6a21\u5757\u4e2d\u7684\u5b57\u7b26\u4e32\u548c\u5b57\u8282\u5e8f\u5217"},{"location":"python/fluent-python/6.%20%E4%B8%80%E7%AD%89%E5%87%BD%E6%95%B0%E5%AE%9E%E7%8E%B0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/","text":"1.\u7b56\u7565\u6a21\u5f0f \u5b9a\u4e49\u4e00\u7cfb\u5217\u7b97\u6cd5\uff0c\u5e76\u628a\u5b83\u4eec\u5c01\u88c5\u8d77\u6765\uff0c\u5e76\u4e14\u4f7f\u4ed6\u4eec\u53ef\u4ee5\u76f8\u4e92\u66ff\u6362\u3002 \u672c\u6a21\u5f0f\u53ef\u4ee5\u4f7f\u7b97\u6cd5\u72ec\u7acb\u4e8e\u4f7f\u7528\u5b83\u7684\u7528\u6237\u800c\u53d8\u5316\u3002 \u6bd4\u5982\uff1a\u7535\u5546\u7684\u6298\u6263\u89c4\u5219\uff0c\u4e0d\u540c\u6298\u6263\u4f7f\u7528\u4e0d\u540c\u7684\u7b97\u6cd5\uff0c \u8bbe\u8ba1\u5185\u5bb9\u5305\u62ec\uff1a \u4e0a\u4e0b\u6587 \u5177\u4f53\u7b56\u7565\uff0c\u628a\u7528\u6237\u4e0a\u4e0b\u6587\u4f20\u7ed9\u7b56\u7565\uff0c\u8fdb\u884c\u8ba1\u7b97 2.\"\u547d\u4ee4\u884c\"\u6a21\u5f0f \u547d\u4ee4\u884c\u6a21\u5f0f\u76ee\u7684\u662f\u4e3a\u4e86\u89e3\u8026 \u8c03\u7528\u8005\u548c\u63a5\u6536\u8005\u7684\uff0c\u5728\u4e8c\u8005\u4e2d\u95f4\u653e\u4e00\u4e2a\u65b9\u6cd5\uff0c\u4e0d\u540c\u7684\u8c03\u7528\u8005\u63d0\u4f9b\u4e00\u4e2a\u76f8\u540c\u7684\u63a5\u53e3\uff0c\u65b9\u6cd5\u76f4\u63a5\u8c03\u7528\u8be5\u63a5\u53e3,\u8fd9\u8fb9\u8c03\u7528\u8005\u4e0d\u5fc5\u4e86\u89e3\u63a5\u6536\u8005\u7684\u63a5\u53e3\u3002","title":"6. \u4e00\u7b49\u51fd\u6570\u5b9e\u73b0\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"python/fluent-python/6.%20%E4%B8%80%E7%AD%89%E5%87%BD%E6%95%B0%E5%AE%9E%E7%8E%B0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#1","text":"\u5b9a\u4e49\u4e00\u7cfb\u5217\u7b97\u6cd5\uff0c\u5e76\u628a\u5b83\u4eec\u5c01\u88c5\u8d77\u6765\uff0c\u5e76\u4e14\u4f7f\u4ed6\u4eec\u53ef\u4ee5\u76f8\u4e92\u66ff\u6362\u3002 \u672c\u6a21\u5f0f\u53ef\u4ee5\u4f7f\u7b97\u6cd5\u72ec\u7acb\u4e8e\u4f7f\u7528\u5b83\u7684\u7528\u6237\u800c\u53d8\u5316\u3002 \u6bd4\u5982\uff1a\u7535\u5546\u7684\u6298\u6263\u89c4\u5219\uff0c\u4e0d\u540c\u6298\u6263\u4f7f\u7528\u4e0d\u540c\u7684\u7b97\u6cd5\uff0c \u8bbe\u8ba1\u5185\u5bb9\u5305\u62ec\uff1a \u4e0a\u4e0b\u6587 \u5177\u4f53\u7b56\u7565\uff0c\u628a\u7528\u6237\u4e0a\u4e0b\u6587\u4f20\u7ed9\u7b56\u7565\uff0c\u8fdb\u884c\u8ba1\u7b97","title":"1.\u7b56\u7565\u6a21\u5f0f"},{"location":"python/fluent-python/6.%20%E4%B8%80%E7%AD%89%E5%87%BD%E6%95%B0%E5%AE%9E%E7%8E%B0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#2","text":"\u547d\u4ee4\u884c\u6a21\u5f0f\u76ee\u7684\u662f\u4e3a\u4e86\u89e3\u8026 \u8c03\u7528\u8005\u548c\u63a5\u6536\u8005\u7684\uff0c\u5728\u4e8c\u8005\u4e2d\u95f4\u653e\u4e00\u4e2a\u65b9\u6cd5\uff0c\u4e0d\u540c\u7684\u8c03\u7528\u8005\u63d0\u4f9b\u4e00\u4e2a\u76f8\u540c\u7684\u63a5\u53e3\uff0c\u65b9\u6cd5\u76f4\u63a5\u8c03\u7528\u8be5\u63a5\u53e3,\u8fd9\u8fb9\u8c03\u7528\u8005\u4e0d\u5fc5\u4e86\u89e3\u63a5\u6536\u8005\u7684\u63a5\u53e3\u3002","title":"2.\"\u547d\u4ee4\u884c\"\u6a21\u5f0f"},{"location":"python/fluent-python/7.%E5%87%BD%E6%95%B0%E8%A3%85%E9%A5%B0%E5%99%A8%E5%92%8C%E9%97%AD%E5%8C%85/","text":"\u88c5\u9970\u5668\u662f\u53ef\u8c03\u7528\u7684\u5bf9\u8c61\uff0c\u5176\u53c2\u6570\u5f0f\u53e6\u4e00\u4e2a\u51fd\u6570\u3002\u7279\u6027\uff1a \u80fd\u628a\u88ab\u88c5\u9970\u7684\u51fd\u6570\u5176\u66ff\u6362\u6210\u53e6\u4e00\u4e2a\u53ef\u8c03\u7528\u7684\u51fd\u6570\u6216\u5bf9\u8c61 \u5728\u52a0\u8f7d\u6a21\u5757\u662f\u7acb\u5373\u6267\u884c 1.\u51fd\u6570\u4f5c\u7528\u57df\u89c4\u5219 python \u4e0d\u8981\u6c42\u58f0\u660e\u53d8\u91cf\uff0c\u4f46\u662f\u5047\u5b9a\u5728\u51fd\u6570\u4e2d\u8d4b\u503c\u7684\u53d8\u91cf\u662f\u5c40\u90e8\u53d8\u91cf\u3002 \u5982\u679c\u5e0c\u671b\u51fd\u6570\u628a\u53d8\u91cf\u5f53\u4f5c\u5168\u5c40\u53d8\u91cf\uff0c\u9700\u8981\u52a0 global\u58f0\u660e\u3002 \u793a\u4f8b\uff1a a = 1 def foo(): \"\"\" >>> foo() Traceback (most recent call last): ... UnboundLocalError: local variable 'a' referenced before assignment \"\"\" print(a) a = 2 2.\u95ed\u5305 \u95ed\u5305\u5c31\u662f\u80fd\u591f\u8bfb\u53d6\u5176\u4ed6\u51fd\u6570\u5185\u90e8\u53d8\u91cf\u7684\u51fd\u6570\u3002\u53ea\u6709\u6d89\u53ca\u5230\u5d4c\u5957\u51fd\u6570\u624d\u4f1a\u6d89\u53ca\u5230\u95ed\u5305\u95ee\u9898\u3002 \u95ed\u5305\u4f1a\u4fdd\u7559\u5b9a\u4e49\u51fd\u6570\u65f6\u81ea\u7531\u53d8\u91cf\uff08free variable\uff09\u7684\u7ed1\u5b9a\uff0c\u8fd9\u6837\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u867d\u7136\u5b9a\u4e49\u4f5c\u7528\u57df\u4e0d\u8d77\u4f5c\u7528\uff0c\u4f46\u662f\u4ecd\u80fd\u4f7f\u7528\u90a3\u4e9b\u7ed1\u5b9a\u3002 \u793a\u4f8b\uff1a def make_average(): \"\"\" >>> avg = make_average() >>> avg(1) 1.0 >>> avg(2) 1.5 \"\"\" numbers = [] def average(new_num): numbers.append(new_num) return sum(numbers) / len(numbers) \u95ed\u5305\uff08numbers\u662f\u81ea\u7531\u53d8\u91cf\uff09 \u4f46\u662f\uff0c\u5982\u679c\u5c06\u5176\u6539\u9020\u6210\u5982\u4e0b\u793a\u4f8b\uff0c\u5c06\u62a5\u9519\uff1a def make_average(): \"\"\" >>> avg = make_average() >>> avg(1) Traceback (most recent call last): ... UnboundLocalError: local variable 'total' referenced before assignment \"\"\" count = 0 total = 0 def average(new_num): total += new_num count += 1 return total / count return average \u56e0\u4e3a\uff0ccount \uff0ctotal \u662f\u4e0d\u53ef\u53d8\u7c7b\u578b\u3002 total += new_num ,\u76f8\u5f53\u4e8e total = total + new_num ,\u5bf9total \u8d4b\u503c\u5bfc\u81f4 \u5176\u53d8\u6210\u4e86\u5c40\u90e8\u53d8\u91cf\u3002 3.nonlocal \u4e3a\u4e86\u89e3\u51b3\u8be5\u95ee\u9898\uff0cpython3,\u5f15\u5165 \u5173\u952e\u5b57 nonlocal \uff0c\u58f0\u660e\u53d8\u91cf\u4e3a\u81ea\u7531\u53d8\u91cf\u3002 \u793a\u4f8b\uff1a def make_average(): count = 0 total = 0 def average(new_num): nonlocal total, count total += new_num count += 1 return total / count return average python2\u53ef\u4ee5\u7528\u53ef\u53d8\u7c7b\u578b\uff08\u5982dict\u89e3\u51b3\uff0cinfo= {\u2018count\u2019:0, 'total': 0}\uff09 5.\u4e00\u4e9b\u6709\u7528\u7684\u88c5\u9970\u5668 \u88c5\u9970\u5668 \u8bf4\u660e property staticmethod classmethod functools.wraps \u5c06\u4f1a\u590d\u5236\u88ab\u4fee\u9970\u7684\u65b9\u6cd5\u7684\u76f8\u5173\u5c5e\u6027\uff08 name , doc \uff09\u5230\u65b0\u7684\u65b9\u6cd5\u3002 functools.lru_cache() LRU(Least Recently Used)\u5b9e\u73b0\u5907\u5fd8\u529f\u80fd\uff0c\u5b83\u628a\u8017\u65f6\u7684\u51fd\u6570\u7ed3\u679c\u5305\u5b58\u8d77\u6765\uff0c\u907f\u514d\u91cd\u590d\u8ba1\u7b97\u3002\u652f\u6301\u53c2\u6570\u914d\u7f6e\uff0cmax_size,typed functools.singledispatch \u5355\u5206\u6d3e\u6cdb\u51fd\u6570\uff1f","title":"7.\u51fd\u6570\u88c5\u9970\u5668\u548c\u95ed\u5305"},{"location":"python/fluent-python/7.%E5%87%BD%E6%95%B0%E8%A3%85%E9%A5%B0%E5%99%A8%E5%92%8C%E9%97%AD%E5%8C%85/#1","text":"python \u4e0d\u8981\u6c42\u58f0\u660e\u53d8\u91cf\uff0c\u4f46\u662f\u5047\u5b9a\u5728\u51fd\u6570\u4e2d\u8d4b\u503c\u7684\u53d8\u91cf\u662f\u5c40\u90e8\u53d8\u91cf\u3002 \u5982\u679c\u5e0c\u671b\u51fd\u6570\u628a\u53d8\u91cf\u5f53\u4f5c\u5168\u5c40\u53d8\u91cf\uff0c\u9700\u8981\u52a0 global\u58f0\u660e\u3002 \u793a\u4f8b\uff1a a = 1 def foo(): \"\"\" >>> foo() Traceback (most recent call last): ... UnboundLocalError: local variable 'a' referenced before assignment \"\"\" print(a) a = 2","title":"1.\u51fd\u6570\u4f5c\u7528\u57df\u89c4\u5219"},{"location":"python/fluent-python/7.%E5%87%BD%E6%95%B0%E8%A3%85%E9%A5%B0%E5%99%A8%E5%92%8C%E9%97%AD%E5%8C%85/#2","text":"\u95ed\u5305\u5c31\u662f\u80fd\u591f\u8bfb\u53d6\u5176\u4ed6\u51fd\u6570\u5185\u90e8\u53d8\u91cf\u7684\u51fd\u6570\u3002\u53ea\u6709\u6d89\u53ca\u5230\u5d4c\u5957\u51fd\u6570\u624d\u4f1a\u6d89\u53ca\u5230\u95ed\u5305\u95ee\u9898\u3002 \u95ed\u5305\u4f1a\u4fdd\u7559\u5b9a\u4e49\u51fd\u6570\u65f6\u81ea\u7531\u53d8\u91cf\uff08free variable\uff09\u7684\u7ed1\u5b9a\uff0c\u8fd9\u6837\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u867d\u7136\u5b9a\u4e49\u4f5c\u7528\u57df\u4e0d\u8d77\u4f5c\u7528\uff0c\u4f46\u662f\u4ecd\u80fd\u4f7f\u7528\u90a3\u4e9b\u7ed1\u5b9a\u3002 \u793a\u4f8b\uff1a def make_average(): \"\"\" >>> avg = make_average() >>> avg(1) 1.0 >>> avg(2) 1.5 \"\"\" numbers = [] def average(new_num): numbers.append(new_num) return sum(numbers) / len(numbers) \u95ed\u5305\uff08numbers\u662f\u81ea\u7531\u53d8\u91cf\uff09 \u4f46\u662f\uff0c\u5982\u679c\u5c06\u5176\u6539\u9020\u6210\u5982\u4e0b\u793a\u4f8b\uff0c\u5c06\u62a5\u9519\uff1a def make_average(): \"\"\" >>> avg = make_average() >>> avg(1) Traceback (most recent call last): ... UnboundLocalError: local variable 'total' referenced before assignment \"\"\" count = 0 total = 0 def average(new_num): total += new_num count += 1 return total / count return average \u56e0\u4e3a\uff0ccount \uff0ctotal \u662f\u4e0d\u53ef\u53d8\u7c7b\u578b\u3002 total += new_num ,\u76f8\u5f53\u4e8e total = total + new_num ,\u5bf9total \u8d4b\u503c\u5bfc\u81f4 \u5176\u53d8\u6210\u4e86\u5c40\u90e8\u53d8\u91cf\u3002","title":"2.\u95ed\u5305"},{"location":"python/fluent-python/7.%E5%87%BD%E6%95%B0%E8%A3%85%E9%A5%B0%E5%99%A8%E5%92%8C%E9%97%AD%E5%8C%85/#3nonlocal","text":"\u4e3a\u4e86\u89e3\u51b3\u8be5\u95ee\u9898\uff0cpython3,\u5f15\u5165 \u5173\u952e\u5b57 nonlocal \uff0c\u58f0\u660e\u53d8\u91cf\u4e3a\u81ea\u7531\u53d8\u91cf\u3002 \u793a\u4f8b\uff1a def make_average(): count = 0 total = 0 def average(new_num): nonlocal total, count total += new_num count += 1 return total / count return average python2\u53ef\u4ee5\u7528\u53ef\u53d8\u7c7b\u578b\uff08\u5982dict\u89e3\u51b3\uff0cinfo= {\u2018count\u2019:0, 'total': 0}\uff09","title":"3.nonlocal"},{"location":"python/fluent-python/7.%E5%87%BD%E6%95%B0%E8%A3%85%E9%A5%B0%E5%99%A8%E5%92%8C%E9%97%AD%E5%8C%85/#5","text":"\u88c5\u9970\u5668 \u8bf4\u660e property staticmethod classmethod functools.wraps \u5c06\u4f1a\u590d\u5236\u88ab\u4fee\u9970\u7684\u65b9\u6cd5\u7684\u76f8\u5173\u5c5e\u6027\uff08 name , doc \uff09\u5230\u65b0\u7684\u65b9\u6cd5\u3002 functools.lru_cache() LRU(Least Recently Used)\u5b9e\u73b0\u5907\u5fd8\u529f\u80fd\uff0c\u5b83\u628a\u8017\u65f6\u7684\u51fd\u6570\u7ed3\u679c\u5305\u5b58\u8d77\u6765\uff0c\u907f\u514d\u91cd\u590d\u8ba1\u7b97\u3002\u652f\u6301\u53c2\u6570\u914d\u7f6e\uff0cmax_size,typed functools.singledispatch \u5355\u5206\u6d3e\u6cdb\u51fd\u6570\uff1f","title":"5.\u4e00\u4e9b\u6709\u7528\u7684\u88c5\u9970\u5668"},{"location":"%E5%85%B6%E4%BB%96/git/","text":"tag \u6dfb\u52a0 # \u672c\u5730\u6dfb\u52a0 git tag v1.0.0 # \u63a8\u9001tag git push --tags \u5220\u9664 # \u5220\u9664\u672c\u5730 git tag -d v1.0.0 # \u5220\u9664\u8fdc\u7a0b git push origin :refs/tags/v1.0.0","title":"Git"},{"location":"%E5%85%B6%E4%BB%96/git/#tag","text":"\u6dfb\u52a0 # \u672c\u5730\u6dfb\u52a0 git tag v1.0.0 # \u63a8\u9001tag git push --tags \u5220\u9664 # \u5220\u9664\u672c\u5730 git tag -d v1.0.0 # \u5220\u9664\u8fdc\u7a0b git push origin :refs/tags/v1.0.0","title":"tag"},{"location":"%E5%85%B6%E4%BB%96/redis/","text":"\u54e8\u5175\u6a21\u5f0f\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6a21\u5f0f\uff0c\u9996\u5148Redis\u63d0\u4f9b\u4e86\u54e8\u5175\u7684\u547d\u4ee4\uff0c\u54e8\u5175\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u8fdb\u7a0b\uff0c\u4f5c\u4e3a\u8fdb\u7a0b\uff0c\u5b83\u4f1a\u72ec\u7acb\u8fd0\u884c\u3002\u5176\u539f\u7406\u662f \u54e8\u5175\u901a\u8fc7\u53d1\u9001\u547d\u4ee4\uff0c\u7b49\u5f85 Redis \u670d\u52a1\u5668\u54cd\u5e94\uff0c\u4ece\u800c\u76d1\u63a7\u8fd0\u884c\u7684\u591a\u4e2a Redis \u5b9e\u4f8b\u3002 \u54e8\u5175\u6709\u4e24\u4e2a\u4f5c\u7528 \u901a\u8fc7\u53d1\u9001\u547d\u4ee4\uff0c\u8ba9Redis\u670d\u52a1\u5668\u8fd4\u56de\u76d1\u63a7\u5176\u8fd0\u884c\u72b6\u6001\uff0c\u5305\u62ec\u4e3b\u670d\u52a1\u5668\u548c\u4ece\u670d\u52a1\u5668\u3002 \u5f53\u54e8\u5175\u76d1\u6d4b\u5230master\u5b95\u673a\uff0c\u4f1a\u81ea\u52a8\u5c06slave\u5207\u6362\u6210master\uff0c\u7136\u540e\u901a\u8fc7 \u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f \u901a\u77e5\u5176\u4ed6\u7684\u4ece\u670d\u52a1\u5668\uff0c\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff0c\u8ba9\u5b83\u4eec\u5207\u6362\u4e3b\u673a\u3002 \u7136\u800c\u4e00\u4e2a\u54e8\u5175\u8fdb\u7a0b\u53ef\u80fd\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u4e3a\u6b64\uff0c\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2a\u54e8\u5175\u8fdb\u884c\u76d1\u63a7\u3002 \u5404\u4e2a\u54e8\u5175\u4e4b\u95f4\u8fd8\u4f1a\u8fdb\u884c\u76d1\u63a7\uff0c\u8fd9\u6837\u5c31\u5f62\u6210\u4e86\u591a\u54e8\u5175\u6a21\u5f0f\u3002 \u5047\u8bbe\u4e3b\u670d\u52a1\u5668\u5b95\u673a\uff0c\u54e8\u51751\u5148\u68c0\u6d4b\u5230\u8fd9\u4e2a\u7ed3\u679c\uff0c\u7cfb\u7edf\u5e76\u4e0d\u4f1a\u9a6c\u4e0a\u8fdb\u884cfailover\u8fc7\u7a0b\uff0c\u4ec5\u4ec5\u662f\u54e8\u51751\u4e3b\u89c2\u7684\u8ba4\u4e3a\u4e3b\u670d\u52a1\u5668\u4e0d\u53ef\u7528\uff0c\u8fd9\u4e2a\u73b0\u8c61\u6210\u4e3a \u4e3b\u89c2\u4e0b\u7ebf \u3002 \u5f53\u540e\u9762\u7684\u54e8\u5175\u4e5f\u68c0\u6d4b\u5230\u4e3b\u670d\u52a1\u5668\u4e0d\u53ef\u7528\uff0c\u5e76\u4e14\u6570\u91cf\u8fbe\u5230\u4e00\u5b9a\u503c\u65f6\uff0c\u90a3\u4e48\u54e8\u5175\u4e4b\u95f4\u5c31\u4f1a\u8fdb\u884c\u4e00\u6b21\u6295\u7968\uff0c\u6295\u7968\u7684\u7ed3\u679c\u7531\u4e00\u4e2a\u54e8\u5175\u53d1\u8d77\uff0c\u8fdb\u884cfailover\u64cd\u4f5c\u3002 \u5207\u6362\u6210\u529f\u540e\uff0c\u5c31\u4f1a\u901a\u8fc7\u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f\uff0c\u8ba9\u5404\u4e2a\u54e8\u5175\u628a\u81ea\u5df1\u76d1\u63a7\u7684\u4ece\u670d\u52a1\u5668\u5b9e\u73b0\u5207\u6362\u4e3b\u673a\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a \u5ba2\u89c2\u4e0b\u7ebf \u3002","title":"Redis"},{"location":"%E5%85%B6%E4%BB%96/%E5%9B%BE%E5%BA%8A/","text":"Gitee # gitee private token -----------------------------------------+ # gitee repo --------------------------+ | # gitee user space --------+ | | # | | | fp-utils-ext gitee-upload -u zbw2535463841 -r images-bed -t xxxxx <file\u2014path>","title":"\u56fe\u5e8a"},{"location":"%E5%85%B6%E4%BB%96/%E5%9B%BE%E5%BA%8A/#gitee","text":"# gitee private token -----------------------------------------+ # gitee repo --------------------------+ | # gitee user space --------+ | | # | | | fp-utils-ext gitee-upload -u zbw2535463841 -r images-bed -t xxxxx <file\u2014path>","title":"Gitee"},{"location":"%E7%AE%97%E6%B3%95/1.%E6%A6%82%E8%BF%B0/","text":"\u7b97\u6cd5\uff08Algorithm\uff09\u662f\u6307\u89e3\u9898\u65b9\u6848\u7684\u51c6\u786e\u800c\u5b8c\u6574\u7684\u63cf\u8ff0\uff0c\u662f\u4e00\u7cfb\u5217\u89e3\u51b3\u95ee\u9898\u7684\u6e05\u6670\u6307\u4ee4\uff0c\u7b97\u6cd5\u4ee3\u8868\u7740\u7528\u7cfb\u7edf\u7684\u65b9\u6cd5\u63cf\u8ff0\u89e3\u51b3\u95ee\u9898\u7684\u7b56\u7565\u673a\u5236\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u80fd\u591f\u5bf9\u4e00\u5b9a\u89c4\u8303\u7684\u8f93\u5165\uff0c\u5728\u6709\u9650\u65f6\u95f4\u5185\u83b7\u5f97\u6240\u8981\u6c42\u7684\u8f93\u51fa\u3002\u5982\u679c\u4e00\u4e2a\u7b97\u6cd5\u6709\u7f3a\u9677\uff0c\u6216\u4e0d\u9002\u5408\u4e8e\u67d0\u4e2a\u95ee\u9898\uff0c\u6267\u884c\u8fd9\u4e2a\u7b97\u6cd5\u5c06\u4e0d\u4f1a\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u4e0d\u540c\u7684\u7b97\u6cd5\u53ef\u80fd\u7528\u4e0d\u540c\u7684\u65f6\u95f4\u3001\u7a7a\u95f4\u6216\u6548\u7387\u6765\u5b8c\u6210\u540c\u6837\u7684\u4efb\u52a1\u3002 \u4e00\u4e2a\u7b97\u6cd5\u7684\u4f18\u52a3\u53ef\u4ee5\u7528 \u7a7a\u95f4\u590d\u6742\u5ea6 \u4e0e \u65f6\u95f4\u590d\u6742\u5ea6 \u6765\u8861\u91cf\u3002","title":"1.\u6982\u8ff0"},{"location":"%E7%AE%97%E6%B3%95/2.%E6%8E%92%E5%BA%8F/","text":"\u5192\u6ce1\u6392\u5e8f def bubble_sort(array): for i in range(len(array)): for j in range(i, len(array)): if array[j] < array[i]: tmp = array[i] array[i], array[j] = array[j], tmp return array \u9009\u62e9\u6392\u5e8f \u6bcf\u4e00\u8f6e\u53ea\u8fdb\u884c\u4e00\u6b21\u5143\u7d20\u7684\u4ea4\u6362 def select_sort(array): for i in range(len(array)): min_index = i for j in range(i, len(array)): if array[j] < array[min_index]: min_index = j array[i], array[min_index] = array[min_index], array[i] return array \u5feb\u901f\u6392\u5e8f \u5feb\u901f\u6392\u5e8f\u662fC.R.A.Hoare\u4e8e1962\u5e74\u63d0\u51fa\u7684\u4e00\u79cd\u5212\u5206\u4ea4\u6362\u6392\u5e8f\u3002\u5b83\u91c7\u7528\u4e86\u4e00\u79cd\u5206\u6cbb\u7684\u7b56\u7565\uff0c\u901a\u5e38\u79f0\u5176\u4e3a\u5206\u6cbb\u6cd5(Divide-and-ConquerMethod)\u3002 \u8be5\u65b9\u6cd5\u7684\u57fa\u672c\u601d\u60f3\u662f\uff1a \u5148\u4ece\u6570\u5217\u4e2d\u53d6\u51fa\u4e00\u4e2a\u6570\u4f5c\u4e3a\u57fa\u51c6\u6570\u3002 \u5206\u533a\u8fc7\u7a0b\uff0c\u5c06\u6bd4\u8fd9\u4e2a\u6570\u5927\u7684\u6570\u5168\u653e\u5230\u5b83\u7684\u53f3\u8fb9\uff0c\u5c0f\u4e8e\u6216\u7b49\u4e8e\u5b83\u7684\u6570\u5168\u653e\u5230\u5b83\u7684\u5de6\u8fb9\u3002 \u518d\u5bf9\u5de6\u53f3\u533a\u95f4\u91cd\u590d\u7b2c\u4e8c\u6b65\uff0c\u76f4\u5230\u5404\u533a\u95f4\u53ea\u6709\u4e00\u4e2a\u6570\u3002 def quick_sort(array, left, right): if left >= right: return _left = left _right = right compare = array[left] while _left < _right: while _left < _right and array[_right] >= compare: _right -= 1 if _left < _right: array[_left] = array[_right] _left += 1 while _left < _right and array[_left] < compare: _left += 1 if _left < _right: array[_right] = array[_left] _right -= 1 array[_left] = compare quick_sort(array, left, _left - 1) quick_sort(array, _left + 1, right) return _left \u5f52\u5e76\u6392\u5e8f \u5f52\u5e76\u6392\u5e8f\uff08Merge sort\uff09\u662f\u5efa\u7acb\u5728\u5f52\u5e76\u64cd\u4f5c\u4e0a\u7684\u4e00\u79cd\u6709\u6548\u7684\u6392\u5e8f\u7b97\u6cd5\u3002 \u8be5\u7b97\u6cd5\u662f\u91c7\u7528\u5206\u6cbb\u6cd5\uff08Divide and Conquer\uff09\u7684\u4e00\u4e2a\u975e\u5e38\u5178\u578b\u7684\u5e94\u7528\u3002 def merge_sort(array): array_temp = array[:] def sort(left, right): if not left < right: return middle = int((right + left) / 2) sort(left, middle) if left != middle: sort(middle, right) # merge list array[left:right] middle = int((right + left) / 2) left_array = array_temp[left:middle] right_array = array_temp[middle:right] index = left while left_array and right_array: if left_array[0] <= right_array[0]: array_temp[index] = left_array.pop(0) else: array_temp[index] = right_array.pop(0) index += 1 for num in (left_array or right_array): array_temp[index] = num index += 1 sort(0, len(array_temp)) return array_temp","title":"2.\u6392\u5e8f"},{"location":"%E7%AE%97%E6%B3%95/2.%E6%8E%92%E5%BA%8F/#_1","text":"def bubble_sort(array): for i in range(len(array)): for j in range(i, len(array)): if array[j] < array[i]: tmp = array[i] array[i], array[j] = array[j], tmp return array","title":"\u5192\u6ce1\u6392\u5e8f"},{"location":"%E7%AE%97%E6%B3%95/2.%E6%8E%92%E5%BA%8F/#_2","text":"\u6bcf\u4e00\u8f6e\u53ea\u8fdb\u884c\u4e00\u6b21\u5143\u7d20\u7684\u4ea4\u6362 def select_sort(array): for i in range(len(array)): min_index = i for j in range(i, len(array)): if array[j] < array[min_index]: min_index = j array[i], array[min_index] = array[min_index], array[i] return array","title":"\u9009\u62e9\u6392\u5e8f"},{"location":"%E7%AE%97%E6%B3%95/2.%E6%8E%92%E5%BA%8F/#_3","text":"\u5feb\u901f\u6392\u5e8f\u662fC.R.A.Hoare\u4e8e1962\u5e74\u63d0\u51fa\u7684\u4e00\u79cd\u5212\u5206\u4ea4\u6362\u6392\u5e8f\u3002\u5b83\u91c7\u7528\u4e86\u4e00\u79cd\u5206\u6cbb\u7684\u7b56\u7565\uff0c\u901a\u5e38\u79f0\u5176\u4e3a\u5206\u6cbb\u6cd5(Divide-and-ConquerMethod)\u3002 \u8be5\u65b9\u6cd5\u7684\u57fa\u672c\u601d\u60f3\u662f\uff1a \u5148\u4ece\u6570\u5217\u4e2d\u53d6\u51fa\u4e00\u4e2a\u6570\u4f5c\u4e3a\u57fa\u51c6\u6570\u3002 \u5206\u533a\u8fc7\u7a0b\uff0c\u5c06\u6bd4\u8fd9\u4e2a\u6570\u5927\u7684\u6570\u5168\u653e\u5230\u5b83\u7684\u53f3\u8fb9\uff0c\u5c0f\u4e8e\u6216\u7b49\u4e8e\u5b83\u7684\u6570\u5168\u653e\u5230\u5b83\u7684\u5de6\u8fb9\u3002 \u518d\u5bf9\u5de6\u53f3\u533a\u95f4\u91cd\u590d\u7b2c\u4e8c\u6b65\uff0c\u76f4\u5230\u5404\u533a\u95f4\u53ea\u6709\u4e00\u4e2a\u6570\u3002 def quick_sort(array, left, right): if left >= right: return _left = left _right = right compare = array[left] while _left < _right: while _left < _right and array[_right] >= compare: _right -= 1 if _left < _right: array[_left] = array[_right] _left += 1 while _left < _right and array[_left] < compare: _left += 1 if _left < _right: array[_right] = array[_left] _right -= 1 array[_left] = compare quick_sort(array, left, _left - 1) quick_sort(array, _left + 1, right) return _left","title":"\u5feb\u901f\u6392\u5e8f"},{"location":"%E7%AE%97%E6%B3%95/2.%E6%8E%92%E5%BA%8F/#_4","text":"\u5f52\u5e76\u6392\u5e8f\uff08Merge sort\uff09\u662f\u5efa\u7acb\u5728\u5f52\u5e76\u64cd\u4f5c\u4e0a\u7684\u4e00\u79cd\u6709\u6548\u7684\u6392\u5e8f\u7b97\u6cd5\u3002 \u8be5\u7b97\u6cd5\u662f\u91c7\u7528\u5206\u6cbb\u6cd5\uff08Divide and Conquer\uff09\u7684\u4e00\u4e2a\u975e\u5e38\u5178\u578b\u7684\u5e94\u7528\u3002 def merge_sort(array): array_temp = array[:] def sort(left, right): if not left < right: return middle = int((right + left) / 2) sort(left, middle) if left != middle: sort(middle, right) # merge list array[left:right] middle = int((right + left) / 2) left_array = array_temp[left:middle] right_array = array_temp[middle:right] index = left while left_array and right_array: if left_array[0] <= right_array[0]: array_temp[index] = left_array.pop(0) else: array_temp[index] = right_array.pop(0) index += 1 for num in (left_array or right_array): array_temp[index] = num index += 1 sort(0, len(array_temp)) return array_temp","title":"\u5f52\u5e76\u6392\u5e8f"},{"location":"%E7%AE%97%E6%B3%95/3.N%E5%8F%B0%E9%98%B6%E9%97%AE%E9%A2%98/","text":"\u6709n\u6b65\u53f0\u9636\uff0c\u4e00\u6b21\u53ea\u80fd\u6700\u591a\u8d70 k \u6b65\uff0c\u5171\u6709\u591a\u5c11\u79cd\u8d70\u6cd5 \u521d\u6b65\u5206\u6790, \u5047\u8bbe\u4e00\u6b21\u53ef\u4ee5\u8d701 ~ 4 \u9636\uff0c\u5bf9\u4e8eN\u9636\uff0c\u6709 N \u8d70\u6cd5 \u5408\u8ba1 0 [0] 0 1 [1] 1 2 [1, 1] [2] 2 3 [1, 1, 1] [2, 1] [1,2], [3] 4 4 [1, 1, 1,1] [2, 1,1] [1,2,1] [3, 1] [1, 1, 2] [2,2] [1,3] [4] 8 5 [1, 1, 1,1,1] [2, 1,1,1] [1,2,1,1] [3, 1,1] [1, 1, 2,1] [2,2,1] [1,3,1] [4,1] 8 \u4f7f\u7528\u52a8\u6001\u89c4\u5212\u7684\u601d\u60f3, \u8fdb\u4e00\u6b65\u5206\u6790\uff1a \u5982\u679c N <= K\uff0c\u90a3\u4e48\u7b2cn\u9636\u7684\u8d70\u6cd5\u76f8\u5f53\u4e8e\uff1a \u7b2cn-1\u9636\u7684\u8d70\u6cd5 \uff08\u52691\u4e2a\u53f0\u9636\u4e00\u6b65\u8de8\u5230\u5e95\uff09 \u7b2cn-2\u9636\u7684\u8d70\u6cd5 \uff08\u52692\u4e2a\u53f0\u9636\u4e00\u6b65\u8de8\u5230\u5e95\uff0c\u5982\u679c\u662f\uff081\uff0c1\uff09\u8d70\u6cd5\uff0c\u5c31\u548cn-1 \u7684\u8d70\u6cd5\u91cd\u590d\uff09 \u7b2cn-3\u9636\u7684\u8d70\u6cd5 \uff08\u52693\u4e2a\u53f0\u9636\u4e00\u6b65\u8de8\u5230\u5e95\uff0c\u5148\u8d701\u6b65\u6216\u4e24\u6b65\u90fd\u4f1a\u548c\u524d\u9762\u7684\u6b65\u9aa4\u91cd\u590d\uff09 .... \u518d\u52a0\u4e0a1\u79cd\uff08\u4e00\u6b65\u8de8\u8d8aK\u9636\uff09 \u5373\uff1a $$ \\begin{aligned} a_n =& a_{n-1} + a_{n-2} + ... + a_1 + 1 \\ =& S_{n-1} + 1 \\end{aligned} $$ \u8bc1\u660e\u5f97\u51fa an \u662f\u7b49\u6bd4\u6570\u5217\uff0c\u516c\u6bd4\u4e3a2\uff0c\u5e76\u4e14a1=1 $$ \\begin{aligned} a_{n+1} =& S_n + 1 \\ =& (S_{n-1} + a_n + 1) \\ =&(a_n-1 + a_n + 1) \\ =& 2a_n \\end{aligned} $$ \u5982\u679c N > K\uff0c\u90a3\u4e48\u7b2cn\u6b65\u9aa4\u7684\u8d70\u6cd5\u76f8\u5f53\u4e8e\u524d\u9762\u6240\u6709\u8d70\u6cd5 $$ a_n = a_{n-1} + a_{n-2} + ... + a_{n-k} $$ \u4f8b\u5982 n=k+1\uff0can =ak(\u6700\u540e\u4e00\u6b65\u53ea\u80fd\u4e00\u6b65\u8de8\u5230\u5e95) n=k+2\uff0can =ak+1(\u4e00\u6b21\u8de8\u4e00\u6b65)+ak\uff08\u4e00\u6b21\u8de8\u4e24\u6b65\uff09 \u7b97\u6cd5\u5b9e\u73b0 $$ \\begin{matrix} 1 & 2 & 3 \\ 4 & 5 & 6 \\ 7 & 8 & 9 \\end{matrix} \\tag{1} $$ def n_footstep_recursive(k, n): steps = [2**i for i in range(k)] @functools.lru_cache() def foo(n): if n <= k: return steps[n - 1] else: return sum([foo(i) for i in range(n - k, n)]) return foo(n) \u5f53n\u5230\u4e00\u5b9a\u503c\u65f6\uff0c\u9012\u5f52\u901f\u5ea6\u975e\u5e38\u6162\uff0c\u4f7f\u7528 functools.lru_cache \u88c5\u9970\u5668\u53ef\u4ee5\u52a0\u5feb\u7a0b\u5e8f\u6267\u884c\u901f\u5ea6 def n_footstep(k, n): steps = [0] for i in range(k): steps.append(2 ** i) for i in range(k, n): steps.append(sum(steps[-k:])) return steps[n - 1] \u5047\u8bbe n =20, k = [0,1,2,3\u2026,9],\u7ed3\u679c\u5982\u4e0b \u5047\u8bbe k = 4\uff0c n=[0,1,2, \u2026 ,20],\u7ed3\u679c\u5982\u4e0b:","title":"3.N\u53f0\u9636\u95ee\u9898"},{"location":"%E7%AE%97%E6%B3%95/3.N%E5%8F%B0%E9%98%B6%E9%97%AE%E9%A2%98/#n-k","text":"\u521d\u6b65\u5206\u6790, \u5047\u8bbe\u4e00\u6b21\u53ef\u4ee5\u8d701 ~ 4 \u9636\uff0c\u5bf9\u4e8eN\u9636\uff0c\u6709 N \u8d70\u6cd5 \u5408\u8ba1 0 [0] 0 1 [1] 1 2 [1, 1] [2] 2 3 [1, 1, 1] [2, 1] [1,2], [3] 4 4 [1, 1, 1,1] [2, 1,1] [1,2,1] [3, 1] [1, 1, 2] [2,2] [1,3] [4] 8 5 [1, 1, 1,1,1] [2, 1,1,1] [1,2,1,1] [3, 1,1] [1, 1, 2,1] [2,2,1] [1,3,1] [4,1] 8 \u4f7f\u7528\u52a8\u6001\u89c4\u5212\u7684\u601d\u60f3, \u8fdb\u4e00\u6b65\u5206\u6790\uff1a \u5982\u679c N <= K\uff0c\u90a3\u4e48\u7b2cn\u9636\u7684\u8d70\u6cd5\u76f8\u5f53\u4e8e\uff1a \u7b2cn-1\u9636\u7684\u8d70\u6cd5 \uff08\u52691\u4e2a\u53f0\u9636\u4e00\u6b65\u8de8\u5230\u5e95\uff09 \u7b2cn-2\u9636\u7684\u8d70\u6cd5 \uff08\u52692\u4e2a\u53f0\u9636\u4e00\u6b65\u8de8\u5230\u5e95\uff0c\u5982\u679c\u662f\uff081\uff0c1\uff09\u8d70\u6cd5\uff0c\u5c31\u548cn-1 \u7684\u8d70\u6cd5\u91cd\u590d\uff09 \u7b2cn-3\u9636\u7684\u8d70\u6cd5 \uff08\u52693\u4e2a\u53f0\u9636\u4e00\u6b65\u8de8\u5230\u5e95\uff0c\u5148\u8d701\u6b65\u6216\u4e24\u6b65\u90fd\u4f1a\u548c\u524d\u9762\u7684\u6b65\u9aa4\u91cd\u590d\uff09 .... \u518d\u52a0\u4e0a1\u79cd\uff08\u4e00\u6b65\u8de8\u8d8aK\u9636\uff09 \u5373\uff1a $$ \\begin{aligned} a_n =& a_{n-1} + a_{n-2} + ... + a_1 + 1 \\ =& S_{n-1} + 1 \\end{aligned} $$ \u8bc1\u660e\u5f97\u51fa an \u662f\u7b49\u6bd4\u6570\u5217\uff0c\u516c\u6bd4\u4e3a2\uff0c\u5e76\u4e14a1=1 $$ \\begin{aligned} a_{n+1} =& S_n + 1 \\ =& (S_{n-1} + a_n + 1) \\ =&(a_n-1 + a_n + 1) \\ =& 2a_n \\end{aligned} $$ \u5982\u679c N > K\uff0c\u90a3\u4e48\u7b2cn\u6b65\u9aa4\u7684\u8d70\u6cd5\u76f8\u5f53\u4e8e\u524d\u9762\u6240\u6709\u8d70\u6cd5 $$ a_n = a_{n-1} + a_{n-2} + ... + a_{n-k} $$ \u4f8b\u5982 n=k+1\uff0can =ak(\u6700\u540e\u4e00\u6b65\u53ea\u80fd\u4e00\u6b65\u8de8\u5230\u5e95) n=k+2\uff0can =ak+1(\u4e00\u6b21\u8de8\u4e00\u6b65)+ak\uff08\u4e00\u6b21\u8de8\u4e24\u6b65\uff09","title":"\u6709n\u6b65\u53f0\u9636\uff0c\u4e00\u6b21\u53ea\u80fd\u6700\u591a\u8d70 k \u6b65\uff0c\u5171\u6709\u591a\u5c11\u79cd\u8d70\u6cd5"},{"location":"%E7%AE%97%E6%B3%95/3.N%E5%8F%B0%E9%98%B6%E9%97%AE%E9%A2%98/#_1","text":"$$ \\begin{matrix} 1 & 2 & 3 \\ 4 & 5 & 6 \\ 7 & 8 & 9 \\end{matrix} \\tag{1} $$ def n_footstep_recursive(k, n): steps = [2**i for i in range(k)] @functools.lru_cache() def foo(n): if n <= k: return steps[n - 1] else: return sum([foo(i) for i in range(n - k, n)]) return foo(n) \u5f53n\u5230\u4e00\u5b9a\u503c\u65f6\uff0c\u9012\u5f52\u901f\u5ea6\u975e\u5e38\u6162\uff0c\u4f7f\u7528 functools.lru_cache \u88c5\u9970\u5668\u53ef\u4ee5\u52a0\u5feb\u7a0b\u5e8f\u6267\u884c\u901f\u5ea6 def n_footstep(k, n): steps = [0] for i in range(k): steps.append(2 ** i) for i in range(k, n): steps.append(sum(steps[-k:])) return steps[n - 1] \u5047\u8bbe n =20, k = [0,1,2,3\u2026,9],\u7ed3\u679c\u5982\u4e0b \u5047\u8bbe k = 4\uff0c n=[0,1,2, \u2026 ,20],\u7ed3\u679c\u5982\u4e0b:","title":"\u7b97\u6cd5\u5b9e\u73b0"},{"location":"%E7%AE%97%E6%B3%95/4.%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0%E7%AE%97%E6%B3%95/","text":"def lcm(num1, num2): lcm = max(num1, num2) while lcm % num1 != 0 or lcm % num2 != 0: lcm += 1 return lcm","title":"4.\u6700\u5c0f\u516c\u500d\u6570\u7b97\u6cd5"}]}